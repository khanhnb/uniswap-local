{"version":3,"file":"static/js/4211.12f735b2.chunk.js","mappings":"2UAMA,MAAMA,EAAiBC,EAAAA,iBAAiBC,KAAKC,GAAUA,IACvDH,EAAeI,KAAK,MAEb,MAAMC,EAKT,CACF,CAACC,EAAAA,UAAUC,QAAS,CAClBC,MAAO,OACPC,aAAa,e,cACbC,gBAAiB,CACfC,EAAAA,QAAQC,aACRD,EAAAA,QAAQE,IACRF,EAAAA,QAAQG,KACRH,EAAAA,QAAQI,eACRJ,EAAAA,QAAQK,QACRL,EAAAA,QAAQM,SACRN,EAAAA,QAAQO,QACRP,EAAAA,QAAQQ,eACRR,EAAAA,QAAQS,UACRT,EAAAA,QAAQU,KACR,OAGJ,CAACf,EAAAA,UAAUgB,KAAM,CACfd,MAAO,OACPC,aAAa,e,cACbC,gBAAiBV,GAEnB,CAACM,EAAAA,UAAUiB,QAAS,CAClBf,MAAO,MACPC,aAAa,e,cACbC,gBAAiBV,GAEnB,CAACM,EAAAA,UAAUkB,MAAO,CAChBhB,MAAO,IACPC,aAAa,e,cACbC,gBAAiBV,ICpCfyB,GAAiBC,EAAAA,EAAAA,SAAOC,EAAAA,GAAWC,iBAAe,Y,qEAAC;;;;IAIrD,EAAGC,WAAYA,EAAMC,sBAAsBC,oBAAoB;;;;EAY5D,SAASC,GAAU,UAAEC,EAAS,OAAEC,EAAM,QAAEC,IAC7C,OACE,SAACC,EAAAA,GAAkBA,CAACF,OAAQA,EAAQC,QAASA,E,UAC3C,SAACE,EAAAA,GAAUA,CAACC,IAAI,KAAKC,QAAQ,a,UAC3B,UAACF,EAAAA,GAAUA,CAACE,QAAQ,aAAaD,IAAI,M,WACnC,SAACb,EAAAA,C,UACC,e,sBAAQpB,EAAkB4B,GAAWzB,YAEvC,SAACmB,EAAAA,GAAWa,eAAc,CAACC,WAAY,IAAKC,SAAS,OAAOC,UAAU,O,SACnEtC,EAAkB4B,GAAWxB,oBAM1C,CCvBA,MAaMmC,GAAqBlB,EAAAA,EAAAA,SAAOmB,EAAAA,IAAIA,WAAAA,C,2EAAuB;sBACvC,EAAGhB,WAAYA,EAAMiB;eAC5B,EAAGC,UAASlB,YAAYkB,WAfxBC,EAeyCnB,EAAMoB,QAf7BC,EAAAA,SAAS;;0BAEhBF;;;;4BAIEA;;;;0BAIFA;;GAVZ,IAACA,CAeuD;;EAIhEG,EAASzB,EAAAA,QAAO0B,IAAG,Y,+DAAA;;;;;EAOV,SAASC,GAAY,SAClCC,GAAW,EAAK,UAChBrB,EAAS,oBACTsB,IAMA,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,iBAEbC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IACxCb,EAASc,IAAcD,EAAAA,EAAAA,WAAS,GAEjCE,GAAoBC,EAAAA,EAAAA,GAAY9B,GAEhC+B,GAA+BC,EAAAA,EAAAA,cAClCC,IACCX,EAAoBW,EAAI,GAE1B,CAACX,IAiBH,OAdAY,EAAAA,EAAAA,YAAU,KACJlC,GAIJ0B,GAAe,EAAK,GACnB,CAAC1B,EAAWsB,KAEfY,EAAAA,EAAAA,YAAU,KACJlC,GAAa6B,IAAsB7B,GACrC4B,GAAW,EACb,GACC,CAACC,EAAmB7B,KAGrB,SAACI,EAAAA,GAAUA,CAACC,IAAI,O,UACd,UAAC8B,EAAAA,GAAcA,CAAC9B,IAAI,KAAKgB,SAAUA,E,WACjC,SAACV,EAAAA,CAAmBG,QAASA,EAASsB,eAAgB,IAAMR,GAAW,G,UACrE,UAACS,EAAAA,GAAUA,C,WACT,SAACjC,EAAAA,GAAUA,CAACkC,GAAG,6B,SACXtC,GAUA,sB,WACE,SAACN,EAAAA,GAAWC,gBAAe,CAAC4C,UAAU,qB,UACpC,e,sBAAQnE,EAAkB4B,GAAWzB,YAEvC,SAACiE,EAAAA,GAAGA,CAACC,MAAO,CAAEC,MAAO,cAAeC,UAAW,OAASJ,UAAU,gCAbpE,sB,WACE,SAAC7C,EAAAA,GAAWC,gBAAe,C,UACzB,e,iBAEF,SAACD,EAAAA,GAAWa,eAAc,CAACC,WAAY,IAAKC,SAAS,OAAOC,UAAU,O,UACpE,e,sBAaR,SAACkC,EAAAA,GAAUA,CAAC1C,QAAS,IAAMwB,GAAgBD,GAAciB,MAAM,OAAOG,QAAQ,MAAMC,cAAc,M,SAC/FrB,GAAc,e,eAAsB,e,qBAK1CF,GAAWE,IACV,SAACP,EAAAA,C,SACE,CAAC7C,EAAAA,UAAUC,OAAQD,EAAAA,UAAUgB,IAAKhB,EAAAA,UAAUiB,OAAQjB,EAAAA,UAAUkB,MAAMtB,KAAI,CAAC8E,EAAYC,KACpF,MAAM,gBAAEvE,GAAoBL,EAAkB2E,GAC9C,OAAItE,EAAgBwE,SAAS1B,IAEzB,SAACxB,EAASA,CACRC,UAAW+C,EACX9C,OAAQD,IAAc+C,EACtB7C,QAAS,IAAM6B,EAA6BgB,IACvCC,GAIJ,IAAI,UAOzB,C,6JCpIA,SAASE,IAAAA,OAAAA,EAAAA,OAAAA,QAAAA,SAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,UAAAA,GAAAA,IAAAA,IAAAA,KAAAA,EAAAA,OAAAA,UAAAA,eAAAA,KAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAAA,GAAAA,CAAAA,OAAAA,CAAAA,EAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,MAAAA,EAAAA,MAAAA,CAAAA,EAAAA,IAAAA,EAAAA,EAAAA,EAAAA,SAAAA,EAAAA,GAAAA,GAAAA,MAAAA,EAAAA,MAAAA,CAAAA,EAAAA,IAAAA,EAAAA,EAAAA,EAAAA,CAAAA,EAAAA,EAAAA,OAAAA,KAAAA,GAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,QAAAA,IAAAA,IAAAA,EAAAA,GAAAA,EAAAA,IAAAA,OAAAA,CAAAA,CAAAA,CAAAA,EAAAA,GAAAA,GAAAA,OAAAA,sBAAAA,CAAAA,IAAAA,EAAAA,OAAAA,sBAAAA,GAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,QAAAA,IAAAA,GAAAA,OAAAA,UAAAA,qBAAAA,KAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAAA,GAAAA,CAAAA,OAAAA,CAAAA,CAAAA,IAAAA,GAAAA,EAAAA,EAAAA,aAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,MAAAA,OAAAA,IAAAA,EAAAA,eAAAA,EAAAA,EAAAA,EAAAA,KAAAA,OAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,QAAAA,SAAAA,OAAAA,EAAAA,cAAAA,MAAAA,EAAAA,CAAAA,IAAAA,EAAAA,MAAAA,6BAAAA,MAAAA,EAAAA,OAAAA,EAAAA,QAAAA,YAAAA,KAAAA,OAAAA,OAAAA,EAAAA,YAAAA,IAAAA,cAAAA,QAAAA,eAAAA,SAAAA,GAAAA,EAAAA,cAAAA,OAAAA,CAAAA,GAAAA,IAAAA,GAAAA,KAAAA,GAAAA,KAAAA,GAAAA,OAAAA,IAAAA,EAAAA,UAAAA,CAAAA,MAAAA,IAAAA,OAAAA,KAAAA,IAAAA,UAAAA,CAAAA,IAAAA,OAAAA,IAAAA,UAAAA,EAAAA,YAAAA,QAAAA,IAAAA,EAAAA,E,iCCYT,MAcMC,EAAW1D,EAAAA,QAAO0B,IAAG,Y,sEAAA;;EAIrBiC,GAAc3D,EAAAA,EAAAA,SAAOmD,EAAAA,IAAUA,WAAAA,C,yEAAC;;;EAKhCjC,GAAqBlB,EAAAA,EAAAA,SAAO4D,EAAAA,IAAWA,WAAAA,C,gFAA0C;kBACrE,EAAGpD,SAAQL,WAAYK,GAAUL,EAAM0D;;eAE1C,EAAGxC,UAASlB,YAAYkB,WA1BxBC,EA0ByCnB,EAAMoB,QA1B7BC,EAAAA,SAAS;;0BAEhBF;;;;4BAIEA;;;;0BAIFA;;GAVZ,IAACA,CA0BuD;EAGhEwC,GAAc9D,EAAAA,EAAAA,SAAO+D,EAAAA,GAAcA,WAAAA,C,yEAA2B;;;;;;IAMhE,EAAG5D,WAAYA,EAAMC,sBAAsBC,oBAAoB;;;EAK7D2D,GAAchE,EAAAA,EAAAA,SAAOW,EAAAA,IAAUA,WAAAA,C,yEAAC;;EAIhCsD,GAAajE,EAAAA,EAAAA,SAAOC,EAAAA,GAAWiE,iBAAe,Y,wEAAC;WAC1C,EAAG/D,WAAYA,EAAMgE;;;EAK1BC,GAAcpE,EAAAA,EAAAA,SAAOC,EAAAA,GAAWoE,iBAAe,Y,yEAAwB;WAClE,EAAGlE,QAAOyB,cAAgBA,EAAWzB,EAAMgE,SAAWhE,EAAMmE;;EAyHvE,MArGoB,EAClBC,QACAC,YACAC,YACAC,qBAAoB,EACpBC,qBAAoB,EACpB1B,QACA2B,SACAC,cACAC,QACAC,SACAC,aAGA,MAAOxE,EAAQyE,IAAa/C,EAAAA,EAAAA,WAAS,IAG9BgD,EAAYC,IAAiBjD,EAAAA,EAAAA,UAAS,KACtCkD,EAAeC,IAAoBnD,EAAAA,EAAAA,WAAS,IAG5Cb,EAASc,IAAcD,EAAAA,EAAAA,WAAkB,GAO1CoD,GAAe/C,EAAAA,EAAAA,cAAY,KAC/B8C,GAAiB,GACjBJ,GAAU,GACVJ,EAAYK,E,GACX,CAACA,EAAYL,IAGVU,GAAkBhD,EAAAA,EAAAA,cAAY,KAClC8C,GAAiB,GACjBR,EAAYL,IAAY,GACvB,CAACA,EAAWK,IAETW,GAAkBjD,EAAAA,EAAAA,cAAY,KAClC8C,GAAiB,GACjBR,EAAYJ,IAAY,GACvB,CAACA,EAAWI,IAcf,OAZApC,EAAAA,EAAAA,YAAU,KACJyC,IAAeX,GAAUa,GAC3BK,YAAW,KACTN,EAAcZ,GACdpC,GAAW,GACXsD,YAAW,WACTtD,GAAW,EACb,GAAG,KAAK,GACP,EACL,GACC,CAAC+C,EAAYE,EAAeb,KAG7B,SAACrD,EAAAA,CAAmBG,QAASA,EAASb,OAAQA,EAAQkF,QAnClC,KACpBL,GAAiB,GACjBJ,GAAU,EAAK,EAiC+DU,OAAQL,EAAcrC,MAAOA,E,UACzG,UAACS,EAAAA,C,WACC,UAACM,EAAAA,CAAYnD,QAAQ,a,WACnB,SAACoD,EAAAA,CAAWjD,SAAU,GAAIC,UAAU,S,SACjC6D,KAEH,SAAChB,EAAAA,CACChB,UAAU,eACVyB,MAAOW,EACPlE,SAAS,OACTY,SAAUgD,EACVC,YAAce,IACZT,EAAcS,EAAI,KAGtB,SAAC3B,EAAAA,CAAWjD,SAAU,GAAIC,UAAU,O,UAClC,e,2BACG+D,E,OAAaD,WAKpB,UAACpE,EAAAA,GAAUA,CAACC,IAAI,M,WACZgE,IACA,SAACjB,EAAAA,CAAYkC,cAAY,wBAAwBpF,QAAS+E,EAAiB5D,SAAU+C,E,UACnF,SAACP,EAAAA,CAAYxC,SAAU+C,EAAmB3D,SAAS,O,UACjD,SAAC8E,EAAAA,EAAIA,CAACC,KAAM,UAIhBnB,IACA,SAACjB,EAAAA,CAAYkC,cAAY,wBAAwBpF,QAAS8E,EAAiB3D,SAAU8C,E,UACnF,SAACN,EAAAA,CAAYxC,SAAU8C,EAAmB1D,SAAS,O,UACjD,SAACgF,EAAKA,CAACD,KAAM,gB,sBCvKd,SAASE,GAAc,WACpCC,EAAU,WACVC,EAAU,iBACVC,EAAgB,kBAChBC,EAAiB,kBACjBC,EAAiB,kBACjBC,EAAiB,kBACjBC,EAAiB,kBACjBC,EAAiB,UACjBC,EAAS,UACTC,EAAS,UACTpG,EAAS,aACTqG,IAeA,MAAM7B,GAAU2B,QAAaG,IAAYC,QACnC9B,GAAU2B,QAAaE,IAAYC,QACnCC,EAAWhC,GAAUC,GAAUD,EAAOiC,YAAYhC,GAElDiC,EAAYF,EAAWb,EAAaC,GAAYe,SAChDC,EAAaJ,EAAWZ,EAAaD,GAAYgB,SAEvD,OACE,UAACE,EAAAA,GAAOA,CAACxG,IAAI,K,WACX,SAACyG,EAAWA,CACV9C,MAAOqC,EAAaG,EAAWO,EAAAA,GAAMC,MAAQD,EAAAA,GAAME,OAAS,IAAMP,GAAWQ,cAAc,IAAM,GACjG5C,YAAauB,EACb5B,UAAWuC,EAAWT,EAAoBG,EAC1ChC,UAAWsC,EAAWR,EAAoBC,EAC1C9B,uBAAiCmC,IAAdI,GAA2BL,EAAaG,EAAWO,EAAAA,GAAMC,MAAQD,EAAAA,GAAME,OAC1F7C,uBAAiCkC,IAAdI,GAA2BL,EAAaG,EAAWO,EAAAA,GAAMC,MAAQD,EAAAA,GAAME,OAC1FjH,UAAWA,EACXzB,MAAOmI,EAAY,GAAGN,GAAWe,SAAW,IAC5C5C,OAAO,e,cACPC,OAAQ2B,GAAWgB,OACnB1C,OAAQ2B,GAAWe,UAErB,SAACL,EAAWA,CACV9C,MAAOqC,EAAaG,EAAWO,EAAAA,GAAME,MAAQF,EAAAA,GAAMC,OAAS,SAAMJ,GAAYM,cAAc,IAAM,GAClG5C,YAAawB,EACb7B,UAAWuC,EAAWP,EAAoBD,EAC1C9B,UAAWsC,EAAWN,EAAoBH,EAC1C3B,uBAAkCkC,IAAfM,GAA4BP,EAAaG,EAAWO,EAAAA,GAAME,MAAQF,EAAAA,GAAMC,OAC3F7C,uBAAkCmC,IAAfM,GAA4BP,EAAaG,EAAWO,EAAAA,GAAME,MAAQF,EAAAA,GAAMC,OAC3FhH,UAAWA,EACXzB,MAAOqI,EAAa,GAAGR,GAAWe,SAAW,IAC7C3C,OAAQ2B,GAAWgB,OACnB1C,OAAQ2B,GAAWe,OACnB5C,OAAO,e,kBAIf,C,sGCjEe,SAAS6C,IACtB,MAAM,QAAEC,IAAY7F,EAAAA,EAAAA,gBACd8F,GAAuBC,EAAAA,EAAAA,MACvBC,GAASC,EAAAA,EAAAA,UAAQ,IAAM,CAACJ,QAAWf,IAAY,CAACe,IAChDK,GAAOC,EAAAA,EAAAA,IAAoBL,EAAsB,iBAAkBE,EAAQI,EAAAA,IACjF,OAAOC,QAAQH,GAAMI,SAAS,GAChC,C,sNCRO,MAAMC,EAAUtI,EAAAA,QAAO0B,IAAG,Y,2DAAA;;;EAKpB6G,EAAiBvI,EAAAA,QAAO0B,IAAG,Y,kEAAA;;;;;;IAMpC,EAAGvB,WAAYA,EAAMC,sBAAsBoI,qBAAqB;;;;uCAI7B,EAAGrI,WAAY,GAAGA,EAAMsI,WAAWC;;;;uCAInC,EAAGvI,WAAY,GAAGA,EAAMsI,WAAWE;;;EAK7DjG,GAAiB1C,EAAAA,EAAAA,SAAOW,EAAAA,IAAUA,WAAAA,C,kEAAyB;aAC3D,EAAGiB,cAAgBA,EAAW,MAAQ;oBAC/B,EAAGA,cAAgBA,EAAW,OAAS;EAG9CkC,GAAc9D,EAAAA,EAAAA,SAAO4I,EAAAA,GAAKA,WAAAA,C,+DAAC;sBAClB,EAAGzI,WAAYA,EAAM0I;;;;EAO9BC,EAAuB9I,EAAAA,QAAO0B,IAAG,Y,wEAAmB;;;;;;0BAMvC,EAAGvB,WAAYA,EAAMiB;;IAE3C,EAAGjB,WAAYA,EAAMC,sBAAsBoI,qBAAqB;;;EAKvDO,EAAa/I,EAAAA,QAAO0B,IAAG,Y,8DAAA;IAChC,EAAGvB,WAAYA,EAAMC,sBAAsBoI,qBAAqB;;;uQCpD7D,SAASQ,EAAeC,EAAmBC,EAAoBC,GACpE,GAAKF,GAAcC,GAA8B,kBAATC,EAGxC,OAAOC,EAAAA,EAAAA,aAAYH,EAAWC,EAAYC,EAC5C,C,oCCyBO,SAASE,EACdJ,EACAC,EACA3I,EACAgE,GAEA,IAAK0E,IAAcC,IAAe3I,IAAcgE,EAC9C,OAGF,MAAM+E,EAhCD,SAAuBL,EAAmBC,EAAoB3E,GACnE,IAAK0E,IAAcC,IAAe3E,EAChC,OAGF,IAAKA,EAAMgF,MAAM,eACf,OAGF,MAAOC,EAAOC,GAAYlF,EAAMmF,MAAM,KAEhCC,EAAWF,GAAUG,QAAU,EAC/BC,EAAkBC,IAAAA,QAAaN,GAAS,KAAOC,GAAY,KAEjE,OAAO,IAAIM,EAAAA,MACTd,EACAC,EACAY,IAAAA,SAAcA,IAAAA,OAAY,IAAMH,GAAWG,IAAAA,OAAY,IAAMb,EAAUU,WACvEG,IAAAA,SAAcD,EAAiBC,IAAAA,OAAY,IAAMZ,EAAWS,WAEhE,CAYgBK,CAAcf,EAAWC,EAAY3E,GAEnD,IAAK+E,EACH,OAGF,IAAIH,EAGJ,MAAMc,GAAeC,EAAAA,EAAAA,oBAAmBZ,EAAMa,UAAWb,EAAMc,aAW/D,OAREjB,EADEW,IAAAA,mBAAwBG,EAAcI,EAAAA,SAASC,gBAC1CD,EAAAA,SAASE,SACPT,IAAAA,gBAAqBG,EAAcI,EAAAA,SAASG,gBAC9CH,EAAAA,SAASI,UAGTC,EAAAA,EAAAA,oBAAmBpB,IAGrBqB,EAAAA,EAAAA,mBAAkBxB,EAAMyB,EAAAA,cAAcrK,GAC/C,CC3BO,SAASsK,IACd,OAAOC,EAAAA,EAAAA,IAAgBC,GAAUA,EAAMC,QACzC,CAEO,SAASC,EAAwBC,GAOtC,MAAMC,GAAWC,EAAAA,EAAAA,KAEXC,GAAgB9I,EAAAA,EAAAA,cACnB+I,IACCH,GAASI,EAAAA,EAAAA,IAAU,CAAEC,MAAOC,EAAAA,GAAMC,WAAYJ,aAAYJ,aAA6B,IAAhBA,IAAwB,GAEjG,CAACC,EAAUD,IAGPS,GAAgBpJ,EAAAA,EAAAA,cACnB+I,IACCH,GAASI,EAAAA,EAAAA,IAAU,CAAEC,MAAOC,EAAAA,GAAMG,WAAYN,aAAYJ,aAA6B,IAAhBA,IAAwB,GAEjG,CAACC,EAAUD,KAGNW,EAAcC,IAAmBC,EAAAA,EAAAA,MAiCxC,MAAO,CACLV,gBACAM,gBACAvF,kBAlCuB7D,EAAAA,EAAAA,cACtB+I,IACCH,GAASa,EAAAA,EAAAA,IAAmB,CAAEV,gBAC9B,MAAMW,EAAgBJ,EAAaK,IAAI,cAClCD,GAAkBA,GAAiBA,IAAkBX,KACxDO,EAAaM,IAAI,WAAYb,GAC7BQ,EAAgBD,GAClB,GAEF,CAACV,EAAUU,EAAcC,IA0BzBzF,mBAvBwB9D,EAAAA,EAAAA,cACvB+I,IACCH,GAASiB,EAAAA,EAAAA,IAAoB,CAAEd,gBAC/B,MAAMe,EAAgBR,EAAaK,IAAI,cAClCG,GAAkBA,GAAiBA,IAAkBf,KACxDO,EAAaM,IAAI,WAAYb,GAC7BQ,EAAgBD,GAClB,GAEF,CAACV,EAAUU,EAAcC,IAezBQ,mBAZwB/J,EAAAA,EAAAA,cACvB+I,IACCH,GAASoB,EAAAA,EAAAA,IAAoB,CAAEjB,eAAc,GAE/C,CAACH,IAUL,CAEO,SAASqB,EACd9F,EACAC,EACApG,EACAkM,EAEAC,GA2BA,MAAM,QAAE9E,IAAY7F,EAAAA,EAAAA,iBAEd,iBAAE4K,EAAgB,WAAErB,EAAU,oBAAEsB,EAAmB,qBAAEC,EAAoB,qBAAEC,GAC/EjC,IAEIkC,EAAiBJ,IAAqBlB,EAAAA,GAAMC,WAAaD,EAAAA,GAAMG,WAAaH,EAAAA,GAAMC,WAGlFsB,GAA8ChF,EAAAA,EAAAA,UAClD,KAAO,CACL,CAACyD,EAAAA,GAAMC,YAAahF,EACpB,CAAC+E,EAAAA,GAAMG,YAAajF,KAEtB,CAACD,EAAWC,KAIP5B,EAAQC,EAAQiE,IAAajB,EAAAA,EAAAA,UAClC,IAAM,CAACtB,GAAWI,QAASH,GAAWG,QAAS2F,GAAc3F,UAC7D,CAACJ,EAAWC,EAAW8F,KAGlBQ,EAAQC,IAAUlF,EAAAA,EAAAA,UACvB,IACEjD,GAAUC,EAAUD,EAAOiC,YAAYhC,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAW,MAAC8B,OAAWA,IACtG,CAAC9B,EAAQC,IAILmI,GAAWC,EAAAA,EAAAA,IACfxF,QAAWf,GACXmB,EAAAA,EAAAA,UAAQ,IAAM,CAACgF,EAAWvB,EAAAA,GAAMC,YAAasB,EAAWvB,EAAAA,GAAMG,cAAc,CAACoB,KAEzEK,EAAoE,CACxE,CAAC5B,EAAAA,GAAMC,YAAayB,EAAS,GAC7B,CAAC1B,EAAAA,GAAMG,YAAauB,EAAS,KAIxBG,EAAWC,IAAQC,EAAAA,EAAAA,GAAQR,EAAWvB,EAAAA,GAAMC,YAAasB,EAAWvB,EAAAA,GAAMG,YAAarL,GACxF2K,EAAcoC,IAAcG,EAAAA,EAAUC,WAGtCC,EAAcvF,QAAQa,GAAagE,IAAWhE,EAAU2E,OAAOX,IAG/D3D,GAAyCtB,EAAAA,EAAAA,UAAQ,KAErD,IAAIkD,EAkBF,OAAOqC,GAAQN,EAASM,EAAKM,QAAQZ,QAAUpG,EAlBjD,CACE,MAAMiH,GAAoBC,EAAAA,EAAAA,GAAuBjB,EAAsBa,EAAcV,EAASC,GAC9F,GAAIY,GAAqBb,GAAUC,EAAQ,CACzC,MAAMc,GAAaD,EAAAA,EAAAA,GAAuB,IAAKJ,EAAcT,EAASD,GAChE3D,EACJ0E,GAAcF,EACV,IAAI/D,EAAAA,MACFiE,EAAWC,SACXH,EAAkBG,SAClBD,EAAWE,SACXJ,EAAkBI,eAEpBrH,EACN,OAAQ8G,EAAcrE,GAAOpC,SAAWoC,SAAUzC,CACpD,CAKF,IACC,CAACqE,EAAa4B,EAAsBa,EAAaT,EAAQD,EAAQM,IAG9DY,GAAenG,EAAAA,EAAAA,UAAQ,KAC3B,MAAMiC,EAAeX,GAAQY,EAAAA,EAAAA,oBAAmBZ,EAAMa,UAAWb,EAAMc,kBAAevD,EACtF,OACEyC,GACAW,KAEEH,IAAAA,mBAAwBG,EAAcI,EAAAA,SAASG,iBAC/CV,IAAAA,SAAcG,EAAcI,EAAAA,SAASC,gBAAc,GAGtD,CAAChB,IAGE8E,GAAWpG,EAAAA,EAAAA,UAAQ,KACvB,GAAIjD,GAAUC,GAAUzE,GAAa+I,IAAU6E,EAAc,CAC3D,MAAME,GAAc3D,EAAAA,EAAAA,oBAAmBpB,GACjCgF,EAAcjE,EAAAA,SAASkE,mBAAmBF,GAChD,OAAO,IAAIG,EAAAA,KAAKzJ,EAAQC,EAAQzE,EAAW+N,EAAaxE,IAAAA,OAAY,GAAIuE,EAAa,GACvF,CAEA,GACC,CAAC9N,EAAW4N,EAAc7E,EAAOvE,EAAQC,IAGtCyJ,EAAoClB,GAAQa,EAG5CM,GAAkB1G,EAAAA,EAAAA,UACtB,KAAO,CACL,CAACV,EAAAA,GAAMC,OAAQhH,GAAYoK,EAAAA,EAAAA,mBAAkBN,EAAAA,SAASI,SAAUG,EAAAA,cAAcrK,SAAcsG,EAC5F,CAACS,EAAAA,GAAME,OAAQjH,GAAYoK,EAAAA,EAAAA,mBAAkBN,EAAAA,SAASE,SAAUK,EAAAA,cAAcrK,SAAcsG,KAE9F,CAACtG,IAKGoO,GAAQ3G,EAAAA,EAAAA,UAAQ,KACb,CACL,CAACV,EAAAA,GAAMC,OACkC,kBAAhCmF,GAAkBkC,UACrBlC,EAAiBkC,UACjB,GAAgD,mBAAzB/B,IACrBc,GAA8C,mBAAxBf,EACxB8B,EAAgBpH,EAAAA,GAAMC,OACtBoG,EACAtE,EAAa6D,EAAQD,EAAQ1M,EAAWsM,EAAqBgC,YAC7DxF,EAAa4D,EAAQC,EAAQ3M,EAAWqM,EAAoBiC,YAClE,CAACvH,EAAAA,GAAME,OACkC,kBAAhCkF,GAAkBoC,UACrBpC,EAAiBoC,WACfnB,GAA+C,mBAAzBd,GACvBc,GAA8C,mBAAxBf,EACvB8B,EAAgBpH,EAAAA,GAAME,OACtBmG,EACAtE,EAAa6D,EAAQD,EAAQ1M,EAAWqM,EAAoBiC,YAC5DxF,EAAa4D,EAAQC,EAAQ3M,EAAWsM,EAAqBgC,eAEpE,CACDnC,EACAnM,EACAoN,EACAf,EACAC,EACAI,EACAC,EACAwB,KAGM,CAACpH,EAAAA,GAAMC,OAAQqH,EAAW,CAACtH,EAAAA,GAAME,OAAQsH,GAAcH,GAAS,CAAC,EAGnE/H,GAAeoB,EAAAA,EAAAA,UACnB,KAAO,CACL,CAACV,EAAAA,GAAMC,OAAQhH,GAAaqO,IAAcF,EAAgBnH,MAC1D,CAACD,EAAAA,GAAME,OAAQjH,GAAauO,IAAcJ,EAAgBlH,SAE5D,CAACkH,EAAiBE,EAAWE,EAAWvO,IAIpCwO,EAAe3G,QAA6B,kBAAdwG,GAA+C,kBAAdE,GAA0BF,GAAaE,GAEtGE,GAAgBhH,EAAAA,EAAAA,UAAQ,KACrB,CACL,CAACV,EAAAA,GAAMC,OAAQyB,EAAeiE,EAAQC,EAAQwB,EAAgBnH,OAC9D,CAACD,EAAAA,GAAME,OAAQwB,EAAeiE,EAAQC,EAAQwB,EAAgBlH,UAE/D,CAACyF,EAAQC,EAAQwB,EAAgBnH,MAAOmH,EAAgBlH,QAGrDyH,GAAgBjH,EAAAA,EAAAA,UAAQ,KACrB,CACL,CAACV,EAAAA,GAAMC,OAAQyB,EAAeiE,EAAQC,EAAQyB,EAAMrH,EAAAA,GAAMC,QAC1D,CAACD,EAAAA,GAAME,OAAQwB,EAAeiE,EAAQC,EAAQyB,EAAMrH,EAAAA,GAAME,WAE3D,CAACyF,EAAQC,EAAQyB,KACZ,CAACrH,EAAAA,GAAMC,OAAQ2H,EAAY,CAAC5H,EAAAA,GAAME,OAAQ2H,GAAeF,EAG3DG,EAAahH,SAChB2G,GAAgBzF,GAAS4F,GAAcC,IAAe7F,EAAM+F,SAASH,IAAe5F,EAAMgG,YAAYH,KAInGI,IAA0DxB,EAAAA,EAAAA,GAC9DzC,EACA0B,EAAWL,IAGP6C,IAAwDxH,EAAAA,EAAAA,UAAQ,KAEpE,MAAMyH,EAA2BF,IAAmBzI,QAC9C4I,EAAoB3C,IAAmBtB,EAAAA,GAAMG,WAAajF,EAAYD,EAC5E,GACE6I,IACAE,GACqB,kBAAdb,GACc,kBAAdE,GACPL,EACA,CAEA,GAAIW,GAAcL,EAChB,OAGF,MAAMY,EAAiCF,EAAyBxB,SAASL,OAAOa,EAAgBxB,QAC5F2C,EAAAA,SAASC,YAAY,CACnBtC,KAAMkB,EACNG,YACAE,YACAgB,QAASP,GAAkBrB,SAC3B6B,kBAAkB,IAEpBH,EAAAA,SAASI,YAAY,CACnBzC,KAAMkB,EACNG,YACAE,YACAmB,QAASV,GAAkBrB,WAG3BgC,EAAuBT,EAAyBxB,SAASL,OAAOa,EAAgBxB,QAClF0C,EAASM,QACTN,EAASG,QACb,OAAOJ,GAAqBS,EAAAA,eAAeC,cAAcV,EAAmBQ,EAAqBhC,SACnG,CAEgB,GACf,CACDqB,GACAH,EACArC,EACApG,EACAD,EACAkI,EACAE,EACAL,EACAM,IAGIsB,IAA4ErI,EAAAA,EAAAA,UAAQ,KACjF,CACL,CAACyD,EAAAA,GAAMC,YAAaiB,IAAqBlB,EAAAA,GAAMC,WAAa6D,GAAoBC,GAChF,CAAC/D,EAAAA,GAAMG,YAAae,IAAqBlB,EAAAA,GAAMC,WAAa8D,GAAkBD,MAE/E,CAACC,GAAiBD,GAAmB5C,IAGlC2D,GAAmBlI,QACF,kBAAd0G,GAA0BL,GAAmBA,EAAgB8B,aAAezB,GAE/E0B,GAAmBpI,QACF,kBAAdwG,GAA0BH,GAAmBA,EAAgB8B,aAAe3B,GAI/E6B,GACJ1B,GACA3G,QACE,IAAqBqG,GAAmB1J,GAAU0J,EAAgBxB,OAAOW,OAAO7I,IAC7EyL,IAAoB/B,GAAmB1J,GAAU0J,EAAgBvB,OAAOU,OAAO7I,IAEhF2L,GACJ3B,GACA3G,QACE,IAAqBqG,GAAmBzJ,GAAUyJ,EAAgBxB,OAAOW,OAAO5I,IAC7EwL,IAAoB/B,GAAmBzJ,GAAUyJ,EAAgBvB,OAAOU,OAAO5I,IAIhF2K,IAAiC3H,EAAAA,EAAAA,UAAQ,KAC7C,IACGyG,IACA1J,IACAC,GACoB,kBAAd4J,GACc,kBAAdE,GACPC,EAEA,OAIF,MAAMe,EAAWQ,GAEbK,EAAAA,GADAN,KAAgBtL,EAAO6I,OAAOa,EAAgBxB,QAAUxB,EAAAA,GAAMC,WAAaD,EAAAA,GAAMG,aAAasC,SAE5F+B,EAAWO,GAEbG,EAAAA,GADAN,KAAgBtL,EAAO6I,OAAOa,EAAgBxB,QAAUxB,EAAAA,GAAMG,WAAaH,EAAAA,GAAMC,aAAawC,SAGlG,YAAgBrH,IAAZiJ,QAAqCjJ,IAAZoJ,EACpBL,EAAAA,SAASgB,YAAY,CAC1BrD,KAAMkB,EACNG,YACAE,YACAgB,UACAG,UACAF,kBAAkB,SAGpB,CACF,GACC,CACDM,GACA5B,EACA1J,EACAC,EACAsL,GACAE,GACAzB,EACAH,EACAE,IAGF,IAAI+B,GACCjJ,IACHiJ,IAAe,e,eAGbvD,IAAcG,EAAAA,EAAUqD,UAC1BD,GAAeA,KAAgB,e,eAG7B1C,IACF0C,GAAeA,KAAgB,e,gBAI7BR,GAAc5E,EAAAA,GAAMC,aAAgB+E,MACpCJ,GAAc5E,EAAAA,GAAMG,aAAgB8E,MAEtCG,GAAeA,KAAgB,e,eAGjC,MAAQ,CAACpF,EAAAA,GAAMC,YAAaqF,GAAiB,CAACtF,EAAAA,GAAMG,YAAaoF,IAAoBX,GAEjFU,IAAmB1D,IAAmB5B,EAAAA,GAAMC,aAAa2D,SAAS0B,MACpEF,IAAe,e,sBAAqB7D,EAAWvB,EAAAA,GAAMC,aAAahE,WAGhEsJ,IAAmB3D,IAAmB5B,EAAAA,GAAMG,aAAayD,SAAS2B,MACpEH,IAAe,e,sBAAqB7D,EAAWvB,EAAAA,GAAMG,aAAalE,WAGpE,MAAMuJ,GAAc3D,IAAcG,EAAAA,EAAUqD,QAE5C,MAAO,CACL/D,iBACAC,aACAO,OACAD,YACAD,mBACAgD,iBACA1B,QACArF,QACA2F,gBACAD,gBACAW,YACAzE,cACA2F,gBACAI,eACAlC,eACAK,aACAqB,oBACAC,oBACA/C,cACA/G,eAEJ,CAEO,SAASsK,EACdzE,EACA0E,EACA5Q,EACAqO,EACAE,EACAvB,GAEA,MAAMpC,GAAWC,EAAAA,EAAAA,KAEXnC,GAAYjB,EAAAA,EAAAA,UAAQ,IAAMyE,GAAc3F,SAAS,CAAC2F,IAClDvD,GAAalB,EAAAA,EAAAA,UAAQ,IAAMmJ,GAAerK,SAAS,CAACqK,IA0D1D,MAAO,CAAE7K,mBAxDiB/D,EAAAA,EAAAA,cAAY,KACpC,GAAI0G,GAAaC,GAAmC,kBAAd0F,GAA0BrO,EAAW,CAEzE,OADiB6I,EAAAA,EAAAA,aAAYH,EAAWC,EAAY0F,EAAYhE,EAAAA,cAAcrK,IAC9DkH,cAAc,OAAGZ,EAAWuK,EAAAA,SAASC,SACvD,CAEA,GAA2B,kBAAdzC,GAA2B3F,GAAaC,GAAc3I,GAAagN,EAAM,CAEpF,OADiBnE,EAAAA,EAAAA,aAAYH,EAAWC,EAAYqE,EAAKgD,YAAc3F,EAAAA,cAAcrK,IACrEkH,cAAc,OAAGZ,EAAWuK,EAAAA,SAASC,SACvD,CACA,MAAO,EAAE,GACR,CAACpI,EAAWC,EAAY0F,EAAWrO,EAAWgN,IA6CrBhH,mBA3CFhE,EAAAA,EAAAA,cAAY,KACpC,GAAI0G,GAAaC,GAAmC,kBAAd0F,GAA0BrO,EAAW,CAEzE,OADiB6I,EAAAA,EAAAA,aAAYH,EAAWC,EAAY0F,EAAYhE,EAAAA,cAAcrK,IAC9DkH,cAAc,OAAGZ,EAAWuK,EAAAA,SAASC,SACvD,CAEA,GAA2B,kBAAdzC,GAA2B3F,GAAaC,GAAc3I,GAAagN,EAAM,CAEpF,OADiBnE,EAAAA,EAAAA,aAAYH,EAAWC,EAAYqE,EAAKgD,YAAc3F,EAAAA,cAAcrK,IACrEkH,cAAc,OAAGZ,EAAWuK,EAAAA,SAASC,SACvD,CACA,MAAO,EAAE,GACR,CAACpI,EAAWC,EAAY0F,EAAWrO,EAAWgN,IAgCF/G,mBA9BrBjE,EAAAA,EAAAA,cAAY,KACpC,GAAI0G,GAAaC,GAAmC,kBAAd4F,GAA0BvO,EAAW,CAEzE,OADiB6I,EAAAA,EAAAA,aAAYH,EAAWC,EAAY4F,EAAYlE,EAAAA,cAAcrK,IAC9DkH,cAAc,OAAGZ,EAAWuK,EAAAA,SAASC,SACvD,CAEA,GAA2B,kBAAdvC,GAA2B7F,GAAaC,GAAc3I,GAAagN,EAAM,CAEpF,OADiBnE,EAAAA,EAAAA,aAAYH,EAAWC,EAAYqE,EAAKgD,YAAc3F,EAAAA,cAAcrK,IACrEkH,cAAc,OAAGZ,EAAWuK,EAAAA,SAASC,SACvD,CACA,MAAO,EAAE,GACR,CAACpI,EAAWC,EAAY4F,EAAWvO,EAAWgN,IAmBiB9G,mBAjBxClE,EAAAA,EAAAA,cAAY,KACpC,GAAI0G,GAAaC,GAAmC,kBAAd4F,GAA0BvO,EAAW,CAEzE,OADiB6I,EAAAA,EAAAA,aAAYH,EAAWC,EAAY4F,EAAYlE,EAAAA,cAAcrK,IAC9DkH,cAAc,OAAGZ,EAAWuK,EAAAA,SAASC,SACvD,CAEA,GAA2B,kBAAdvC,GAA2B7F,GAAaC,GAAc3I,GAAagN,EAAM,CAEpF,OADiBnE,EAAAA,EAAAA,aAAYH,EAAWC,EAAYqE,EAAKgD,YAAc3F,EAAAA,cAAcrK,IACrEkH,cAAc,OAAGZ,EAAWuK,EAAAA,SAASC,SACvD,CACA,MAAO,EAAE,GACR,CAACpI,EAAWC,EAAY4F,EAAWvO,EAAWgN,IAMoC+D,iBAJ7D/O,EAAAA,EAAAA,cAAY,KAClC4I,GAASoG,EAAAA,EAAAA,MAAe,GACvB,CAACpG,IAGN,C","sources":["components/FeeSelector/shared.tsx","components/FeeSelector/FeeOption.tsx","components/FeeSelector/index.tsx","../node_modules/react-feather/dist/icons/minus.js","components/InputStepCounter/InputStepCounter.tsx","components/RangeSelector/index.tsx","hooks/useIsArgentWallet.ts","pages/AddLiquidity/styled.tsx","utils/getTickToPrice.ts","state/mint/v3/utils.ts","state/mint/v3/hooks.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { ChainId, SUPPORTED_CHAINS } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport type { ReactNode } from 'react'\n\n// convert SUPPORTED_CHAINS to number[]\nconst supportedChain = SUPPORTED_CHAINS.map((chain) => chain)\nsupportedChain.push(1022)\n\nexport const FEE_AMOUNT_DETAIL: Record<\n  FeeAmount,\n  // { label: string; description: ReactNode; supportedChains: readonly ChainId[] }\n  // TODO: refactor this\n  { label: string; description: ReactNode; supportedChains: number[]}\n> = {\n  [FeeAmount.LOWEST]: {\n    label: '0.01',\n    description: <Trans>Best for very stable pairs.</Trans>,\n    supportedChains: [\n      ChainId.ARBITRUM_ONE,\n      ChainId.BNB,\n      ChainId.CELO,\n      ChainId.CELO_ALFAJORES,\n      ChainId.MAINNET,\n      ChainId.OPTIMISM,\n      ChainId.POLYGON,\n      ChainId.POLYGON_MUMBAI,\n      ChainId.AVALANCHE,\n      ChainId.BASE,\n      1022\n    ],\n  },\n  [FeeAmount.LOW]: {\n    label: '0.05',\n    description: <Trans>Best for stable pairs.</Trans>,\n    supportedChains: supportedChain,\n  },\n  [FeeAmount.MEDIUM]: {\n    label: '0.3',\n    description: <Trans>Best for most pairs.</Trans>,\n    supportedChains: supportedChain,\n  },\n  [FeeAmount.HIGH]: {\n    label: '1',\n    description: <Trans>Best for exotic pairs.</Trans>,\n    supportedChains: supportedChain,\n  },\n}\n","import { Trans } from '@lingui/macro'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { ButtonRadioChecked } from 'components/Button'\nimport { AutoColumn } from 'components/Column'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { FEE_AMOUNT_DETAIL } from './shared'\n\nconst ResponsiveText = styled(ThemedText.DeprecatedLabel)`\n  line-height: 16px;\n  font-size: 14px;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    font-size: 12px;\n    line-height: 12px;\n  `};\n`\n\ninterface FeeOptionProps {\n  feeAmount: FeeAmount\n  active: boolean\n  onClick: () => void\n}\n\nexport function FeeOption({ feeAmount, active, onClick }: FeeOptionProps) {\n  return (\n    <ButtonRadioChecked active={active} onClick={onClick}>\n      <AutoColumn gap=\"sm\" justify=\"flex-start\">\n        <AutoColumn justify=\"flex-start\" gap=\"6px\">\n          <ResponsiveText>\n            <Trans>{FEE_AMOUNT_DETAIL[feeAmount].label}%</Trans>\n          </ResponsiveText>\n          <ThemedText.DeprecatedMain fontWeight={485} fontSize=\"12px\" textAlign=\"left\">\n            {FEE_AMOUNT_DETAIL[feeAmount].description}\n          </ThemedText.DeprecatedMain>\n        </AutoColumn>\n      </AutoColumn>\n    </ButtonRadioChecked>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { ButtonGray } from 'components/Button'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween } from 'components/Row'\nimport usePrevious from 'hooks/usePrevious'\nimport { DynamicSection } from 'pages/AddLiquidity/styled'\nimport { useCallback, useEffect, useState } from 'react'\nimport { Box } from 'rebass'\nimport styled, { keyframes } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { FeeOption } from './FeeOption'\nimport { FEE_AMOUNT_DETAIL } from './shared'\n\nconst pulse = (color: string) => keyframes`\n  0% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n\n  70% {\n    box-shadow: 0 0 0 2px ${color};\n  }\n\n  100% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n`\nconst FocusedOutlineCard = styled(Card)<{ pulsing: boolean }>`\n  border: 1px solid ${({ theme }) => theme.surface3};\n  animation: ${({ pulsing, theme }) => pulsing && pulse(theme.accent1)} 0.6s linear;\n  align-self: center;\n`\n\nconst Select = styled.div`\n  align-items: flex-start;\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 8px;\n`\n\nexport default function FeeSelector({\n  disabled = false,\n  feeAmount,\n  handleFeePoolSelect,\n}: {\n  disabled?: boolean\n  feeAmount?: FeeAmount\n  handleFeePoolSelect: (feeAmount: FeeAmount) => void\n}) {\n  const { chainId } = useWeb3React()\n\n  const [showOptions, setShowOptions] = useState(false)\n  const [pulsing, setPulsing] = useState(false)\n\n  const previousFeeAmount = usePrevious(feeAmount)\n\n  const handleFeePoolSelectWithEvent = useCallback(\n    (fee: FeeAmount) => {\n      handleFeePoolSelect(fee)\n    },\n    [handleFeePoolSelect]\n  )\n\n  useEffect(() => {\n    if (feeAmount) {\n      return\n    }\n\n    setShowOptions(true)\n  }, [feeAmount, handleFeePoolSelect])\n\n  useEffect(() => {\n    if (feeAmount && previousFeeAmount !== feeAmount) {\n      setPulsing(true)\n    }\n  }, [previousFeeAmount, feeAmount])\n\n  return (\n    <AutoColumn gap=\"16px\">\n      <DynamicSection gap=\"md\" disabled={disabled}>\n        <FocusedOutlineCard pulsing={pulsing} onAnimationEnd={() => setPulsing(false)}>\n          <RowBetween>\n            <AutoColumn id=\"add-liquidity-selected-fee\">\n              {!feeAmount ? (\n                <>\n                  <ThemedText.DeprecatedLabel>\n                    <Trans>Fee tier</Trans>\n                  </ThemedText.DeprecatedLabel>\n                  <ThemedText.DeprecatedMain fontWeight={485} fontSize=\"12px\" textAlign=\"left\">\n                    <Trans>The % you will earn in fees.</Trans>\n                  </ThemedText.DeprecatedMain>\n                </>\n              ) : (\n                <>\n                  <ThemedText.DeprecatedLabel className=\"selected-fee-label\">\n                    <Trans>{FEE_AMOUNT_DETAIL[feeAmount].label}% fee tier</Trans>\n                  </ThemedText.DeprecatedLabel>\n                  <Box style={{ width: 'fit-content', marginTop: '8px' }} className=\"selected-fee-percentage\"></Box>\n                </>\n              )}\n            </AutoColumn>\n\n            <ButtonGray onClick={() => setShowOptions(!showOptions)} width=\"auto\" padding=\"4px\" $borderRadius=\"6px\">\n              {showOptions ? <Trans>Hide</Trans> : <Trans>Edit</Trans>}\n            </ButtonGray>\n          </RowBetween>\n        </FocusedOutlineCard>\n\n        {chainId && showOptions && (\n          <Select>\n            {[FeeAmount.LOWEST, FeeAmount.LOW, FeeAmount.MEDIUM, FeeAmount.HIGH].map((_feeAmount, i) => {\n              const { supportedChains } = FEE_AMOUNT_DETAIL[_feeAmount]\n              if (supportedChains.includes(chainId)) {\n                return (\n                  <FeeOption\n                    feeAmount={_feeAmount}\n                    active={feeAmount === _feeAmount}\n                    onClick={() => handleFeePoolSelectWithEvent(_feeAmount)}\n                    key={i}\n                  />\n                )\n              }\n              return null\n            })}\n          </Select>\n        )}\n      </DynamicSection>\n    </AutoColumn>\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Minus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nMinus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nMinus.displayName = 'Minus';\nexport default Minus;","import { Trans } from '@lingui/macro'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { ButtonGray } from 'components/Button'\nimport { OutlineCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport { ReactNode, useCallback, useEffect, useState } from 'react'\nimport { Minus, Plus } from 'react-feather'\nimport styled, { keyframes } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { Input as NumericalInput } from '../NumericalInput'\n\nconst pulse = (color: string) => keyframes`\n  0% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n\n  70% {\n    box-shadow: 0 0 0 2px ${color};\n  }\n\n  100% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n`\n\nconst InputRow = styled.div`\n  display: flex;\n`\n\nconst SmallButton = styled(ButtonGray)`\n  border-radius: 8px;\n  padding: 4px;\n`\n\nconst FocusedOutlineCard = styled(OutlineCard)<{ active?: boolean; pulsing?: boolean }>`\n  border-color: ${({ active, theme }) => active && theme.deprecated_stateOverlayPressed};\n  padding: 12px;\n  animation: ${({ pulsing, theme }) => pulsing && pulse(theme.accent1)} 0.8s linear;\n`\n\nconst StyledInput = styled(NumericalInput)<{ usePercent?: boolean }>`\n  background-color: transparent;\n  font-weight: 535;\n  text-align: left;\n  width: 100%;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    font-size: 16px;\n  `};\n`\n\nconst InputColumn = styled(AutoColumn)`\n  width: 100%;\n`\n\nconst InputTitle = styled(ThemedText.DeprecatedSmall)`\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 12px;\n  font-weight: 535;\n`\n\nconst ButtonLabel = styled(ThemedText.DeprecatedWhite)<{ disabled: boolean }>`\n  color: ${({ theme, disabled }) => (disabled ? theme.neutral2 : theme.neutral1)} !important;\n  display: flex;\n`\n\ninterface StepCounterProps {\n  value: string\n  onUserInput: (value: string) => void\n  decrement: () => string\n  increment: () => string\n  decrementDisabled?: boolean\n  incrementDisabled?: boolean\n  feeAmount?: FeeAmount\n  label?: string\n  width?: string\n  locked?: boolean // disable input\n  title: ReactNode\n  tokenA?: string\n  tokenB?: string\n}\n\nconst StepCounter = ({\n  value,\n  decrement,\n  increment,\n  decrementDisabled = false,\n  incrementDisabled = false,\n  width,\n  locked,\n  onUserInput,\n  title,\n  tokenA,\n  tokenB,\n}: StepCounterProps) => {\n  //  for focus state, styled components doesnt let you select input parent container\n  const [active, setActive] = useState(false)\n\n  // let user type value and only update parent value on blur\n  const [localValue, setLocalValue] = useState('')\n  const [useLocalValue, setUseLocalValue] = useState(false)\n\n  // animation if parent value updates local value\n  const [pulsing, setPulsing] = useState<boolean>(false)\n\n  const handleOnFocus = () => {\n    setUseLocalValue(true)\n    setActive(true)\n  }\n\n  const handleOnBlur = useCallback(() => {\n    setUseLocalValue(false)\n    setActive(false)\n    onUserInput(localValue) // trigger update on parent value\n  }, [localValue, onUserInput])\n\n  // for button clicks\n  const handleDecrement = useCallback(() => {\n    setUseLocalValue(false)\n    onUserInput(decrement())\n  }, [decrement, onUserInput])\n\n  const handleIncrement = useCallback(() => {\n    setUseLocalValue(false)\n    onUserInput(increment())\n  }, [increment, onUserInput])\n\n  useEffect(() => {\n    if (localValue !== value && !useLocalValue) {\n      setTimeout(() => {\n        setLocalValue(value) // reset local value to match parent\n        setPulsing(true) // trigger animation\n        setTimeout(function () {\n          setPulsing(false)\n        }, 1800)\n      }, 0)\n    }\n  }, [localValue, useLocalValue, value])\n\n  return (\n    <FocusedOutlineCard pulsing={pulsing} active={active} onFocus={handleOnFocus} onBlur={handleOnBlur} width={width}>\n      <InputRow>\n        <InputColumn justify=\"flex-start\">\n          <InputTitle fontSize={12} textAlign=\"center\">\n            {title}\n          </InputTitle>\n          <StyledInput\n            className=\"rate-input-0\"\n            value={localValue}\n            fontSize=\"20px\"\n            disabled={locked}\n            onUserInput={(val) => {\n              setLocalValue(val)\n            }}\n          />\n          <InputTitle fontSize={12} textAlign=\"left\">\n            <Trans>\n              {tokenB} per {tokenA}\n            </Trans>\n          </InputTitle>\n        </InputColumn>\n\n        <AutoColumn gap=\"8px\">\n          {!locked && (\n            <SmallButton data-testid=\"increment-price-range\" onClick={handleIncrement} disabled={incrementDisabled}>\n              <ButtonLabel disabled={incrementDisabled} fontSize=\"12px\">\n                <Plus size={18} />\n              </ButtonLabel>\n            </SmallButton>\n          )}\n          {!locked && (\n            <SmallButton data-testid=\"decrement-price-range\" onClick={handleDecrement} disabled={decrementDisabled}>\n              <ButtonLabel disabled={decrementDisabled} fontSize=\"12px\">\n                <Minus size={18} />\n              </ButtonLabel>\n            </SmallButton>\n          )}\n        </AutoColumn>\n      </InputRow>\n    </FocusedOutlineCard>\n  )\n}\n\nexport default StepCounter\n","import { Trans } from '@lingui/macro'\nimport { Currency, Price, Token } from '@uniswap/sdk-core'\nimport StepCounter from 'components/InputStepCounter/InputStepCounter'\nimport { AutoRow } from 'components/Row'\nimport { Bound } from 'state/mint/v3/actions'\n\n// currencyA is the base token\nexport default function RangeSelector({\n  priceLower,\n  priceUpper,\n  onLeftRangeInput,\n  onRightRangeInput,\n  getDecrementLower,\n  getIncrementLower,\n  getDecrementUpper,\n  getIncrementUpper,\n  currencyA,\n  currencyB,\n  feeAmount,\n  ticksAtLimit,\n}: {\n  priceLower?: Price<Token, Token>\n  priceUpper?: Price<Token, Token>\n  getDecrementLower: () => string\n  getIncrementLower: () => string\n  getDecrementUpper: () => string\n  getIncrementUpper: () => string\n  onLeftRangeInput: (typedValue: string) => void\n  onRightRangeInput: (typedValue: string) => void\n  currencyA?: Currency | null\n  currencyB?: Currency | null\n  feeAmount?: number\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n}) {\n  const tokenA = (currencyA ?? undefined)?.wrapped\n  const tokenB = (currencyB ?? undefined)?.wrapped\n  const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB)\n\n  const leftPrice = isSorted ? priceLower : priceUpper?.invert()\n  const rightPrice = isSorted ? priceUpper : priceLower?.invert()\n\n  return (\n    <AutoRow gap=\"md\">\n      <StepCounter\n        value={ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] ? '0' : leftPrice?.toSignificant(8) ?? ''}\n        onUserInput={onLeftRangeInput}\n        decrement={isSorted ? getDecrementLower : getIncrementUpper}\n        increment={isSorted ? getIncrementLower : getDecrementUpper}\n        decrementDisabled={leftPrice === undefined || ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]}\n        incrementDisabled={leftPrice === undefined || ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]}\n        feeAmount={feeAmount}\n        label={leftPrice ? `${currencyB?.symbol}` : '-'}\n        title={<Trans>Low price</Trans>}\n        tokenA={currencyA?.symbol}\n        tokenB={currencyB?.symbol}\n      />\n      <StepCounter\n        value={ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] ? '∞' : rightPrice?.toSignificant(8) ?? ''}\n        onUserInput={onRightRangeInput}\n        decrement={isSorted ? getDecrementUpper : getIncrementLower}\n        increment={isSorted ? getIncrementUpper : getDecrementLower}\n        incrementDisabled={rightPrice === undefined || ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]}\n        decrementDisabled={rightPrice === undefined || ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]}\n        feeAmount={feeAmount}\n        label={rightPrice ? `${currencyB?.symbol}` : '-'}\n        tokenA={currencyA?.symbol}\n        tokenB={currencyB?.symbol}\n        title={<Trans>High price</Trans>}\n      />\n    </AutoRow>\n  )\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { NEVER_RELOAD, useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { useArgentWalletDetectorContract } from './useContract'\n\nexport default function useIsArgentWallet(): boolean {\n  const { account } = useWeb3React()\n  const argentWalletDetector = useArgentWalletDetectorContract()\n  const inputs = useMemo(() => [account ?? undefined], [account])\n  const call = useSingleCallResult(argentWalletDetector, 'isArgentWallet', inputs, NEVER_RELOAD)\n  return Boolean(call?.result?.[0])\n}\n","import { AutoColumn } from 'components/Column'\nimport { Input } from 'components/NumericalInput'\nimport styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 26px 16px;\n`\n\nexport const ScrollablePage = styled.div`\n  padding: 20px 8px 0px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    margin: 0 auto;\n  `};\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    padding: 48px 8px 0px;\n  }\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    padding-top: 20px;\n  }\n`\n\nexport const DynamicSection = styled(AutoColumn)<{ disabled?: boolean }>`\n  opacity: ${({ disabled }) => (disabled ? '0.2' : '1')};\n  pointer-events: ${({ disabled }) => (disabled ? 'none' : 'initial')};\n`\n\nexport const StyledInput = styled(Input)`\n  background-color: ${({ theme }) => theme.surface1};\n  text-align: left;\n  font-size: 18px;\n  width: 100%;\n`\n\n/* two-column layout where DepositAmount is moved at the very end on mobile. */\nexport const ResponsiveTwoColumns = styled.div<{ wide: boolean }>`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding-top: 20px;\n\n  border-top: 1px solid ${({ theme }) => theme.surface3};\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    margin-top: 0;\n  `};\n`\n\nexport const MediumOnly = styled.div`\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    display: none;\n  `};\n`\n","import { Price, Token } from '@uniswap/sdk-core'\nimport { tickToPrice } from '@uniswap/v3-sdk'\n\nexport function getTickToPrice(baseToken?: Token, quoteToken?: Token, tick?: number): Price<Token, Token> | undefined {\n  if (!baseToken || !quoteToken || typeof tick !== 'number') {\n    return undefined\n  }\n  return tickToPrice(baseToken, quoteToken, tick)\n}\n","import { Price, Token } from '@uniswap/sdk-core'\nimport {\n  encodeSqrtRatioX96,\n  FeeAmount,\n  nearestUsableTick,\n  priceToClosestTick,\n  TICK_SPACINGS,\n  TickMath,\n} from '@uniswap/v3-sdk'\nimport JSBI from 'jsbi'\n\nexport function tryParsePrice(baseToken?: Token, quoteToken?: Token, value?: string) {\n  if (!baseToken || !quoteToken || !value) {\n    return undefined\n  }\n\n  if (!value.match(/^\\d*\\.?\\d+$/)) {\n    return undefined\n  }\n\n  const [whole, fraction] = value.split('.')\n\n  const decimals = fraction?.length ?? 0\n  const withoutDecimals = JSBI.BigInt((whole ?? '') + (fraction ?? ''))\n\n  return new Price(\n    baseToken,\n    quoteToken,\n    JSBI.multiply(JSBI.BigInt(10 ** decimals), JSBI.BigInt(10 ** baseToken.decimals)),\n    JSBI.multiply(withoutDecimals, JSBI.BigInt(10 ** quoteToken.decimals))\n  )\n}\n\nexport function tryParseTick(\n  baseToken?: Token,\n  quoteToken?: Token,\n  feeAmount?: FeeAmount,\n  value?: string\n): number | undefined {\n  if (!baseToken || !quoteToken || !feeAmount || !value) {\n    return undefined\n  }\n\n  const price = tryParsePrice(baseToken, quoteToken, value)\n\n  if (!price) {\n    return undefined\n  }\n\n  let tick: number\n\n  // check price is within min/max bounds, if outside return min/max\n  const sqrtRatioX96 = encodeSqrtRatioX96(price.numerator, price.denominator)\n\n  if (JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)) {\n    tick = TickMath.MAX_TICK\n  } else if (JSBI.lessThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO)) {\n    tick = TickMath.MIN_TICK\n  } else {\n    // this function is agnostic to the base, will always return the correct tick\n    tick = priceToClosestTick(price)\n  }\n\n  return nearestUsableTick(tick, TICK_SPACINGS[feeAmount])\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Price, Rounding, Token } from '@uniswap/sdk-core'\nimport {\n  encodeSqrtRatioX96,\n  FeeAmount,\n  nearestUsableTick,\n  Pool,\n  Position,\n  priceToClosestTick,\n  TICK_SPACINGS,\n  TickMath,\n  tickToPrice,\n} from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePool } from 'hooks/usePools'\nimport JSBI from 'jsbi'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ReactNode, useCallback, useMemo } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { getTickToPrice } from 'utils/getTickToPrice'\n\nimport { BIG_INT_ZERO } from '../../../constants/misc'\nimport { PoolState } from '../../../hooks/usePools'\nimport { useCurrencyBalances } from '../../connection/hooks'\nimport { AppState } from '../../reducer'\nimport {\n  Bound,\n  Field,\n  setFullRange,\n  typeInput,\n  typeLeftRangeInput,\n  typeRightRangeInput,\n  typeStartPriceInput,\n} from './actions'\nimport { tryParseTick } from './utils'\n\nexport function useV3MintState(): AppState['mintV3'] {\n  return useAppSelector((state) => state.mintV3)\n}\n\nexport function useV3MintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n  onLeftRangeInput: (typedValue: string) => void\n  onRightRangeInput: (typedValue: string) => void\n  onStartPriceInput: (typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  const [searchParams, setSearchParams] = useSearchParams()\n\n  const onLeftRangeInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeLeftRangeInput({ typedValue }))\n      const paramMinPrice = searchParams.get('minPrice')\n      if (!paramMinPrice || (paramMinPrice && paramMinPrice !== typedValue)) {\n        searchParams.set('minPrice', typedValue)\n        setSearchParams(searchParams)\n      }\n    },\n    [dispatch, searchParams, setSearchParams]\n  )\n\n  const onRightRangeInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeRightRangeInput({ typedValue }))\n      const paramMaxPrice = searchParams.get('maxPrice')\n      if (!paramMaxPrice || (paramMaxPrice && paramMaxPrice !== typedValue)) {\n        searchParams.set('maxPrice', typedValue)\n        setSearchParams(searchParams)\n      }\n    },\n    [dispatch, searchParams, setSearchParams]\n  )\n\n  const onStartPriceInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeStartPriceInput({ typedValue }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n    onLeftRangeInput,\n    onRightRangeInput,\n    onStartPriceInput,\n  }\n}\n\nexport function useV3DerivedMintInfo(\n  currencyA?: Currency,\n  currencyB?: Currency,\n  feeAmount?: FeeAmount,\n  baseCurrency?: Currency,\n  // override for existing position\n  existingPosition?: Position\n): {\n  pool?: Pool | null\n  poolState: PoolState\n  ticks: { [bound in Bound]?: number | undefined }\n  price?: Price<Token, Token>\n  pricesAtTicks: {\n    [bound in Bound]?: Price<Token, Token> | undefined\n  }\n  pricesAtLimit: {\n    [bound in Bound]?: Price<Token, Token> | undefined\n  }\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  dependentField: Field\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  position?: Position\n  noLiquidity?: boolean\n  errorMessage?: ReactNode\n  invalidPool: boolean\n  outOfRange: boolean\n  invalidRange: boolean\n  depositADisabled: boolean\n  depositBDisabled: boolean\n  invertPrice: boolean\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n} {\n  const { account } = useWeb3React()\n\n  const { independentField, typedValue, leftRangeTypedValue, rightRangeTypedValue, startPriceTypedValue } =\n    useV3MintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // currencies\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA,\n      [Field.CURRENCY_B]: currencyB,\n    }),\n    [currencyA, currencyB]\n  )\n\n  // formatted with tokens\n  const [tokenA, tokenB, baseToken] = useMemo(\n    () => [currencyA?.wrapped, currencyB?.wrapped, baseCurrency?.wrapped],\n    [currencyA, currencyB, baseCurrency]\n  )\n\n  const [token0, token1] = useMemo(\n    () =>\n      tokenA && tokenB ? (tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]) : [undefined, undefined],\n    [tokenA, tokenB]\n  )\n\n  // balances\n  const balances = useCurrencyBalances(\n    account ?? undefined,\n    useMemo(() => [currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]], [currencies])\n  )\n  const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // pool\n  const [poolState, pool] = usePool(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B], feeAmount)\n  const noLiquidity = poolState === PoolState.NOT_EXISTS\n\n  // note to parse inputs in reverse\n  const invertPrice = Boolean(baseToken && token0 && !baseToken.equals(token0))\n\n  // always returns the price with 0 as base token\n  const price: Price<Token, Token> | undefined = useMemo(() => {\n    // if no liquidity use typed value\n    if (noLiquidity) {\n      const parsedQuoteAmount = tryParseCurrencyAmount(startPriceTypedValue, invertPrice ? token0 : token1)\n      if (parsedQuoteAmount && token0 && token1) {\n        const baseAmount = tryParseCurrencyAmount('1', invertPrice ? token1 : token0)\n        const price =\n          baseAmount && parsedQuoteAmount\n            ? new Price(\n                baseAmount.currency,\n                parsedQuoteAmount.currency,\n                baseAmount.quotient,\n                parsedQuoteAmount.quotient\n              )\n            : undefined\n        return (invertPrice ? price?.invert() : price) ?? undefined\n      }\n      return undefined\n    } else {\n      // get the amount of quote currency\n      return pool && token0 ? pool.priceOf(token0) : undefined\n    }\n  }, [noLiquidity, startPriceTypedValue, invertPrice, token1, token0, pool])\n\n  // check for invalid price input (converts to invalid ratio)\n  const invalidPrice = useMemo(() => {\n    const sqrtRatioX96 = price ? encodeSqrtRatioX96(price.numerator, price.denominator) : undefined\n    return (\n      price &&\n      sqrtRatioX96 &&\n      !(\n        JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO) &&\n        JSBI.lessThan(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)\n      )\n    )\n  }, [price])\n\n  // used for ratio calculation when pool not initialized\n  const mockPool = useMemo(() => {\n    if (tokenA && tokenB && feeAmount && price && !invalidPrice) {\n      const currentTick = priceToClosestTick(price)\n      const currentSqrt = TickMath.getSqrtRatioAtTick(currentTick)\n      return new Pool(tokenA, tokenB, feeAmount, currentSqrt, JSBI.BigInt(0), currentTick, [])\n    } else {\n      return undefined\n    }\n  }, [feeAmount, invalidPrice, price, tokenA, tokenB])\n\n  // if pool exists use it, if not use the mock pool\n  const poolForPosition: Pool | undefined = pool ?? mockPool\n\n  // lower and upper limits in the tick space for `feeAmoun<Trans>\n  const tickSpaceLimits = useMemo(\n    () => ({\n      [Bound.LOWER]: feeAmount ? nearestUsableTick(TickMath.MIN_TICK, TICK_SPACINGS[feeAmount]) : undefined,\n      [Bound.UPPER]: feeAmount ? nearestUsableTick(TickMath.MAX_TICK, TICK_SPACINGS[feeAmount]) : undefined,\n    }),\n    [feeAmount]\n  )\n\n  // parse typed range values and determine closest ticks\n  // lower should always be a smaller tick\n  const ticks = useMemo(() => {\n    return {\n      [Bound.LOWER]:\n        typeof existingPosition?.tickLower === 'number'\n          ? existingPosition.tickLower\n          : (invertPrice && typeof rightRangeTypedValue === 'boolean') ||\n            (!invertPrice && typeof leftRangeTypedValue === 'boolean')\n          ? tickSpaceLimits[Bound.LOWER]\n          : invertPrice\n          ? tryParseTick(token1, token0, feeAmount, rightRangeTypedValue.toString())\n          : tryParseTick(token0, token1, feeAmount, leftRangeTypedValue.toString()),\n      [Bound.UPPER]:\n        typeof existingPosition?.tickUpper === 'number'\n          ? existingPosition.tickUpper\n          : (!invertPrice && typeof rightRangeTypedValue === 'boolean') ||\n            (invertPrice && typeof leftRangeTypedValue === 'boolean')\n          ? tickSpaceLimits[Bound.UPPER]\n          : invertPrice\n          ? tryParseTick(token1, token0, feeAmount, leftRangeTypedValue.toString())\n          : tryParseTick(token0, token1, feeAmount, rightRangeTypedValue.toString()),\n    }\n  }, [\n    existingPosition,\n    feeAmount,\n    invertPrice,\n    leftRangeTypedValue,\n    rightRangeTypedValue,\n    token0,\n    token1,\n    tickSpaceLimits,\n  ])\n\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks || {}\n\n  // specifies whether the lower and upper ticks is at the exteme bounds\n  const ticksAtLimit = useMemo(\n    () => ({\n      [Bound.LOWER]: feeAmount && tickLower === tickSpaceLimits.LOWER,\n      [Bound.UPPER]: feeAmount && tickUpper === tickSpaceLimits.UPPER,\n    }),\n    [tickSpaceLimits, tickLower, tickUpper, feeAmount]\n  )\n\n  // mark invalid range\n  const invalidRange = Boolean(typeof tickLower === 'number' && typeof tickUpper === 'number' && tickLower >= tickUpper)\n\n  const pricesAtLimit = useMemo(() => {\n    return {\n      [Bound.LOWER]: getTickToPrice(token0, token1, tickSpaceLimits.LOWER),\n      [Bound.UPPER]: getTickToPrice(token0, token1, tickSpaceLimits.UPPER),\n    }\n  }, [token0, token1, tickSpaceLimits.LOWER, tickSpaceLimits.UPPER])\n\n  // always returns the price with 0 as base token\n  const pricesAtTicks = useMemo(() => {\n    return {\n      [Bound.LOWER]: getTickToPrice(token0, token1, ticks[Bound.LOWER]),\n      [Bound.UPPER]: getTickToPrice(token0, token1, ticks[Bound.UPPER]),\n    }\n  }, [token0, token1, ticks])\n  const { [Bound.LOWER]: lowerPrice, [Bound.UPPER]: upperPrice } = pricesAtTicks\n\n  // liquidity range warning\n  const outOfRange = Boolean(\n    !invalidRange && price && lowerPrice && upperPrice && (price.lessThan(lowerPrice) || price.greaterThan(upperPrice))\n  )\n\n  // amounts\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseCurrencyAmount(\n    typedValue,\n    currencies[independentField]\n  )\n\n  const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\n    // we wrap the currencies just to get the price in terms of the other token\n    const wrappedIndependentAmount = independentAmount?.wrapped\n    const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n    if (\n      independentAmount &&\n      wrappedIndependentAmount &&\n      typeof tickLower === 'number' &&\n      typeof tickUpper === 'number' &&\n      poolForPosition\n    ) {\n      // if price is out of range or invalid range - return 0 (single deposit will be independent)\n      if (outOfRange || invalidRange) {\n        return undefined\n      }\n\n      const position: Position | undefined = wrappedIndependentAmount.currency.equals(poolForPosition.token0)\n        ? Position.fromAmount0({\n            pool: poolForPosition,\n            tickLower,\n            tickUpper,\n            amount0: independentAmount.quotient,\n            useFullPrecision: true, // we want full precision for the theoretical position\n          })\n        : Position.fromAmount1({\n            pool: poolForPosition,\n            tickLower,\n            tickUpper,\n            amount1: independentAmount.quotient,\n          })\n\n      const dependentTokenAmount = wrappedIndependentAmount.currency.equals(poolForPosition.token0)\n        ? position.amount1\n        : position.amount0\n      return dependentCurrency && CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient)\n    }\n\n    return undefined\n  }, [\n    independentAmount,\n    outOfRange,\n    dependentField,\n    currencyB,\n    currencyA,\n    tickLower,\n    tickUpper,\n    poolForPosition,\n    invalidRange,\n  ])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(() => {\n    return {\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }\n  }, [dependentAmount, independentAmount, independentField])\n\n  // single deposit only if price is out of range\n  const deposit0Disabled = Boolean(\n    typeof tickUpper === 'number' && poolForPosition && poolForPosition.tickCurrent >= tickUpper\n  )\n  const deposit1Disabled = Boolean(\n    typeof tickLower === 'number' && poolForPosition && poolForPosition.tickCurrent <= tickLower\n  )\n\n  // sorted for token order\n  const depositADisabled =\n    invalidRange ||\n    Boolean(\n      (deposit0Disabled && poolForPosition && tokenA && poolForPosition.token0.equals(tokenA)) ||\n        (deposit1Disabled && poolForPosition && tokenA && poolForPosition.token1.equals(tokenA))\n    )\n  const depositBDisabled =\n    invalidRange ||\n    Boolean(\n      (deposit0Disabled && poolForPosition && tokenB && poolForPosition.token0.equals(tokenB)) ||\n        (deposit1Disabled && poolForPosition && tokenB && poolForPosition.token1.equals(tokenB))\n    )\n\n  // create position entity based on users selection\n  const position: Position | undefined = useMemo(() => {\n    if (\n      !poolForPosition ||\n      !tokenA ||\n      !tokenB ||\n      typeof tickLower !== 'number' ||\n      typeof tickUpper !== 'number' ||\n      invalidRange\n    ) {\n      return undefined\n    }\n\n    // mark as 0 if disabled because out of range\n    const amount0 = !deposit0Disabled\n      ? parsedAmounts?.[tokenA.equals(poolForPosition.token0) ? Field.CURRENCY_A : Field.CURRENCY_B]?.quotient\n      : BIG_INT_ZERO\n    const amount1 = !deposit1Disabled\n      ? parsedAmounts?.[tokenA.equals(poolForPosition.token0) ? Field.CURRENCY_B : Field.CURRENCY_A]?.quotient\n      : BIG_INT_ZERO\n\n    if (amount0 !== undefined && amount1 !== undefined) {\n      return Position.fromAmounts({\n        pool: poolForPosition,\n        tickLower,\n        tickUpper,\n        amount0,\n        amount1,\n        useFullPrecision: true, // we want full precision for the theoretical position\n      })\n    } else {\n      return undefined\n    }\n  }, [\n    parsedAmounts,\n    poolForPosition,\n    tokenA,\n    tokenB,\n    deposit0Disabled,\n    deposit1Disabled,\n    invalidRange,\n    tickLower,\n    tickUpper,\n  ])\n\n  let errorMessage: ReactNode | undefined\n  if (!account) {\n    errorMessage = <Trans>Connect wallet</Trans>\n  }\n\n  if (poolState === PoolState.INVALID) {\n    errorMessage = errorMessage ?? <Trans>Invalid pair</Trans>\n  }\n\n  if (invalidPrice) {\n    errorMessage = errorMessage ?? <Trans>Invalid price input</Trans>\n  }\n\n  if (\n    (!parsedAmounts[Field.CURRENCY_A] && !depositADisabled) ||\n    (!parsedAmounts[Field.CURRENCY_B] && !depositBDisabled)\n  ) {\n    errorMessage = errorMessage ?? <Trans>Enter an amount</Trans>\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    errorMessage = <Trans>Insufficient {currencies[Field.CURRENCY_A]?.symbol} balance</Trans>\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    errorMessage = <Trans>Insufficient {currencies[Field.CURRENCY_B]?.symbol} balance</Trans>\n  }\n\n  const invalidPool = poolState === PoolState.INVALID\n\n  return {\n    dependentField,\n    currencies,\n    pool,\n    poolState,\n    currencyBalances,\n    parsedAmounts,\n    ticks,\n    price,\n    pricesAtTicks,\n    pricesAtLimit,\n    position,\n    noLiquidity,\n    errorMessage,\n    invalidPool,\n    invalidRange,\n    outOfRange,\n    depositADisabled,\n    depositBDisabled,\n    invertPrice,\n    ticksAtLimit,\n  }\n}\n\nexport function useRangeHopCallbacks(\n  baseCurrency: Currency | undefined,\n  quoteCurrency: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  tickLower: number | undefined,\n  tickUpper: number | undefined,\n  pool?: Pool | undefined | null\n) {\n  const dispatch = useAppDispatch()\n\n  const baseToken = useMemo(() => baseCurrency?.wrapped, [baseCurrency])\n  const quoteToken = useMemo(() => quoteCurrency?.wrapped, [quoteCurrency])\n\n  const getDecrementLower = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickLower === 'number' && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickLower - TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickLower === 'number') && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent - TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    return ''\n  }, [baseToken, quoteToken, tickLower, feeAmount, pool])\n\n  const getIncrementLower = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickLower === 'number' && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickLower + TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickLower === 'number') && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent + TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    return ''\n  }, [baseToken, quoteToken, tickLower, feeAmount, pool])\n\n  const getDecrementUpper = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickUpper === 'number' && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickUpper - TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickUpper === 'number') && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent - TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    return ''\n  }, [baseToken, quoteToken, tickUpper, feeAmount, pool])\n\n  const getIncrementUpper = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickUpper === 'number' && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickUpper + TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickUpper === 'number') && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent + TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    return ''\n  }, [baseToken, quoteToken, tickUpper, feeAmount, pool])\n\n  const getSetFullRange = useCallback(() => {\n    dispatch(setFullRange())\n  }, [dispatch])\n\n  return { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper, getSetFullRange }\n}\n"],"names":["supportedChain","SUPPORTED_CHAINS","map","chain","push","FEE_AMOUNT_DETAIL","FeeAmount","LOWEST","label","description","supportedChains","ChainId","ARBITRUM_ONE","BNB","CELO","CELO_ALFAJORES","MAINNET","OPTIMISM","POLYGON","POLYGON_MUMBAI","AVALANCHE","BASE","LOW","MEDIUM","HIGH","ResponsiveText","styled","ThemedText","DeprecatedLabel","theme","deprecated_mediaWidth","deprecated_upToSmall","FeeOption","feeAmount","active","onClick","ButtonRadioChecked","AutoColumn","gap","justify","DeprecatedMain","fontWeight","fontSize","textAlign","FocusedOutlineCard","Card","surface3","pulsing","color","accent1","keyframes","Select","div","FeeSelector","disabled","handleFeePoolSelect","chainId","useWeb3React","showOptions","setShowOptions","useState","setPulsing","previousFeeAmount","usePrevious","handleFeePoolSelectWithEvent","useCallback","fee","useEffect","DynamicSection","onAnimationEnd","RowBetween","id","className","Box","style","width","marginTop","ButtonGray","padding","$borderRadius","_feeAmount","i","includes","_extends","InputRow","SmallButton","OutlineCard","deprecated_stateOverlayPressed","StyledInput","NumericalInput","InputColumn","InputTitle","DeprecatedSmall","neutral2","ButtonLabel","DeprecatedWhite","neutral1","value","decrement","increment","decrementDisabled","incrementDisabled","locked","onUserInput","title","tokenA","tokenB","setActive","localValue","setLocalValue","useLocalValue","setUseLocalValue","handleOnBlur","handleDecrement","handleIncrement","setTimeout","onFocus","onBlur","val","data-testid","Plus","size","Minus","RangeSelector","priceLower","priceUpper","onLeftRangeInput","onRightRangeInput","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","currencyA","currencyB","ticksAtLimit","undefined","wrapped","isSorted","sortsBefore","leftPrice","invert","rightPrice","AutoRow","StepCounter","Bound","LOWER","UPPER","toSignificant","symbol","useIsArgentWallet","account","argentWalletDetector","useArgentWalletDetectorContract","inputs","useMemo","call","useSingleCallResult","NEVER_RELOAD","Boolean","result","Wrapper","ScrollablePage","deprecated_upToMedium","breakpoint","md","sm","Input","surface1","ResponsiveTwoColumns","MediumOnly","getTickToPrice","baseToken","quoteToken","tick","tickToPrice","tryParseTick","price","match","whole","fraction","split","decimals","length","withoutDecimals","JSBI","Price","tryParsePrice","sqrtRatioX96","encodeSqrtRatioX96","numerator","denominator","TickMath","MAX_SQRT_RATIO","MAX_TICK","MIN_SQRT_RATIO","MIN_TICK","priceToClosestTick","nearestUsableTick","TICK_SPACINGS","useV3MintState","useAppSelector","state","mintV3","useV3MintActionHandlers","noLiquidity","dispatch","useAppDispatch","onFieldAInput","typedValue","typeInput","field","Field","CURRENCY_A","onFieldBInput","CURRENCY_B","searchParams","setSearchParams","useSearchParams","typeLeftRangeInput","paramMinPrice","get","set","typeRightRangeInput","paramMaxPrice","onStartPriceInput","typeStartPriceInput","useV3DerivedMintInfo","baseCurrency","existingPosition","independentField","leftRangeTypedValue","rightRangeTypedValue","startPriceTypedValue","dependentField","currencies","token0","token1","balances","useCurrencyBalances","currencyBalances","poolState","pool","usePool","PoolState","NOT_EXISTS","invertPrice","equals","priceOf","parsedQuoteAmount","tryParseCurrencyAmount","baseAmount","currency","quotient","invalidPrice","mockPool","currentTick","currentSqrt","getSqrtRatioAtTick","Pool","poolForPosition","tickSpaceLimits","ticks","tickLower","toString","tickUpper","invalidRange","pricesAtLimit","pricesAtTicks","lowerPrice","upperPrice","outOfRange","lessThan","greaterThan","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","position","Position","fromAmount0","amount0","useFullPrecision","fromAmount1","amount1","dependentTokenAmount","CurrencyAmount","fromRawAmount","parsedAmounts","deposit0Disabled","tickCurrent","deposit1Disabled","depositADisabled","depositBDisabled","BIG_INT_ZERO","fromAmounts","errorMessage","INVALID","currencyAAmount","currencyBAmount","invalidPool","useRangeHopCallbacks","quoteCurrency","Rounding","ROUND_UP","getSetFullRange","setFullRange"],"sourceRoot":""}
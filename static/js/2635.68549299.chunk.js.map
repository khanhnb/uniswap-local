{"version":3,"file":"static/js/2635.68549299.chunk.js","mappings":"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","sources":["components/NavigationTabs/index.tsx","pages/AppBody.tsx","pages/Pool/styled.tsx","pages/PoolFinder/index.tsx","utils/unwrappedToken.ts","../node_modules/react-feather/dist/icons/plus.js"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Percent } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport SettingsTab from 'components/Settings'\nimport { ReactNode } from 'react'\nimport { ArrowLeft } from 'react-feather'\nimport { Link, useLocation } from 'react-router-dom'\nimport { Box } from 'rebass'\nimport { useAppDispatch } from 'state/hooks'\nimport { resetMintState } from 'state/mint/actions'\nimport { resetMintState as resetMintV3State } from 'state/mint/v3/actions'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { flexRowNoWrap } from 'theme/styles'\n\nimport { RowBetween } from '../Row'\n\nconst Tabs = styled.div`\n  ${flexRowNoWrap};\n  align-items: center;\n  border-radius: 3rem;\n  justify-content: space-evenly;\n`\n\nconst StyledLink = styled(Link)<{ flex?: string }>`\n  flex: ${({ flex }) => flex ?? 'none'};\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    flex: none;\n    margin-right: 10px;\n  `};\n`\n\nconst FindPoolTabsText = styled(ThemedText.SubHeaderLarge)`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n`\n\nconst StyledArrowLeft = styled(ArrowLeft)`\n  color: ${({ theme }) => theme.neutral1};\n`\n\nexport function FindPoolTabs({ origin }: { origin: string }) {\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem', position: 'relative' }}>\n        <Link to={origin}>\n          <StyledArrowLeft />\n        </Link>\n        <FindPoolTabsText>\n          <Trans>Import V2 pool</Trans>\n        </FindPoolTabsText>\n      </RowBetween>\n    </Tabs>\n  )\n}\n\nconst AddRemoveTitleText = styled(ThemedText.SubHeaderLarge)`\n  flex: 1;\n  margin: auto;\n`\n\nexport function AddRemoveTabs({\n  adding,\n  creating,\n  autoSlippage,\n  positionID,\n  children,\n}: {\n  adding: boolean\n  creating: boolean\n  autoSlippage: Percent\n  positionID?: string\n  showBackLink?: boolean\n  children?: ReactNode\n}) {\n  const { chainId } = useWeb3React()\n  const theme = useTheme()\n  // reset states on back\n  const dispatch = useAppDispatch()\n  const location = useLocation()\n\n  // detect if back should redirect to v3 or v2 pool page\n  const poolLink = location.pathname.includes('add/v2')\n    ? '/pools/v2'\n    : '/pools' + (positionID ? `/${positionID.toString()}` : '')\n\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }} align=\"center\">\n        <StyledLink\n          to={poolLink}\n          onClick={() => {\n            if (adding) {\n              // not 100% sure both of these are needed\n              dispatch(resetMintState())\n              dispatch(resetMintV3State())\n            }\n          }}\n          flex={children ? '1' : undefined}\n        >\n          <StyledArrowLeft stroke={theme.neutral2} />\n        </StyledLink>\n        <AddRemoveTitleText textAlign={children ? 'start' : 'center'}>\n          {creating ? (\n            <Trans>Create a pair</Trans>\n          ) : adding ? (\n            <Trans>Add liquidity</Trans>\n          ) : (\n            <Trans>Remove liquidity</Trans>\n          )}\n        </AddRemoveTitleText>\n        {children && <Box style={{ marginRight: '.5rem' }}>{children}</Box>}\n        <SettingsTab autoSlippage={autoSlippage} chainId={chainId} />\n      </RowBetween>\n    </Tabs>\n  )\n}\n","import { PropsWithChildren } from 'react'\nimport styled from 'styled-components'\nimport { Z_INDEX } from 'theme/zIndex'\n\ninterface BodyWrapperProps {\n  $margin?: string\n  $maxWidth?: string\n}\n\nexport const BodyWrapper = styled.main<BodyWrapperProps>`\n  position: relative;\n  margin-top: ${({ $margin }) => $margin ?? '0px'};\n  max-width: ${({ $maxWidth }) => $maxWidth ?? '420px'};\n  width: 100%;\n  background: ${({ theme }) => theme.surface1};\n  border-radius: 16px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  margin-top: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: ${Z_INDEX.default};\n  font-feature-settings: 'ss01' on, 'ss02' on, 'cv01' on, 'cv03' on;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody(props: PropsWithChildren<BodyWrapperProps>) {\n  return <BodyWrapper {...props} />\n}\n","import { LoadingRows as BaseLoadingRows } from 'components/Loader/styled'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 20px;\n`\n\nexport const ClickableText = styled(Text)`\n  :hover {\n    cursor: pointer;\n  }\n  color: ${({ theme }) => theme.accent1};\n`\nexport const MaxButton = styled.button<{ width: string }>`\n  padding: 0.5rem 1rem;\n  background-color: ${({ theme }) => theme.accent2};\n  border: 1px solid ${({ theme }) => theme.accent2};\n  border-radius: 0.5rem;\n  font-size: 1rem;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    padding: 0.25rem 0.5rem;\n  `};\n  font-weight: 535;\n  cursor: pointer;\n  margin: 0.25rem;\n  overflow: hidden;\n  color: ${({ theme }) => theme.accent1};\n  :hover {\n    border: 1px solid ${({ theme }) => theme.accent1};\n  }\n  :focus {\n    border: 1px solid ${({ theme }) => theme.accent1};\n    outline: none;\n  }\n`\n\nexport const Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport const LoadingRows = styled(BaseLoadingRows)`\n  padding-top: 36px;\n  min-width: 75%;\n  max-width: 960px;\n  grid-column-gap: 0.5em;\n  grid-row-gap: 0.8em;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 8px;\n\n  & > div:nth-child(4n + 1) {\n    grid-column: 1 / 3;\n  }\n  & > div:nth-child(4n) {\n    grid-column: 3 / 4;\n    margin-bottom: 2em;\n  }\n`\n","import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { V2Unsupported } from 'components/V2Unsupported'\nimport { useNetworkSupportsV2 } from 'hooks/useNetworkSupportsV2'\nimport JSBI from 'jsbi'\nimport { useCallback, useEffect, useState } from 'react'\nimport { Plus } from 'react-feather'\nimport { useLocation } from 'react-router'\nimport { Text } from 'rebass'\nimport { StyledInternalLink } from 'theme/components'\nimport { ThemedText } from 'theme/components'\n\nimport { ButtonDropdownLight } from '../../components/Button'\nimport { LightCard } from '../../components/Card'\nimport { BlueCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport CurrencyLogo from '../../components/Logo/CurrencyLogo'\nimport { FindPoolTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row from '../../components/Row'\nimport CurrencySearchModal from '../../components/SearchModal/CurrencySearchModal'\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink'\nimport { nativeOnChain } from '../../constants/tokens'\nimport { PairState, useV2Pair } from '../../hooks/useV2Pairs'\nimport { useTokenBalance } from '../../state/connection/hooks'\nimport { usePairAdder } from '../../state/user/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport AppBody from '../AppBody'\nimport { Dots } from '../Pool/styled'\n\nenum Fields {\n  TOKEN0 = 0,\n  TOKEN1 = 1,\n}\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search)\n}\n\nexport default function PoolFinder() {\n  const query = useQuery()\n\n  const { account, chainId } = useWeb3React()\n\n  const [showSearch, setShowSearch] = useState<boolean>(false)\n  const [activeField, setActiveField] = useState<number>(Fields.TOKEN1)\n\n  const [currency0, setCurrency0] = useState<Currency | null>(() => (chainId ? nativeOnChain(chainId) : null))\n  const [currency1, setCurrency1] = useState<Currency | null>(null)\n\n  const [pairState, pair] = useV2Pair(currency0 ?? undefined, currency1 ?? undefined)\n  const addPair = usePairAdder()\n  useEffect(() => {\n    if (pair) {\n      addPair(pair)\n    }\n  }, [pair, addPair])\n\n  const validPairNoLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.quotient, JSBI.BigInt(0)) &&\n        JSBI.equal(pair.reserve1.quotient, JSBI.BigInt(0))\n    )\n\n  const position: CurrencyAmount<Token> | undefined = useTokenBalance(account ?? undefined, pair?.liquidityToken)\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.quotient, JSBI.BigInt(0)))\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      if (activeField === Fields.TOKEN0) {\n        setCurrency0(currency)\n      } else {\n        setCurrency1(currency)\n      }\n    },\n    [activeField]\n  )\n\n  const handleSearchDismiss = useCallback(() => {\n    setShowSearch(false)\n  }, [setShowSearch])\n\n  const prerequisiteMessage = (\n    <LightCard padding=\"45px 10px\">\n      <Text textAlign=\"center\">\n        {!account ? (\n          <Trans>Connect to a wallet to find pools</Trans>\n        ) : (\n          <Trans>Select a token to find your v2 liquidity.</Trans>\n        )}\n      </Text>\n    </LightCard>\n  )\n\n  const networkSupportsV2 = useNetworkSupportsV2()\n  if (!networkSupportsV2) return <V2Unsupported />\n\n  return (\n    <>\n      <AppBody>\n        <FindPoolTabs origin={query.get('origin') ?? '/pools/v2'} />\n        <AutoColumn style={{ padding: '1rem' }} gap=\"md\">\n          <BlueCard>\n            <AutoColumn gap=\"10px\">\n              <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\">\n                <Trans>\n                  <b>Tip:</b> Use this tool to find v2 pools that don&apos;t automatically appear in the interface.\n                </Trans>\n              </ThemedText.DeprecatedLink>\n            </AutoColumn>\n          </BlueCard>\n          <ButtonDropdownLight\n            onClick={() => {\n              setShowSearch(true)\n              setActiveField(Fields.TOKEN0)\n            }}\n          >\n            {currency0 ? (\n              <Row>\n                <CurrencyLogo currency={currency0} />\n                <Text fontWeight={535} fontSize={20} marginLeft=\"12px\">\n                  {currency0.symbol}\n                </Text>\n              </Row>\n            ) : (\n              <Text fontWeight={535} fontSize={20} marginLeft=\"12px\">\n                <Trans>Select a token</Trans>\n              </Text>\n            )}\n          </ButtonDropdownLight>\n\n          <ColumnCenter>\n            <Plus size=\"16\" color=\"#888D9B\" />\n          </ColumnCenter>\n\n          <ButtonDropdownLight\n            onClick={() => {\n              setShowSearch(true)\n              setActiveField(Fields.TOKEN1)\n            }}\n          >\n            {currency1 ? (\n              <Row>\n                <CurrencyLogo currency={currency1} />\n                <Text fontWeight={535} fontSize={20} marginLeft=\"12px\">\n                  {currency1.symbol}\n                </Text>\n              </Row>\n            ) : (\n              <Text fontWeight={535} fontSize={20} marginLeft=\"12px\">\n                <Trans>Select a token</Trans>\n              </Text>\n            )}\n          </ButtonDropdownLight>\n\n          {hasPosition && (\n            <ColumnCenter\n              style={{ justifyItems: 'center', backgroundColor: '', padding: '12px 0px', borderRadius: '12px' }}\n            >\n              <Text textAlign=\"center\" fontWeight={535}>\n                <Trans>Pool found!</Trans>\n              </Text>\n              <StyledInternalLink to=\"pools/v2\">\n                <Text textAlign=\"center\">\n                  <Trans>Manage this pool.</Trans>\n                </Text>\n              </StyledInternalLink>\n            </ColumnCenter>\n          )}\n\n          {currency0 && currency1 ? (\n            pairState === PairState.EXISTS ? (\n              hasPosition && pair ? (\n                <MinimalPositionCard pair={pair} border=\"1px solid #CED0D9\" />\n              ) : (\n                <LightCard padding=\"45px 10px\">\n                  <AutoColumn gap=\"sm\" justify=\"center\">\n                    <Text textAlign=\"center\">\n                      <Trans>You don’t have liquidity in this pool yet.</Trans>\n                    </Text>\n                    <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\n                      <Text textAlign=\"center\">\n                        <Trans>Add liquidity.</Trans>\n                      </Text>\n                    </StyledInternalLink>\n                  </AutoColumn>\n                </LightCard>\n              )\n            ) : validPairNoLiquidity ? (\n              <LightCard padding=\"45px 10px\">\n                <AutoColumn gap=\"sm\" justify=\"center\">\n                  <Text textAlign=\"center\">\n                    <Trans>No pool found.</Trans>\n                  </Text>\n                  <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\n                    <Trans>Create pool.</Trans>\n                  </StyledInternalLink>\n                </AutoColumn>\n              </LightCard>\n            ) : pairState === PairState.INVALID ? (\n              <LightCard padding=\"45px 10px\">\n                <AutoColumn gap=\"sm\" justify=\"center\">\n                  <Text textAlign=\"center\" fontWeight={535}>\n                    <Trans>Invalid pair.</Trans>\n                  </Text>\n                </AutoColumn>\n              </LightCard>\n            ) : pairState === PairState.LOADING ? (\n              <LightCard padding=\"45px 10px\">\n                <AutoColumn gap=\"sm\" justify=\"center\">\n                  <Text textAlign=\"center\">\n                    <Trans>Loading</Trans>\n                    <Dots />\n                  </Text>\n                </AutoColumn>\n              </LightCard>\n            ) : null\n          ) : (\n            prerequisiteMessage\n          )}\n        </AutoColumn>\n\n        <CurrencySearchModal\n          isOpen={showSearch}\n          onCurrencySelect={handleCurrencySelect}\n          onDismiss={handleSearchDismiss}\n          showCommonBases\n          selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\n        />\n      </AppBody>\n      <SwitchLocaleLink />\n    </>\n  )\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { asSupportedChain } from 'constants/chains'\n\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n  const formattedChainId = asSupportedChain(currency.chainId)\n  if (formattedChainId && WRAPPED_NATIVE_CURRENCY[formattedChainId]?.equals(currency))\n    return nativeOnChain(currency.chainId)\n  return currency\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Plus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nPlus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlus.displayName = 'Plus';\nexport default Plus;"],"names":["Tabs","styled","div","flexRowNoWrap","StyledLink","Link","flex","theme","deprecated_mediaWidth","deprecated_upToMedium","FindPoolTabsText","ThemedText","SubHeaderLarge","StyledArrowLeft","ArrowLeft","neutral1","FindPoolTabs","origin","RowBetween","style","padding","position","to","AddRemoveTitleText","AddRemoveTabs","adding","creating","autoSlippage","positionID","children","chainId","useWeb3React","useTheme","dispatch","useAppDispatch","poolLink","useLocation","pathname","includes","toString","align","onClick","resetMintState","resetMintV3State","undefined","stroke","neutral2","textAlign","Box","marginRight","SettingsTab","BodyWrapper","main","$margin","$maxWidth","surface1","surface3","Z_INDEX","default","AppBody","props","Wrapper","ClickableText","Text","accent1","MaxButton","button","accent2","deprecated_upToSmall","Dots","span","LoadingRows","BaseLoadingRows","PoolFinder","query","URLSearchParams","search","account","showSearch","setShowSearch","useState","activeField","setActiveField","Fields","TOKEN1","currency0","setCurrency0","nativeOnChain","currency1","setCurrency1","pairState","pair","useV2Pair","addPair","usePairAdder","useEffect","validPairNoLiquidity","PairState","NOT_EXISTS","Boolean","EXISTS","JSBI","reserve0","quotient","reserve1","useTokenBalance","liquidityToken","hasPosition","handleCurrencySelect","useCallback","currency","TOKEN0","handleSearchDismiss","prerequisiteMessage","LightCard","useNetworkSupportsV2","get","AutoColumn","gap","BlueCard","DeprecatedLink","fontWeight","color","b","ButtonDropdownLight","Row","CurrencyLogo","fontSize","marginLeft","symbol","ColumnCenter","Plus","size","justifyItems","backgroundColor","borderRadius","StyledInternalLink","MinimalPositionCard","border","justify","currencyId","INVALID","LOADING","CurrencySearchModal","isOpen","onCurrencySelect","onDismiss","showCommonBases","selectedCurrency","SwitchLocaleLink","V2Unsupported","unwrappedToken","isNative","formattedChainId","asSupportedChain","WRAPPED_NATIVE_CURRENCY","equals","_extends"],"sourceRoot":""}
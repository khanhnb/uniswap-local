{"version":3,"file":"static/js/398.780d504a.chunk.js","mappings":"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","sources":["components/FormattedCurrencyAmount/index.tsx","components/NavigationTabs/index.tsx","components/Slider/index.tsx","components/earn/styled.tsx","hooks/useDebouncedChangeHandler.tsx","pages/AppBody.tsx","state/burn/v3/hooks.tsx","pages/RemoveLiquidity/styled.tsx","pages/RemoveLiquidity/V3.tsx"],"sourcesContent":["import { Currency, CurrencyAmount, Fraction } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nconst CURRENCY_AMOUNT_MIN = new Fraction(JSBI.BigInt(1), JSBI.BigInt(1000000))\n\nexport default function FormattedCurrencyAmount({\n  currencyAmount,\n  significantDigits = 4,\n}: {\n  currencyAmount: CurrencyAmount<Currency>\n  significantDigits?: number\n}) {\n  return (\n    <>\n      {currencyAmount.equalTo(JSBI.BigInt(0))\n        ? '0'\n        : currencyAmount.greaterThan(CURRENCY_AMOUNT_MIN)\n        ? currencyAmount.toSignificant(significantDigits)\n        : `<${CURRENCY_AMOUNT_MIN.toSignificant(1)}`}\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Percent } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport SettingsTab from 'components/Settings'\nimport { ReactNode } from 'react'\nimport { ArrowLeft } from 'react-feather'\nimport { Link, useLocation } from 'react-router-dom'\nimport { Box } from 'rebass'\nimport { useAppDispatch } from 'state/hooks'\nimport { resetMintState } from 'state/mint/actions'\nimport { resetMintState as resetMintV3State } from 'state/mint/v3/actions'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { flexRowNoWrap } from 'theme/styles'\n\nimport { RowBetween } from '../Row'\n\nconst Tabs = styled.div`\n  ${flexRowNoWrap};\n  align-items: center;\n  border-radius: 3rem;\n  justify-content: space-evenly;\n`\n\nconst StyledLink = styled(Link)<{ flex?: string }>`\n  flex: ${({ flex }) => flex ?? 'none'};\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    flex: none;\n    margin-right: 10px;\n  `};\n`\n\nconst FindPoolTabsText = styled(ThemedText.SubHeaderLarge)`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n`\n\nconst StyledArrowLeft = styled(ArrowLeft)`\n  color: ${({ theme }) => theme.neutral1};\n`\n\nexport function FindPoolTabs({ origin }: { origin: string }) {\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem', position: 'relative' }}>\n        <Link to={origin}>\n          <StyledArrowLeft />\n        </Link>\n        <FindPoolTabsText>\n          <Trans>Import V2 pool</Trans>\n        </FindPoolTabsText>\n      </RowBetween>\n    </Tabs>\n  )\n}\n\nconst AddRemoveTitleText = styled(ThemedText.SubHeaderLarge)`\n  flex: 1;\n  margin: auto;\n`\n\nexport function AddRemoveTabs({\n  adding,\n  creating,\n  autoSlippage,\n  positionID,\n  children,\n}: {\n  adding: boolean\n  creating: boolean\n  autoSlippage: Percent\n  positionID?: string\n  showBackLink?: boolean\n  children?: ReactNode\n}) {\n  const { chainId } = useWeb3React()\n  const theme = useTheme()\n  // reset states on back\n  const dispatch = useAppDispatch()\n  const location = useLocation()\n\n  // detect if back should redirect to v3 or v2 pool page\n  const poolLink = location.pathname.includes('add/v2')\n    ? '/pools/v2'\n    : '/pools' + (positionID ? `/${positionID.toString()}` : '')\n\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }} align=\"center\">\n        <StyledLink\n          to={poolLink}\n          onClick={() => {\n            if (adding) {\n              // not 100% sure both of these are needed\n              dispatch(resetMintState())\n              dispatch(resetMintV3State())\n            }\n          }}\n          flex={children ? '1' : undefined}\n        >\n          <StyledArrowLeft stroke={theme.neutral2} />\n        </StyledLink>\n        <AddRemoveTitleText textAlign={children ? 'start' : 'center'}>\n          {creating ? (\n            <Trans>Create a pair</Trans>\n          ) : adding ? (\n            <Trans>Add liquidity</Trans>\n          ) : (\n            <Trans>Remove liquidity</Trans>\n          )}\n        </AddRemoveTitleText>\n        {children && <Box style={{ marginRight: '.5rem' }}>{children}</Box>}\n        <SettingsTab autoSlippage={autoSlippage} chainId={chainId} />\n      </RowBetween>\n    </Tabs>\n  )\n}\n","import { ChangeEvent, useCallback } from 'react'\nimport styled from 'styled-components'\n\nconst StyledRangeInput = styled.input<{ size: number }>`\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\n  width: 100%; /* Specific width is required for Firefox. */\n  background: transparent; /* Otherwise white in Chrome */\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-moz-focus-outer {\n    border: 0;\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: ${({ theme }) => theme.accent1};\n    border-radius: 100%;\n    border: none;\n    transform: translateY(-50%);\n    color: ${({ theme }) => theme.surface1};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-moz-range-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    border: none;\n    color: ${({ theme }) => theme.surface1};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-ms-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    color: ${({ theme }) => theme.surface1};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-webkit-slider-runnable-track {\n    background: linear-gradient(90deg, ${({ theme }) => theme.accent1}, ${({ theme }) => theme.accent1});\n    height: 2px;\n  }\n\n  &::-moz-range-track {\n    background: linear-gradient(90deg, ${({ theme }) => theme.surface4}, ${({ theme }) => theme.surface2});\n    height: 2px;\n  }\n\n  &::-ms-track {\n    width: 100%;\n    border-color: transparent;\n    color: transparent;\n\n    background: ${({ theme }) => theme.surface4};\n    height: 2px;\n  }\n  &::-ms-fill-lower {\n    background: ${({ theme }) => theme.surface4};\n  }\n  &::-ms-fill-upper {\n    background: ${({ theme }) => theme.surface2};\n  }\n`\n\ninterface InputSliderProps {\n  value: number\n  onChange: (value: number) => void\n  step?: number\n  min?: number\n  max?: number\n  size?: number\n}\n\nexport default function Slider({\n  value,\n  onChange,\n  min = 0,\n  step = 1,\n  max = 100,\n  size = 28,\n  ...rest\n}: InputSliderProps) {\n  const changeCallback = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      onChange(parseInt(e.target.value))\n    },\n    [onChange]\n  )\n\n  return (\n    <StyledRangeInput\n      size={size}\n      {...rest}\n      type=\"range\"\n      value={value}\n      style={{ padding: '15px 0' }}\n      onChange={changeCallback}\n      aria-labelledby=\"input slider\"\n      step={step}\n      min={min}\n      max={max}\n    />\n  )\n}\n","import styled from 'styled-components'\n\nimport uImage from '../../assets/images/big_unicorn.png'\nimport noise from '../../assets/images/noise.png'\nimport { AutoColumn } from '../Column'\n\nexport const DataCard = styled(AutoColumn)<{ disabled?: boolean }>`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #000000 0%, #2172e5 100%);\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n`\n\nexport const CardBGImage = styled.span<{ desaturate?: boolean }>`\n  background: url(${uImage});\n  width: 1000px;\n  height: 600px;\n  position: absolute;\n  border-radius: 12px;\n  opacity: 0.4;\n  top: -100px;\n  left: -100px;\n  transform: rotate(-15deg);\n  user-select: none;\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`\n\nexport const CardNoise = styled.span`\n  background: url(${noise});\n  background-size: cover;\n  mix-blend-mode: overlay;\n  border-radius: 12px;\n  width: 100%;\n  height: 100%;\n  opacity: 0.15;\n  position: absolute;\n  top: 0;\n  left: 0;\n  user-select: none;\n`\n\nexport const CardSection = styled(AutoColumn)<{ disabled?: boolean }>`\n  padding: 1rem;\n  z-index: 1;\n  opacity: ${({ disabled }) => disabled && '0.4'};\n`\n\nexport const Break = styled.div`\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  height: 1px;\n`\n","import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\n * @param value value that is rapidly changing\n * @param onChange change handler that should receive the debounced updates to the value\n * @param debouncedMs how long we should wait for changes to be applied\n */\nexport default function useDebouncedChangeHandler<T>(\n  value: T,\n  onChange: (newValue: T) => void,\n  debouncedMs = 100\n): [T, (value: T) => void] {\n  const [inner, setInner] = useState<T>(() => value)\n  const timer = useRef<ReturnType<typeof setTimeout>>()\n\n  const onChangeInner = useCallback(\n    (newValue: T) => {\n      setInner(newValue)\n      if (timer.current) {\n        clearTimeout(timer.current)\n      }\n      timer.current = setTimeout(() => {\n        onChange(newValue)\n        timer.current = undefined\n      }, debouncedMs)\n    },\n    [debouncedMs, onChange]\n  )\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n      timer.current = undefined\n    }\n    setInner(value)\n  }, [value])\n\n  return [inner, onChangeInner]\n}\n","import { PropsWithChildren } from 'react'\nimport styled from 'styled-components'\nimport { Z_INDEX } from 'theme/zIndex'\n\ninterface BodyWrapperProps {\n  $margin?: string\n  $maxWidth?: string\n}\n\nexport const BodyWrapper = styled.main<BodyWrapperProps>`\n  position: relative;\n  margin-top: ${({ $margin }) => $margin ?? '0px'};\n  max-width: ${({ $maxWidth }) => $maxWidth ?? '420px'};\n  width: 100%;\n  background: ${({ theme }) => theme.surface1};\n  border-radius: 16px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  margin-top: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: ${Z_INDEX.default};\n  font-feature-settings: 'ss01' on, 'ss02' on, 'cv01' on, 'cv03' on;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody(props: PropsWithChildren<BodyWrapperProps>) {\n  return <BodyWrapper {...props} />\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent } from '@uniswap/sdk-core'\nimport { Position } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToken } from 'hooks/Tokens'\nimport { usePool } from 'hooks/usePools'\nimport { useV3PositionFees } from 'hooks/useV3PositionFees'\nimport { ReactNode, useCallback, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { PositionDetails } from 'types/position'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nimport { AppState } from '../../reducer'\nimport { selectPercent } from './actions'\n\nexport function useBurnV3State(): AppState['burnV3'] {\n  return useAppSelector((state) => state.burnV3)\n}\n\nexport function useDerivedV3BurnInfo(\n  position?: PositionDetails,\n  asWETH = false\n): {\n  position?: Position\n  liquidityPercentage?: Percent\n  liquidityValue0?: CurrencyAmount<Currency>\n  liquidityValue1?: CurrencyAmount<Currency>\n  feeValue0?: CurrencyAmount<Currency>\n  feeValue1?: CurrencyAmount<Currency>\n  outOfRange: boolean\n  error?: ReactNode\n} {\n  const { account } = useWeb3React()\n  const { percent } = useBurnV3State()\n\n  const token0 = useToken(position?.token0)\n  const token1 = useToken(position?.token1)\n\n  const [, pool] = usePool(token0 ?? undefined, token1 ?? undefined, position?.fee)\n\n  const positionSDK = useMemo(\n    () =>\n      pool && position?.liquidity && typeof position?.tickLower === 'number' && typeof position?.tickUpper === 'number'\n        ? new Position({\n            pool,\n            liquidity: position.liquidity.toString(),\n            tickLower: position.tickLower,\n            tickUpper: position.tickUpper,\n          })\n        : undefined,\n    [pool, position]\n  )\n\n  const liquidityPercentage = new Percent(percent, 100)\n\n  const discountedAmount0 = positionSDK\n    ? liquidityPercentage.multiply(positionSDK.amount0.quotient).quotient\n    : undefined\n  const discountedAmount1 = positionSDK\n    ? liquidityPercentage.multiply(positionSDK.amount1.quotient).quotient\n    : undefined\n\n  const liquidityValue0 =\n    token0 && discountedAmount0\n      ? CurrencyAmount.fromRawAmount(asWETH ? token0 : unwrappedToken(token0), discountedAmount0)\n      : undefined\n  const liquidityValue1 =\n    token1 && discountedAmount1\n      ? CurrencyAmount.fromRawAmount(asWETH ? token1 : unwrappedToken(token1), discountedAmount1)\n      : undefined\n\n  const [feeValue0, feeValue1] = useV3PositionFees(pool ?? undefined, position?.tokenId, asWETH)\n\n  const outOfRange =\n    pool && position ? pool.tickCurrent < position.tickLower || pool.tickCurrent > position.tickUpper : false\n\n  let error: ReactNode | undefined\n  if (!account) {\n    error = <Trans>Connect wallet</Trans>\n  }\n  if (percent === 0) {\n    error = error ?? <Trans>Enter a percent</Trans>\n  }\n  return {\n    position: positionSDK,\n    liquidityPercentage,\n    liquidityValue0,\n    liquidityValue1,\n    feeValue0,\n    feeValue1,\n    outOfRange,\n    error,\n  }\n}\n\nexport function useBurnV3ActionHandlers(): {\n  onPercentSelect: (percent: number) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onPercentSelect = useCallback(\n    (percent: number) => {\n      dispatch(selectPercent({ percent }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onPercentSelect,\n  }\n}\n","import { MaxButton } from 'pages/Pool/styled'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 20px;\n  min-width: 460px;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToExtraSmall`\n    min-width: 340px;\n  `};\n`\n\nexport const SmallMaxButton = styled(MaxButton)`\n  font-size: 12px;\n`\n\nexport const ResponsiveHeaderText = styled(Text)`\n  font-size: 40px;\n  font-weight: 535;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToExtraSmall`\n     font-size: 24px\n  `};\n`\n","import { BigNumber } from '@ethersproject/bignumber'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { CurrencyAmount, Percent } from '@uniswap/sdk-core'\nimport { NonfungiblePositionManager } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport RangeBadge from 'components/Badge/RangeBadge'\nimport { ButtonConfirmed, ButtonPrimary } from 'components/Button'\nimport { LightCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { Break } from 'components/earn/styled'\nimport FormattedCurrencyAmount from 'components/FormattedCurrencyAmount'\nimport Loader from 'components/Icons/LoadingSpinner'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { AddRemoveTabs } from 'components/NavigationTabs'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Row'\nimport Slider from 'components/Slider'\nimport Toggle from 'components/Toggle'\nimport { isSupportedChain } from 'constants/chains'\nimport { useV3NFTPositionManagerContract } from 'hooks/useContract'\nimport useDebouncedChangeHandler from 'hooks/useDebouncedChangeHandler'\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\nimport { useV3PositionFromTokenId } from 'hooks/useV3Positions'\nimport useNativeCurrency from 'lib/hooks/useNativeCurrency'\nimport { PositionPageUnsupportedContent } from 'pages/Pool/PositionPage'\nimport { useCallback, useMemo, useState } from 'react'\nimport { Navigate, useLocation, useParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport { useBurnV3ActionHandlers, useBurnV3State, useDerivedV3BurnInfo } from 'state/burn/v3/hooks'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { useUserSlippageToleranceWithDefault } from 'state/user/hooks'\nimport { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { WrongChainError } from 'utils/errors'\n\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { TransactionType } from '../../state/transactions/types'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { currencyId } from '../../utils/currencyId'\nimport AppBody from '../AppBody'\nimport { ResponsiveHeaderText, SmallMaxButton, Wrapper } from './styled'\n\nconst DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE = new Percent(5, 100)\n\n// redirect invalid tokenIds\nexport default function RemoveLiquidityV3() {\n  const { chainId } = useWeb3React()\n  const { tokenId } = useParams<{ tokenId: string }>()\n  const location = useLocation()\n  const parsedTokenId = useMemo(() => {\n    try {\n      return BigNumber.from(tokenId)\n    } catch {\n      return null\n    }\n  }, [tokenId])\n\n  const { position, loading } = useV3PositionFromTokenId(parsedTokenId ?? undefined)\n  if (parsedTokenId === null || parsedTokenId.eq(0)) {\n    return <Navigate to={{ ...location, pathname: '/pools' }} replace />\n  }\n  if (isSupportedChain(chainId) && (loading || position)) {\n    return <Remove tokenId={parsedTokenId} />\n  } else {\n    return <PositionPageUnsupportedContent />\n  }\n}\nfunction Remove({ tokenId }: { tokenId: BigNumber }) {\n  const { position } = useV3PositionFromTokenId(tokenId)\n  const theme = useTheme()\n  const { account, chainId, provider } = useWeb3React()\n\n  // flag for receiving WETH\n  const [receiveWETH, setReceiveWETH] = useState(false)\n  const nativeCurrency = useNativeCurrency(chainId)\n  const nativeWrappedSymbol = nativeCurrency.wrapped.symbol\n\n  // burn state\n  const { percent } = useBurnV3State()\n  const {\n    position: positionSDK,\n    liquidityPercentage,\n    liquidityValue0,\n    liquidityValue1,\n    feeValue0,\n    feeValue1,\n    outOfRange,\n    error,\n  } = useDerivedV3BurnInfo(position, receiveWETH)\n  const { onPercentSelect } = useBurnV3ActionHandlers()\n\n  const removed = position?.liquidity?.eq(0)\n\n  // boilerplate for the slider\n  const [percentForSlider, onPercentSelectForSlider] = useDebouncedChangeHandler(percent, onPercentSelect)\n\n  const deadline = useTransactionDeadline() // custom from users settings\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE) // custom from users\n\n  const [showConfirm, setShowConfirm] = useState(false)\n  const [attemptingTxn, setAttemptingTxn] = useState(false)\n  const [txnHash, setTxnHash] = useState<string | undefined>()\n  const addTransaction = useTransactionAdder()\n  const positionManager = useV3NFTPositionManagerContract()\n  const burn = useCallback(async () => {\n    setAttemptingTxn(true)\n    if (\n      !positionManager ||\n      !liquidityValue0 ||\n      !liquidityValue1 ||\n      !deadline ||\n      !account ||\n      !chainId ||\n      !positionSDK ||\n      !liquidityPercentage ||\n      !provider\n    ) {\n      return\n    }\n\n    // we fall back to expecting 0 fees in case the fetch fails, which is safe in the\n    // vast majority of cases\n    const { calldata, value } = NonfungiblePositionManager.removeCallParameters(positionSDK, {\n      tokenId: tokenId.toString(),\n      liquidityPercentage,\n      slippageTolerance: allowedSlippage,\n      deadline: deadline.toString(),\n      collectOptions: {\n        expectedCurrencyOwed0: feeValue0 ?? CurrencyAmount.fromRawAmount(liquidityValue0.currency, 0),\n        expectedCurrencyOwed1: feeValue1 ?? CurrencyAmount.fromRawAmount(liquidityValue1.currency, 0),\n        recipient: account,\n      },\n    })\n\n    const txn = {\n      to: positionManager.address,\n      data: calldata,\n      value,\n    }\n\n    const connectedChainId = await provider.getSigner().getChainId()\n    if (chainId !== connectedChainId) throw new WrongChainError()\n\n    provider\n      .getSigner()\n      .estimateGas(txn)\n      .then((estimate) => {\n        const newTxn = {\n          ...txn,\n          gasLimit: calculateGasMargin(estimate),\n        }\n\n        return provider\n          .getSigner()\n          .sendTransaction(newTxn)\n          .then((response: TransactionResponse) => {\n            setTxnHash(response.hash)\n            setAttemptingTxn(false)\n            addTransaction(response, {\n              type: TransactionType.REMOVE_LIQUIDITY_V3,\n              baseCurrencyId: currencyId(liquidityValue0.currency),\n              quoteCurrencyId: currencyId(liquidityValue1.currency),\n              expectedAmountBaseRaw: liquidityValue0.quotient.toString(),\n              expectedAmountQuoteRaw: liquidityValue1.quotient.toString(),\n            })\n          })\n      })\n      .catch((error) => {\n        setAttemptingTxn(false)\n        console.error(error)\n      })\n  }, [\n    positionManager,\n    liquidityValue0,\n    liquidityValue1,\n    deadline,\n    account,\n    chainId,\n    positionSDK,\n    liquidityPercentage,\n    provider,\n    tokenId,\n    allowedSlippage,\n    feeValue0,\n    feeValue1,\n    addTransaction,\n  ])\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txnHash) {\n      onPercentSelectForSlider(0)\n    }\n    setAttemptingTxn(false)\n    setTxnHash('')\n  }, [onPercentSelectForSlider, txnHash])\n\n  const pendingText = (\n    <Trans>\n      Removing {liquidityValue0?.toSignificant(6)} {liquidityValue0?.currency?.symbol} and{' '}\n      {liquidityValue1?.toSignificant(6)} {liquidityValue1?.currency?.symbol}\n    </Trans>\n  )\n\n  function modalHeader() {\n    return (\n      <AutoColumn gap=\"sm\" style={{ padding: '16px' }}>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize={16} fontWeight={535}>\n            <Trans>Pooled {liquidityValue0?.currency?.symbol}:</Trans>\n          </Text>\n          <RowFixed>\n            <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n              {liquidityValue0 && <FormattedCurrencyAmount currencyAmount={liquidityValue0} />}\n            </Text>\n            <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={liquidityValue0?.currency} />\n          </RowFixed>\n        </RowBetween>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize={16} fontWeight={535}>\n            <Trans>Pooled {liquidityValue1?.currency?.symbol}:</Trans>\n          </Text>\n          <RowFixed>\n            <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n              {liquidityValue1 && <FormattedCurrencyAmount currencyAmount={liquidityValue1} />}\n            </Text>\n            <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={liquidityValue1?.currency} />\n          </RowFixed>\n        </RowBetween>\n        {feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) ? (\n          <>\n            <ThemedText.DeprecatedItalic fontSize={12} color={theme.neutral2} textAlign=\"left\" padding=\"8px 0 0 0\">\n              <Trans>You will also collect fees earned from this position.</Trans>\n            </ThemedText.DeprecatedItalic>\n            <RowBetween>\n              <Text fontSize={16} fontWeight={535}>\n                <Trans>{feeValue0?.currency?.symbol} Fees Earned:</Trans>\n              </Text>\n              <RowFixed>\n                <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                  {feeValue0 && <FormattedCurrencyAmount currencyAmount={feeValue0} />}\n                </Text>\n                <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={feeValue0?.currency} />\n              </RowFixed>\n            </RowBetween>\n            <RowBetween>\n              <Text fontSize={16} fontWeight={535}>\n                <Trans>{feeValue1?.currency?.symbol} Fees Earned:</Trans>\n              </Text>\n              <RowFixed>\n                <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                  {feeValue1 && <FormattedCurrencyAmount currencyAmount={feeValue1} />}\n                </Text>\n                <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={feeValue1?.currency} />\n              </RowFixed>\n            </RowBetween>\n          </>\n        ) : null}\n        <ButtonPrimary mt=\"16px\" onClick={burn}>\n          <Trans>Remove</Trans>\n        </ButtonPrimary>\n      </AutoColumn>\n    )\n  }\n\n  const showCollectAsWeth = Boolean(\n    liquidityValue0?.currency &&\n      liquidityValue1?.currency &&\n      (liquidityValue0.currency.isNative ||\n        liquidityValue1.currency.isNative ||\n        WRAPPED_NATIVE_CURRENCY[liquidityValue0.currency.chainId]?.equals(liquidityValue0.currency.wrapped) ||\n        WRAPPED_NATIVE_CURRENCY[liquidityValue1.currency.chainId]?.equals(liquidityValue1.currency.wrapped))\n  )\n  return (\n    <AutoColumn>\n      <TransactionConfirmationModal\n        isOpen={showConfirm}\n        onDismiss={handleDismissConfirmation}\n        attemptingTxn={attemptingTxn}\n        hash={txnHash ?? ''}\n        reviewContent={() => (\n          <ConfirmationModalContent\n            title={<Trans>Remove liquidity</Trans>}\n            onDismiss={handleDismissConfirmation}\n            topContent={modalHeader}\n          />\n        )}\n        pendingText={pendingText}\n      />\n      <AppBody $maxWidth=\"unset\">\n        <AddRemoveTabs\n          creating={false}\n          adding={false}\n          positionID={tokenId.toString()}\n          autoSlippage={DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE}\n        />\n        <Wrapper>\n          {position ? (\n            <AutoColumn gap=\"lg\">\n              <RowBetween>\n                <RowFixed>\n                  <DoubleCurrencyLogo\n                    currency0={liquidityValue0?.currency}\n                    currency1={liquidityValue1?.currency}\n                    size={20}\n                    margin={true}\n                  />\n                  <ThemedText.DeprecatedLabel\n                    ml=\"10px\"\n                    fontSize=\"20px\"\n                    id=\"remove-liquidity-tokens\"\n                  >{`${liquidityValue0?.currency?.symbol}/${liquidityValue1?.currency?.symbol}`}</ThemedText.DeprecatedLabel>\n                </RowFixed>\n                <RangeBadge removed={removed} inRange={!outOfRange} />\n              </RowBetween>\n              <LightCard>\n                <AutoColumn gap=\"md\">\n                  <ThemedText.DeprecatedMain fontWeight={485}>\n                    <Trans>Amount</Trans>\n                  </ThemedText.DeprecatedMain>\n                  <RowBetween>\n                    <ResponsiveHeaderText>\n                      <Trans>{percentForSlider}%</Trans>\n                    </ResponsiveHeaderText>\n                    <AutoRow gap=\"4px\" justify=\"flex-end\">\n                      <SmallMaxButton onClick={() => onPercentSelect(25)} width=\"20%\">\n                        <Trans>25%</Trans>\n                      </SmallMaxButton>\n                      <SmallMaxButton onClick={() => onPercentSelect(50)} width=\"20%\">\n                        <Trans>50%</Trans>\n                      </SmallMaxButton>\n                      <SmallMaxButton onClick={() => onPercentSelect(75)} width=\"20%\">\n                        <Trans>75%</Trans>\n                      </SmallMaxButton>\n                      <SmallMaxButton onClick={() => onPercentSelect(100)} width=\"20%\">\n                        <Trans>Max</Trans>\n                      </SmallMaxButton>\n                    </AutoRow>\n                  </RowBetween>\n                  <Slider value={percentForSlider} onChange={onPercentSelectForSlider} />\n                </AutoColumn>\n              </LightCard>\n              <LightCard>\n                <AutoColumn gap=\"md\">\n                  <RowBetween>\n                    <Text fontSize={16} fontWeight={535} id=\"remove-pooled-tokena-symbol\">\n                      <Trans>Pooled {liquidityValue0?.currency?.symbol}:</Trans>\n                    </Text>\n                    <RowFixed>\n                      <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                        {liquidityValue0 && <FormattedCurrencyAmount currencyAmount={liquidityValue0} />}\n                      </Text>\n                      <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={liquidityValue0?.currency} />\n                    </RowFixed>\n                  </RowBetween>\n                  <RowBetween>\n                    <Text fontSize={16} fontWeight={535} id=\"remove-pooled-tokenb-symbol\">\n                      <Trans>Pooled {liquidityValue1?.currency?.symbol}:</Trans>\n                    </Text>\n                    <RowFixed>\n                      <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                        {liquidityValue1 && <FormattedCurrencyAmount currencyAmount={liquidityValue1} />}\n                      </Text>\n                      <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={liquidityValue1?.currency} />\n                    </RowFixed>\n                  </RowBetween>\n                  {feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) ? (\n                    <>\n                      <Break />\n                      <RowBetween>\n                        <Text fontSize={16} fontWeight={535}>\n                          <Trans>{feeValue0?.currency?.symbol} Fees Earned:</Trans>\n                        </Text>\n                        <RowFixed>\n                          <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                            {feeValue0 && <FormattedCurrencyAmount currencyAmount={feeValue0} />}\n                          </Text>\n                          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={feeValue0?.currency} />\n                        </RowFixed>\n                      </RowBetween>\n                      <RowBetween>\n                        <Text fontSize={16} fontWeight={535}>\n                          <Trans>{feeValue1?.currency?.symbol} Fees Earned:</Trans>\n                        </Text>\n                        <RowFixed>\n                          <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                            {feeValue1 && <FormattedCurrencyAmount currencyAmount={feeValue1} />}\n                          </Text>\n                          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={feeValue1?.currency} />\n                        </RowFixed>\n                      </RowBetween>\n                    </>\n                  ) : null}\n                </AutoColumn>\n              </LightCard>\n\n              {showCollectAsWeth && (\n                <RowBetween>\n                  <ThemedText.DeprecatedMain>\n                    <Trans>Collect as {nativeWrappedSymbol}</Trans>\n                  </ThemedText.DeprecatedMain>\n                  <Toggle\n                    id=\"receive-as-weth\"\n                    isActive={receiveWETH}\n                    toggle={() => setReceiveWETH((receiveWETH) => !receiveWETH)}\n                  />\n                </RowBetween>\n              )}\n\n              <div style={{ display: 'flex' }}>\n                <AutoColumn gap=\"md\" style={{ flex: '1' }}>\n                  <ButtonConfirmed\n                    confirmed={false}\n                    disabled={removed || percent === 0 || !liquidityValue0}\n                    onClick={() => setShowConfirm(true)}\n                  >\n                    {removed ? <Trans>Closed</Trans> : error ?? <Trans>Remove</Trans>}\n                  </ButtonConfirmed>\n                </AutoColumn>\n              </div>\n            </AutoColumn>\n          ) : (\n            <Loader />\n          )}\n        </Wrapper>\n      </AppBody>\n    </AutoColumn>\n  )\n}\n"],"names":["CURRENCY_AMOUNT_MIN","Fraction","JSBI","FormattedCurrencyAmount","currencyAmount","significantDigits","equalTo","greaterThan","toSignificant","Tabs","styled","div","flexRowNoWrap","StyledLink","Link","flex","theme","deprecated_mediaWidth","deprecated_upToMedium","FindPoolTabsText","ThemedText","SubHeaderLarge","StyledArrowLeft","ArrowLeft","neutral1","FindPoolTabs","origin","RowBetween","style","padding","position","to","AddRemoveTitleText","AddRemoveTabs","adding","creating","autoSlippage","positionID","children","chainId","useWeb3React","useTheme","dispatch","useAppDispatch","poolLink","useLocation","pathname","includes","toString","align","onClick","resetMintState","resetMintV3State","undefined","stroke","neutral2","textAlign","Box","marginRight","SettingsTab","StyledRangeInput","input","size","accent1","surface1","surface4","surface2","Slider","value","onChange","min","step","max","rest","changeCallback","useCallback","e","parseInt","target","type","aria-labelledby","DataCard","AutoColumn","CardBGImage","span","uImage","desaturate","CardNoise","noise","CardSection","disabled","Break","useDebouncedChangeHandler","debouncedMs","inner","setInner","useState","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout","useEffect","BodyWrapper","main","$margin","$maxWidth","surface3","Z_INDEX","default","AppBody","props","useBurnV3State","useAppSelector","state","burnV3","Wrapper","deprecated_upToExtraSmall","SmallMaxButton","MaxButton","ResponsiveHeaderText","Text","DEFAULT_REMOVE_V3_LIQUIDITY_SLIPPAGE_TOLERANCE","Percent","RemoveLiquidityV3","tokenId","useParams","location","parsedTokenId","useMemo","BigNumber","from","loading","useV3PositionFromTokenId","eq","Navigate","replace","isSupportedChain","Remove","PositionPageUnsupportedContent","account","provider","receiveWETH","setReceiveWETH","nativeWrappedSymbol","useNativeCurrency","wrapped","symbol","percent","positionSDK","liquidityPercentage","liquidityValue0","liquidityValue1","feeValue0","feeValue1","outOfRange","error","asWETH","token0","useToken","token1","pool","usePool","fee","liquidity","tickLower","tickUpper","Position","discountedAmount0","multiply","amount0","quotient","discountedAmount1","amount1","CurrencyAmount","fromRawAmount","unwrappedToken","useV3PositionFees","tickCurrent","useDerivedV3BurnInfo","onPercentSelect","selectPercent","useBurnV3ActionHandlers","removed","percentForSlider","onPercentSelectForSlider","deadline","useTransactionDeadline","allowedSlippage","useUserSlippageToleranceWithDefault","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","txnHash","setTxnHash","addTransaction","useTransactionAdder","positionManager","useV3NFTPositionManagerContract","burn","async","calldata","NonfungiblePositionManager","removeCallParameters","slippageTolerance","collectOptions","expectedCurrencyOwed0","currency","expectedCurrencyOwed1","recipient","txn","address","data","connectedChainId","getSigner","getChainId","WrongChainError","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","hash","TransactionType","REMOVE_LIQUIDITY_V3","baseCurrencyId","currencyId","quoteCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","catch","console","handleDismissConfirmation","pendingText","modalHeader","gap","fontSize","fontWeight","RowFixed","marginLeft","CurrencyLogo","DeprecatedItalic","color","ButtonPrimary","mt","showCollectAsWeth","Boolean","isNative","WRAPPED_NATIVE_CURRENCY","equals","TransactionConfirmationModal","isOpen","onDismiss","reviewContent","ConfirmationModalContent","title","topContent","DoubleCurrencyLogo","currency0","currency1","margin","DeprecatedLabel","ml","id","RangeBadge","inRange","LightCard","DeprecatedMain","AutoRow","justify","width","Toggle","isActive","toggle","display","ButtonConfirmed","confirmed","Loader"],"sourceRoot":""}
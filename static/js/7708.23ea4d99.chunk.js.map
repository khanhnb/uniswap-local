{"version":3,"file":"static/js/7708.23ea4d99.chunk.js","mappings":"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","sources":["components/Slider/index.tsx","hooks/useDebouncedChangeHandler.tsx","hooks/useIsArgentWallet.ts","hooks/useERC20Permit.ts","hooks/useV2LiquidityTokenPermit.ts","state/burn/hooks.tsx","pages/RemoveLiquidity/index.tsx","utils/calculateSlippageAmount.ts"],"sourcesContent":["import { ChangeEvent, useCallback } from 'react'\nimport styled from 'styled-components'\n\nconst StyledRangeInput = styled.input<{ size: number }>`\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\n  width: 100%; /* Specific width is required for Firefox. */\n  background: transparent; /* Otherwise white in Chrome */\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-moz-focus-outer {\n    border: 0;\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: ${({ theme }) => theme.accent1};\n    border-radius: 100%;\n    border: none;\n    transform: translateY(-50%);\n    color: ${({ theme }) => theme.surface1};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-moz-range-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    border: none;\n    color: ${({ theme }) => theme.surface1};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-ms-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    color: ${({ theme }) => theme.surface1};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-webkit-slider-runnable-track {\n    background: linear-gradient(90deg, ${({ theme }) => theme.accent1}, ${({ theme }) => theme.accent1});\n    height: 2px;\n  }\n\n  &::-moz-range-track {\n    background: linear-gradient(90deg, ${({ theme }) => theme.surface4}, ${({ theme }) => theme.surface2});\n    height: 2px;\n  }\n\n  &::-ms-track {\n    width: 100%;\n    border-color: transparent;\n    color: transparent;\n\n    background: ${({ theme }) => theme.surface4};\n    height: 2px;\n  }\n  &::-ms-fill-lower {\n    background: ${({ theme }) => theme.surface4};\n  }\n  &::-ms-fill-upper {\n    background: ${({ theme }) => theme.surface2};\n  }\n`\n\ninterface InputSliderProps {\n  value: number\n  onChange: (value: number) => void\n  step?: number\n  min?: number\n  max?: number\n  size?: number\n}\n\nexport default function Slider({\n  value,\n  onChange,\n  min = 0,\n  step = 1,\n  max = 100,\n  size = 28,\n  ...rest\n}: InputSliderProps) {\n  const changeCallback = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      onChange(parseInt(e.target.value))\n    },\n    [onChange]\n  )\n\n  return (\n    <StyledRangeInput\n      size={size}\n      {...rest}\n      type=\"range\"\n      value={value}\n      style={{ padding: '15px 0' }}\n      onChange={changeCallback}\n      aria-labelledby=\"input slider\"\n      step={step}\n      min={min}\n      max={max}\n    />\n  )\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\n * @param value value that is rapidly changing\n * @param onChange change handler that should receive the debounced updates to the value\n * @param debouncedMs how long we should wait for changes to be applied\n */\nexport default function useDebouncedChangeHandler<T>(\n  value: T,\n  onChange: (newValue: T) => void,\n  debouncedMs = 100\n): [T, (value: T) => void] {\n  const [inner, setInner] = useState<T>(() => value)\n  const timer = useRef<ReturnType<typeof setTimeout>>()\n\n  const onChangeInner = useCallback(\n    (newValue: T) => {\n      setInner(newValue)\n      if (timer.current) {\n        clearTimeout(timer.current)\n      }\n      timer.current = setTimeout(() => {\n        onChange(newValue)\n        timer.current = undefined\n      }, debouncedMs)\n    },\n    [debouncedMs, onChange]\n  )\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n      timer.current = undefined\n    }\n    setInner(value)\n  }, [value])\n\n  return [inner, onChangeInner]\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { NEVER_RELOAD, useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { useArgentWalletDetectorContract } from './useContract'\n\nexport default function useIsArgentWallet(): boolean {\n  const { account } = useWeb3React()\n  const argentWalletDetector = useArgentWalletDetectorContract()\n  const inputs = useMemo(() => [account ?? undefined], [account])\n  const call = useSingleCallResult(argentWalletDetector, 'isArgentWallet', inputs, NEVER_RELOAD)\n  return Boolean(call?.result?.[0])\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { splitSignature } from '@ethersproject/bytes'\nimport { ChainId, Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo, useState } from 'react'\n\nimport { DAI, UNI, USDC_MAINNET } from '../constants/tokens'\nimport { useEIP2612Contract } from './useContract'\nimport useIsArgentWallet from './useIsArgentWallet'\n\nexport enum PermitType {\n  AMOUNT = 1,\n  ALLOWED = 2,\n}\n\n// 20 minutes to submit after signing\nconst PERMIT_VALIDITY_BUFFER = 20 * 60\n\nexport interface PermitInfo {\n  type: PermitType\n  name: string\n  // version is optional, and if omitted, will not be included in the domain\n  version?: string\n}\n\n// todo: read this information from extensions on token lists or elsewhere (permit registry?)\nconst PERMITTABLE_TOKENS: {\n  [chainId: number]: {\n    [checksummedTokenAddress: string]: PermitInfo\n  }\n} = {\n  [ChainId.MAINNET]: {\n    [USDC_MAINNET.address]: { type: PermitType.AMOUNT, name: 'USD Coin', version: '2' },\n    [DAI.address]: { type: PermitType.ALLOWED, name: 'Dai Stablecoin', version: '1' },\n    [UNI[ChainId.MAINNET].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n  [ChainId.GOERLI]: {\n    [UNI[ChainId.GOERLI].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n  [ChainId.SEPOLIA]: {\n    [UNI[ChainId.SEPOLIA].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n}\n\nenum UseERC20PermitState {\n  // returned for any reason, e.g. it is an argent wallet, or the currency does not support it\n  NOT_APPLICABLE,\n  LOADING,\n  NOT_SIGNED,\n  SIGNED,\n}\n\ntype StandardSignatureData = {\n  v: number\n  r: string\n  s: string\n  deadline: number\n  nonce: number\n  owner: string\n  spender: string\n  chainId: number\n  tokenAddress: string\n  permitType: PermitType\n  amount: string\n}\n\ntype AllowedSignatureData = {\n  v: number\n  r: string\n  s: string\n  deadline: number\n  nonce: number\n  owner: string\n  spender: string\n  chainId: number\n  tokenAddress: string\n  permitType: PermitType\n  allowed: true\n}\n\ntype SignatureData = StandardSignatureData | AllowedSignatureData\n\nconst EIP712_DOMAIN_TYPE = [\n  { name: 'name', type: 'string' },\n  { name: 'version', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n]\n\nconst EIP712_DOMAIN_TYPE_NO_VERSION = [\n  { name: 'name', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n]\n\nconst EIP2612_TYPE = [\n  { name: 'owner', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'value', type: 'uint256' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'deadline', type: 'uint256' },\n]\n\nconst PERMIT_ALLOWED_TYPE = [\n  { name: 'holder', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'expiry', type: 'uint256' },\n  { name: 'allowed', type: 'bool' },\n]\n\nexport function useERC20Permit(\n  currencyAmount: CurrencyAmount<Currency> | null | undefined,\n  spender: string | null | undefined,\n  transactionDeadline: BigNumber | undefined,\n  overridePermitInfo: PermitInfo | undefined | null\n): {\n  signatureData: SignatureData | null\n  state: UseERC20PermitState\n  gatherPermitSignature: null | (() => Promise<void>)\n} {\n  const { account, chainId, provider } = useWeb3React()\n  const tokenAddress = currencyAmount?.currency?.isToken ? currencyAmount.currency.address : undefined\n  const eip2612Contract = useEIP2612Contract(tokenAddress)\n  const isArgentWallet = useIsArgentWallet()\n  const nonceInputs = useMemo(() => [account ?? undefined], [account])\n  const tokenNonceState = useSingleCallResult(eip2612Contract, 'nonces', nonceInputs)\n  const permitInfo =\n    overridePermitInfo ?? (chainId && tokenAddress ? PERMITTABLE_TOKENS[chainId]?.[tokenAddress] : undefined)\n\n  const [signatureData, setSignatureData] = useState<SignatureData | null>(null)\n\n  return useMemo(() => {\n    if (\n      isArgentWallet ||\n      !currencyAmount ||\n      !eip2612Contract ||\n      !account ||\n      !chainId ||\n      !transactionDeadline ||\n      !provider ||\n      !tokenNonceState.valid ||\n      !tokenAddress ||\n      !spender ||\n      !permitInfo\n    ) {\n      return {\n        state: UseERC20PermitState.NOT_APPLICABLE,\n        signatureData: null,\n        gatherPermitSignature: null,\n      }\n    }\n\n    const nonceNumber = tokenNonceState.result?.[0]?.toNumber()\n    if (tokenNonceState.loading || typeof nonceNumber !== 'number') {\n      return {\n        state: UseERC20PermitState.LOADING,\n        signatureData: null,\n        gatherPermitSignature: null,\n      }\n    }\n\n    const isSignatureDataValid =\n      signatureData &&\n      signatureData.owner === account &&\n      signatureData.deadline >= transactionDeadline.toNumber() &&\n      signatureData.tokenAddress === tokenAddress &&\n      signatureData.nonce === nonceNumber &&\n      signatureData.spender === spender &&\n      ('allowed' in signatureData ||\n        JSBI.greaterThanOrEqual(JSBI.BigInt(signatureData.amount), currencyAmount.quotient))\n\n    return {\n      state: isSignatureDataValid ? UseERC20PermitState.SIGNED : UseERC20PermitState.NOT_SIGNED,\n      signatureData: isSignatureDataValid ? signatureData : null,\n      gatherPermitSignature: async function gatherPermitSignature() {\n        const allowed = permitInfo.type === PermitType.ALLOWED\n        const signatureDeadline = transactionDeadline.toNumber() + PERMIT_VALIDITY_BUFFER\n        const value = currencyAmount.quotient.toString()\n\n        const message = allowed\n          ? {\n              holder: account,\n              spender,\n              allowed,\n              nonce: nonceNumber,\n              expiry: signatureDeadline,\n            }\n          : {\n              owner: account,\n              spender,\n              value,\n              nonce: nonceNumber,\n              deadline: signatureDeadline,\n            }\n        const domain = permitInfo.version\n          ? {\n              name: permitInfo.name,\n              version: permitInfo.version,\n              verifyingContract: tokenAddress,\n              chainId,\n            }\n          : {\n              name: permitInfo.name,\n              verifyingContract: tokenAddress,\n              chainId,\n            }\n        const data = JSON.stringify({\n          types: {\n            EIP712Domain: permitInfo.version ? EIP712_DOMAIN_TYPE : EIP712_DOMAIN_TYPE_NO_VERSION,\n            Permit: allowed ? PERMIT_ALLOWED_TYPE : EIP2612_TYPE,\n          },\n          domain,\n          primaryType: 'Permit',\n          message,\n        })\n\n        return provider\n          .send('eth_signTypedData_v4', [account, data])\n          .then(splitSignature)\n          .then((signature) => {\n            setSignatureData({\n              v: signature.v,\n              r: signature.r,\n              s: signature.s,\n              deadline: signatureDeadline,\n              ...(allowed ? { allowed } : { amount: value }),\n              nonce: nonceNumber,\n              chainId,\n              owner: account,\n              spender,\n              tokenAddress,\n              permitType: permitInfo.type,\n            })\n          })\n      },\n    }\n  }, [\n    currencyAmount,\n    eip2612Contract,\n    account,\n    chainId,\n    isArgentWallet,\n    transactionDeadline,\n    provider,\n    tokenNonceState.loading,\n    tokenNonceState.valid,\n    tokenNonceState.result,\n    tokenAddress,\n    spender,\n    permitInfo,\n    signatureData,\n  ])\n}\n","import { CurrencyAmount, Token } from '@uniswap/sdk-core'\n\nimport { PermitInfo, PermitType, useERC20Permit } from './useERC20Permit'\nimport useTransactionDeadline from './useTransactionDeadline'\n\nconst REMOVE_V2_LIQUIDITY_PERMIT_INFO: PermitInfo = {\n  version: '1',\n  name: 'Uniswap V2',\n  type: PermitType.AMOUNT,\n}\n\nexport function useV2LiquidityTokenPermit(\n  liquidityAmount: CurrencyAmount<Token> | null | undefined,\n  spender: string | null | undefined\n) {\n  const transactionDeadline = useTransactionDeadline()\n  return useERC20Permit(liquidityAmount, spender, transactionDeadline, REMOVE_V2_LIQUIDITY_PERMIT_INFO)\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent, Token } from '@uniswap/sdk-core'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ReactNode, useCallback } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { AppState } from 'state/reducer'\n\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { useV2Pair } from '../../hooks/useV2Pairs'\nimport { useTokenBalances } from '../connection/hooks'\nimport { Field, typeInput } from './actions'\n\nexport function useBurnState(): AppState['burn'] {\n  return useAppSelector((state) => state.burn)\n}\n\nexport function useDerivedBurnInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  pair?: Pair | null\n  parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\n  }\n  error?: ReactNode\n} {\n  const { account } = useWeb3React()\n\n  const { independentField, typedValue } = useBurnState()\n\n  // pair + totalsupply\n  const [, pair] = useV2Pair(currencyA, currencyB)\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\n  const userLiquidity: undefined | CurrencyAmount<Token> = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\n\n  const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair?.liquidityToken,\n  }\n\n  // liquidity values\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n  const liquidityValueA =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenA &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\n      ? CurrencyAmount.fromRawAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).quotient)\n      : undefined\n  const liquidityValueB =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenB &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\n      ? CurrencyAmount.fromRawAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).quotient)\n      : undefined\n  const liquidityValues: { [Field.CURRENCY_A]?: CurrencyAmount<Token>; [Field.CURRENCY_B]?: CurrencyAmount<Token> } = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB,\n  }\n\n  let percentToRemove: Percent = new Percent('0', '100')\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100')\n  }\n  // user specified a specific amount of liquidity tokens\n  else if (independentField === Field.LIQUIDITY) {\n    if (pair?.liquidityToken) {\n      const independentAmount = tryParseCurrencyAmount(typedValue, pair.liquidityToken)\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.quotient, userLiquidity.quotient)\n      }\n    }\n  }\n  // user specified a specific amount of token a or b\n  else {\n    if (tokens[independentField]) {\n      const independentAmount = tryParseCurrencyAmount(typedValue, tokens[independentField])\n      const liquidityValue = liquidityValues[independentField]\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n        percentToRemove = new Percent(independentAmount.quotient, liquidityValue.quotient)\n      }\n    }\n  }\n\n  const parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\n  } = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]:\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\n        ? CurrencyAmount.fromRawAmount(\n            userLiquidity.currency,\n            percentToRemove.multiply(userLiquidity.quotient).quotient\n          )\n        : undefined,\n    [Field.CURRENCY_A]:\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\n        ? CurrencyAmount.fromRawAmount(tokenA, percentToRemove.multiply(liquidityValueA.quotient).quotient)\n        : undefined,\n    [Field.CURRENCY_B]:\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\n        ? CurrencyAmount.fromRawAmount(tokenB, percentToRemove.multiply(liquidityValueB.quotient).quotient)\n        : undefined,\n  }\n\n  let error: ReactNode | undefined\n  if (!account) {\n    error = <Trans>Connect wallet</Trans>\n  }\n\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? <Trans>Enter an amount</Trans>\n  }\n\n  return { pair, parsedAmounts, error }\n}\n\nexport function useBurnActionHandlers(): {\n  onUserInput: (field: Field, typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onUserInput,\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { Currency, Percent } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToggleAccountDrawer } from 'components/AccountDrawer'\nimport { V2Unsupported } from 'components/V2Unsupported'\nimport { isSupportedChain } from 'constants/chains'\nimport { useNetworkSupportsV2 } from 'hooks/useNetworkSupportsV2'\nimport { useV2LiquidityTokenPermit } from 'hooks/useV2LiquidityTokenPermit'\nimport { PositionPageUnsupportedContent } from 'pages/Pool/PositionPage'\nimport { useCallback, useMemo, useState } from 'react'\nimport { ArrowDown, Plus } from 'react-feather'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport { useTheme } from 'styled-components'\nimport { StyledInternalLink, ThemedText } from 'theme/components'\n\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { BlueCard, LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport CurrencyLogo from '../../components/Logo/CurrencyLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween, RowFixed } from '../../components/Row'\nimport Slider from '../../components/Slider'\nimport { Dots } from '../../components/swap/styled'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { usePairContract, useV2RouterContract } from '../../hooks/useContract'\nimport useDebouncedChangeHandler from '../../hooks/useDebouncedChangeHandler'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/burn/actions'\nimport { useBurnActionHandlers, useBurnState, useDerivedBurnInfo } from '../../state/burn/hooks'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { TransactionType } from '../../state/transactions/types'\nimport { useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { calculateSlippageAmount } from '../../utils/calculateSlippageAmount'\nimport { currencyId } from '../../utils/currencyId'\nimport AppBody from '../AppBody'\nimport { ClickableText, MaxButton, Wrapper } from '../Pool/styled'\n\nconst DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE = new Percent(5, 100)\n\nexport default function RemoveLiquidityWrapper() {\n  const { chainId } = useWeb3React()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\n  if (isSupportedChain(chainId) && currencyA !== currencyB) {\n    return <RemoveLiquidity />\n  } else {\n    return <PositionPageUnsupportedContent />\n  }\n}\n\nfunction RemoveLiquidity() {\n  const navigate = useNavigate()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\n  const { account, chainId, provider } = useWeb3React()\n  const [tokenA, tokenB] = useMemo(() => [currencyA?.wrapped, currencyB?.wrapped], [currencyA, currencyB])\n\n  const theme = useTheme()\n\n  // toggle wallet when disconnected\n  const toggleWalletDrawer = useToggleAccountDrawer()\n\n  // burn state\n  const { independentField, typedValue } = useBurnState()\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\n\n  // txn values\n  const [txHash, setTxHash] = useState<string>('')\n  const deadline = useTransactionDeadline()\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE)\n\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n  }\n\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\n\n  // pair contract\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\n\n  const router = useV2RouterContract()\n\n  // allowance handling\n  const { gatherPermitSignature, signatureData } = useV2LiquidityTokenPermit(\n    parsedAmounts[Field.LIQUIDITY],\n    router?.address\n  )\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], router?.address)\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !provider || !deadline) throw new Error('missing dependencies')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    if (gatherPermitSignature) {\n      try {\n        await gatherPermitSignature()\n      } catch (error) {\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n        if (error?.code !== 4001) {\n          await approveCallback()\n        }\n      }\n    } else {\n      await approveCallback()\n    }\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      return _onUserInput(field, typedValue)\n    },\n    [_onUserInput]\n  )\n\n  const onLiquidityInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.LIQUIDITY, typedValue),\n    [onUserInput]\n  )\n  const onCurrencyAInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.CURRENCY_A, typedValue),\n    [onUserInput]\n  )\n  const onCurrencyBInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.CURRENCY_B, typedValue),\n    [onUserInput]\n  )\n\n  // tx sending\n  const addTransaction = useTransactionAdder()\n\n  const networkSupportsV2 = useNetworkSupportsV2()\n\n  async function onRemove() {\n    if (!chainId || !provider || !account || !deadline || !router || !networkSupportsV2) {\n      throw new Error('missing dependencies')\n    }\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts')\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\n    }\n\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    const currencyBIsETH = currencyB.isNative\n    const oneCurrencyIsETH = currencyA.isNative || currencyBIsETH\n\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\n\n    let methodNames: string[], args: Array<string | string[] | number | boolean>\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n    }\n    // we have a signature, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n      // removeLiquidityETHWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\n    }\n\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map((methodName) =>\n        router.estimateGas[methodName](...args)\n          .then((estimateGas) => calculateGasMargin(estimateGas))\n          .catch((error) => {\n            console.error(`estimateGas failed`, methodName, args, error)\n            return undefined\n          })\n      )\n    )\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\n      BigNumber.isBigNumber(safeGasEstimate)\n    )\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.')\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation]\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\n\n      setAttemptingTxn(true)\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate,\n      })\n        .then((response: TransactionResponse) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            type: TransactionType.REMOVE_LIQUIDITY_V3,\n            baseCurrencyId: currencyId(currencyA),\n            quoteCurrencyId: currencyId(currencyB),\n            expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient.toString() ?? '0',\n            expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient.toString() ?? '0',\n          })\n\n          setTxHash(response.hash)\n        })\n        .catch((error: Error) => {\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          console.error(error)\n        })\n    }\n  }\n\n  function modalHeader() {\n    return (\n      <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize={24} fontWeight={535}>\n            {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\n          </Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyA} size=\"24px\" />\n            <Text fontSize={24} fontWeight={535} style={{ marginLeft: '10px' }}>\n              {currencyA?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowFixed>\n          <Plus size=\"16\" color={theme.neutral2} />\n        </RowFixed>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize={24} fontWeight={535}>\n            {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\n          </Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyB} size=\"24px\" />\n            <Text fontSize={24} fontWeight={535} style={{ marginLeft: '10px' }}>\n              {currencyB?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n\n        <ThemedText.DeprecatedItalic fontSize={12} color={theme.neutral2} textAlign=\"left\" padding=\"12px 0 0 0\">\n          <Trans>\n            Output is estimated. If the price changes by more than {allowedSlippage.toSignificant(4)}% your transaction\n            will revert.\n          </Trans>\n        </ThemedText.DeprecatedItalic>\n      </AutoColumn>\n    )\n  }\n\n  function modalBottom() {\n    return (\n      <>\n        <RowBetween>\n          <Text color={theme.neutral2} fontWeight={535} fontSize={16}>\n            <Trans>\n              UNI {currencyA?.symbol}/{currencyB?.symbol} Burned\n            </Trans>\n          </Text>\n          <RowFixed>\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin={true} />\n            <Text fontWeight={535} fontSize={16}>\n              {parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        {pair && (\n          <>\n            <RowBetween>\n              <Text color={theme.neutral2} fontWeight={535} fontSize={16}>\n                <Trans>Price</Trans>\n              </Text>\n              <Text fontWeight={535} fontSize={16} color={theme.neutral1}>\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n              </Text>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <Text fontWeight={535} fontSize={16} color={theme.neutral1}>\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n              </Text>\n            </RowBetween>\n          </>\n        )}\n        <ButtonPrimary disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\n          <Text fontWeight={535} fontSize={20}>\n            <Trans>Confirm</Trans>\n          </Text>\n        </ButtonPrimary>\n      </>\n    )\n  }\n\n  const pendingText = (\n    <Trans>\n      Removing {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} {currencyA?.symbol} and\n      {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} {currencyB?.symbol}\n    </Trans>\n  )\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: number) => {\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\n    },\n    [onUserInput]\n  )\n\n  const oneCurrencyIsETH = currencyA?.isNative || currencyB?.isNative\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      WRAPPED_NATIVE_CURRENCY[chainId] &&\n      ((currencyA && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(currencyA)) ||\n        (currencyB && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(currencyB)))\n  )\n\n  const handleSelectCurrencyA = useCallback(\n    (currency: Currency) => {\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\n        navigate(`/remove/v2/${currencyId(currency)}/${currencyIdA}`)\n      } else {\n        navigate(`/remove/v2/${currencyId(currency)}/${currencyIdB}`)\n      }\n    },\n    [currencyIdA, currencyIdB, navigate]\n  )\n  const handleSelectCurrencyB = useCallback(\n    (currency: Currency) => {\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\n        navigate(`/remove/v2/${currencyIdB}/${currencyId(currency)}`)\n      } else {\n        navigate(`/remove/v2/${currencyIdA}/${currencyId(currency)}`)\n      }\n    },\n    [currencyIdA, currencyIdB, navigate]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\n    }\n    setTxHash('')\n  }, [onUserInput, txHash])\n\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\n    liquidityPercentChangeCallback\n  )\n\n  if (!networkSupportsV2) return <V2Unsupported />\n\n  return (\n    <>\n      <AppBody>\n        <AddRemoveTabs creating={false} adding={false} autoSlippage={DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash ? txHash : ''}\n            reviewContent={() => (\n              <ConfirmationModalContent\n                title={<Trans>You will receive</Trans>}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <AutoColumn gap=\"md\">\n            <BlueCard>\n              <AutoColumn gap=\"10px\">\n                <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\">\n                  <Trans>\n                    <b>Tip:</b> Removing pool tokens converts your position back into underlying tokens at the current\n                    rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.\n                  </Trans>\n                </ThemedText.DeprecatedLink>\n              </AutoColumn>\n            </BlueCard>\n            <LightCard>\n              <AutoColumn gap=\"20px\">\n                <RowBetween>\n                  <Text fontWeight={535}>\n                    <Trans>Remove amount</Trans>\n                  </Text>\n                  <ClickableText\n                    fontWeight={535}\n                    onClick={() => {\n                      setShowDetailed(!showDetailed)\n                    }}\n                  >\n                    {showDetailed ? <Trans>Simple</Trans> : <Trans>Detailed</Trans>}\n                  </ClickableText>\n                </RowBetween>\n                <Row style={{ alignItems: 'flex-end' }}>\n                  <Text fontSize={72} fontWeight={535}>\n                    {formattedAmounts[Field.LIQUIDITY_PERCENT]}%\n                  </Text>\n                </Row>\n                {!showDetailed && (\n                  <>\n                    <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} />\n                    <RowBetween>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')} width=\"20%\">\n                        25%\n                      </MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')} width=\"20%\">\n                        50%\n                      </MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')} width=\"20%\">\n                        75%\n                      </MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')} width=\"20%\">\n                        Max\n                      </MaxButton>\n                    </RowBetween>\n                  </>\n                )}\n              </AutoColumn>\n            </LightCard>\n            {!showDetailed && (\n              <>\n                <ColumnCenter>\n                  <ArrowDown size=\"16\" color={theme.neutral2} />\n                </ColumnCenter>\n                <LightCard>\n                  <AutoColumn gap=\"10px\">\n                    <RowBetween>\n                      <Text fontSize={24} fontWeight={535}>\n                        {formattedAmounts[Field.CURRENCY_A] || '-'}\n                      </Text>\n                      <RowFixed>\n                        <CurrencyLogo currency={currencyA} style={{ marginRight: '12px' }} />\n                        <Text fontSize={24} fontWeight={535} id=\"remove-liquidity-tokena-symbol\">\n                          {currencyA?.symbol}\n                        </Text>\n                      </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                      <Text fontSize={24} fontWeight={535}>\n                        {formattedAmounts[Field.CURRENCY_B] || '-'}\n                      </Text>\n                      <RowFixed>\n                        <CurrencyLogo currency={currencyB} style={{ marginRight: '12px' }} />\n                        <Text fontSize={24} fontWeight={535} id=\"remove-liquidity-tokenb-symbol\">\n                          {currencyB?.symbol}\n                        </Text>\n                      </RowFixed>\n                    </RowBetween>\n                    {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\n                      <RowBetween style={{ justifyContent: 'flex-end' }}>\n                        {oneCurrencyIsETH ? (\n                          <StyledInternalLink\n                            to={`/remove/v2/${\n                              currencyA?.isNative && chainId && WRAPPED_NATIVE_CURRENCY[chainId]\n                                ? WRAPPED_NATIVE_CURRENCY[chainId]?.address\n                                : currencyIdA\n                            }/${\n                              currencyB?.isNative && chainId && WRAPPED_NATIVE_CURRENCY[chainId]\n                                ? WRAPPED_NATIVE_CURRENCY[chainId]?.address\n                                : currencyIdB\n                            }`}\n                          >\n                            Receive WETH\n                          </StyledInternalLink>\n                        ) : oneCurrencyIsWETH ? (\n                          <StyledInternalLink\n                            to={`/remove/v2/${\n                              currencyA && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(currencyA) ? 'ETH' : currencyIdA\n                            }/${\n                              currencyB && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(currencyB) ? 'ETH' : currencyIdB\n                            }`}\n                          >\n                            Receive ETH\n                          </StyledInternalLink>\n                        ) : null}\n                      </RowBetween>\n                    ) : null}\n                  </AutoColumn>\n                </LightCard>\n              </>\n            )}\n\n            {showDetailed && (\n              <>\n                <CurrencyInputPanel\n                  value={formattedAmounts[Field.LIQUIDITY]}\n                  onUserInput={onLiquidityInput}\n                  onMax={() => {\n                    onUserInput(Field.LIQUIDITY_PERCENT, '100')\n                  }}\n                  showMaxButton={!atMaxAmount}\n                  currency={pair?.liquidityToken}\n                  pair={pair}\n                  id=\"liquidity-amount\"\n                />\n                <ColumnCenter>\n                  <ArrowDown size=\"16\" color={theme.neutral2} />\n                </ColumnCenter>\n                <CurrencyInputPanel\n                  hideBalance={true}\n                  value={formattedAmounts[Field.CURRENCY_A]}\n                  onUserInput={onCurrencyAInput}\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                  showMaxButton={!atMaxAmount}\n                  currency={currencyA}\n                  label=\"Output\"\n                  onCurrencySelect={handleSelectCurrencyA}\n                  id=\"remove-liquidity-tokena\"\n                />\n                <ColumnCenter>\n                  <Plus size=\"16\" color={theme.neutral2} />\n                </ColumnCenter>\n                <CurrencyInputPanel\n                  hideBalance={true}\n                  value={formattedAmounts[Field.CURRENCY_B]}\n                  onUserInput={onCurrencyBInput}\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                  showMaxButton={!atMaxAmount}\n                  currency={currencyB}\n                  label=\"Output\"\n                  onCurrencySelect={handleSelectCurrencyB}\n                  id=\"remove-liquidity-tokenb\"\n                />\n              </>\n            )}\n            {pair && (\n              <div style={{ padding: '10px 20px' }}>\n                <RowBetween>\n                  <Trans>Price:</Trans>\n                  <div>\n                    1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n                  </div>\n                </RowBetween>\n                <RowBetween>\n                  <div />\n                  <div>\n                    1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n                  </div>\n                </RowBetween>\n              </div>\n            )}\n            <div style={{ position: 'relative' }}>\n              {!account ? (\n                <ButtonLight onClick={toggleWalletDrawer}>\n                  <Trans>Connect wallet</Trans>\n                </ButtonLight>\n              ) : (\n                <RowBetween>\n                  <ButtonConfirmed\n                    onClick={onAttemptToApprove}\n                    confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\n                    disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n                    mr=\"0.5rem\"\n                    fontWeight={535}\n                    fontSize={16}\n                  >\n                    {approval === ApprovalState.PENDING ? (\n                      <Dots>\n                        <Trans>Approving</Trans>\n                      </Dots>\n                    ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                      <Trans>Approved</Trans>\n                    ) : (\n                      <Trans>Approve</Trans>\n                    )}\n                  </ButtonConfirmed>\n                  <ButtonError\n                    onClick={() => {\n                      setShowConfirm(true)\n                    }}\n                    disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                    error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                  >\n                    <Text fontSize={16} fontWeight={535}>\n                      {error || <Trans>Remove</Trans>}\n                    </Text>\n                  </ButtonError>\n                </RowBetween>\n              )}\n            </div>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n\n      {pair ? (\n        <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </>\n  )\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nconst ONE = new Fraction(1, 1)\n\nexport function calculateSlippageAmount(value: CurrencyAmount<Currency>, slippage: Percent): [JSBI, JSBI] {\n  if (slippage.lessThan(0) || slippage.greaterThan(ONE)) throw new Error('Unexpected slippage')\n  return [value.multiply(ONE.subtract(slippage)).quotient, value.multiply(ONE.add(slippage)).quotient]\n}\n"],"names":["StyledRangeInput","styled","input","size","theme","accent1","surface1","surface4","surface2","Slider","value","onChange","min","step","max","rest","changeCallback","useCallback","e","parseInt","target","type","style","padding","aria-labelledby","useDebouncedChangeHandler","debouncedMs","inner","setInner","useState","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout","undefined","useEffect","useIsArgentWallet","account","useWeb3React","argentWalletDetector","useArgentWalletDetectorContract","inputs","useMemo","call","useSingleCallResult","NEVER_RELOAD","Boolean","result","PermitType","AMOUNT","ALLOWED","PERMIT_VALIDITY_BUFFER","PERMITTABLE_TOKENS","ChainId","MAINNET","USDC_MAINNET","address","name","version","DAI","UNI","GOERLI","SEPOLIA","UseERC20PermitState","NOT_APPLICABLE","LOADING","NOT_SIGNED","SIGNED","EIP712_DOMAIN_TYPE","EIP712_DOMAIN_TYPE_NO_VERSION","EIP2612_TYPE","PERMIT_ALLOWED_TYPE","REMOVE_V2_LIQUIDITY_PERMIT_INFO","useV2LiquidityTokenPermit","liquidityAmount","spender","currencyAmount","transactionDeadline","overridePermitInfo","chainId","provider","tokenAddress","currency","isToken","eip2612Contract","useEIP2612Contract","isArgentWallet","nonceInputs","tokenNonceState","permitInfo","signatureData","setSignatureData","valid","state","gatherPermitSignature","nonceNumber","toNumber","loading","isSignatureDataValid","owner","deadline","nonce","JSBI","amount","quotient","async","allowed","signatureDeadline","toString","message","holder","expiry","domain","verifyingContract","data","JSON","stringify","types","EIP712Domain","Permit","primaryType","send","then","splitSignature","signature","v","r","s","permitType","useERC20Permit","useTransactionDeadline","useBurnState","useAppSelector","burn","DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE","Percent","RemoveLiquidityWrapper","currencyIdA","currencyIdB","useParams","currencyA","currencyB","useCurrency","isSupportedChain","RemoveLiquidity","PositionPageUnsupportedContent","navigate","useNavigate","tokenA","tokenB","wrapped","useTheme","toggleWalletDrawer","useToggleAccountDrawer","independentField","typedValue","pair","parsedAmounts","error","useV2Pair","relevantTokenBalances","useTokenBalances","liquidityToken","userLiquidity","tokens","Field","CURRENCY_A","CURRENCY_B","LIQUIDITY","totalSupply","useTotalSupply","liquidityValueA","CurrencyAmount","fromRawAmount","getLiquidityValue","liquidityValueB","liquidityValues","percentToRemove","LIQUIDITY_PERCENT","independentAmount","tryParseCurrencyAmount","greaterThan","liquidityValue","multiply","useDerivedBurnInfo","onUserInput","_onUserInput","dispatch","useAppDispatch","field","typeInput","useBurnActionHandlers","isValid","showConfirm","setShowConfirm","showDetailed","setShowDetailed","attemptingTxn","setAttemptingTxn","txHash","setTxHash","allowedSlippage","useUserSlippageToleranceWithDefault","formattedAmounts","equalTo","lessThan","toFixed","toSignificant","atMaxAmount","pairContract","usePairContract","router","useV2RouterContract","approval","approveCallback","useApproveCallback","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","addTransaction","useTransactionAdder","networkSupportsV2","useNetworkSupportsV2","onRemove","Error","currencyAmountA","currencyAmountB","amountsMin","calculateSlippageAmount","currencyBIsETH","isNative","oneCurrencyIsETH","methodNames","args","ApprovalState","APPROVED","toHexString","safeGasEstimates","Promise","all","map","methodName","estimateGas","calculateGasMargin","catch","console","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","BigNumber","isBigNumber","gasLimit","response","TransactionType","REMOVE_LIQUIDITY_V3","baseCurrencyId","currencyId","quoteCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","hash","modalHeader","AutoColumn","gap","marginTop","RowBetween","align","Text","fontSize","fontWeight","RowFixed","CurrencyLogo","marginLeft","symbol","Plus","color","neutral2","ThemedText","DeprecatedItalic","textAlign","modalBottom","DoubleCurrencyLogo","currency0","currency1","margin","neutral1","priceOf","div","ButtonPrimary","disabled","onClick","pendingText","liquidityPercentChangeCallback","oneCurrencyIsWETH","WRAPPED_NATIVE_CURRENCY","equals","handleSelectCurrencyA","handleSelectCurrencyB","handleDismissConfirmation","innerLiquidityPercentage","setInnerLiquidityPercentage","Number","AppBody","AddRemoveTabs","creating","adding","autoSlippage","Wrapper","TransactionConfirmationModal","isOpen","onDismiss","reviewContent","ConfirmationModalContent","title","topContent","bottomContent","BlueCard","DeprecatedLink","b","LightCard","ClickableText","Row","alignItems","MaxButton","width","ColumnCenter","ArrowDown","marginRight","id","justifyContent","StyledInternalLink","to","CurrencyInputPanel","onMax","showMaxButton","hideBalance","label","onCurrencySelect","position","ButtonConfirmed","code","confirmed","NOT_APPROVED","mr","PENDING","Dots","ButtonError","ButtonLight","minWidth","maxWidth","MinimalPositionCard","showUnwrapped","V2Unsupported","ONE","Fraction","slippage","subtract","add"],"sourceRoot":""}
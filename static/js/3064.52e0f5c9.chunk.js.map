{"version":3,"file":"static/js/3064.52e0f5c9.chunk.js","mappings":"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","sources":["components/FormattedCurrencyAmount/index.tsx","components/Toggle/MultiToggle.tsx","components/RateToggle/index.tsx","components/V2Unsupported/index.tsx","lib/hooks/useApproval.ts","hooks/useApproveCallback.ts","hooks/useNetworkSupportsV2.ts","hooks/usePools.ts","hooks/useTotalSupply.ts","hooks/useERC20Permit.ts","hooks/useV2LiquidityTokenPermit.ts","pages/AppBody.tsx","pages/MigrateV2/MigrateV2Pair.tsx","lib/utils/formatLocaleNumber.ts","utils/formatCurrencyAmount.ts","utils/unwrappedToken.ts","../node_modules/react-feather/dist/icons/plus.js"],"sourcesContent":["import { Currency, CurrencyAmount, Fraction } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nconst CURRENCY_AMOUNT_MIN = new Fraction(JSBI.BigInt(1), JSBI.BigInt(1000000))\n\nexport default function FormattedCurrencyAmount({\n  currencyAmount,\n  significantDigits = 4,\n}: {\n  currencyAmount: CurrencyAmount<Currency>\n  significantDigits?: number\n}) {\n  return (\n    <>\n      {currencyAmount.equalTo(JSBI.BigInt(0))\n        ? '0'\n        : currencyAmount.greaterThan(CURRENCY_AMOUNT_MIN)\n        ? currencyAmount.toSignificant(significantDigits)\n        : `<${CURRENCY_AMOUNT_MIN.toSignificant(1)}`}\n    </>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ToggleWrapper = styled.button<{ width?: string }>`\n  display: flex;\n  align-items: center;\n  width: ${({ width }) => width ?? '100%'};\n  padding: 1px;\n  background: ${({ theme }) => theme.surface2};\n  border-radius: 8px;\n  border: ${({ theme }) => '1px solid ' + theme.surface3};\n  cursor: pointer;\n  outline: none;\n`\n\nexport const ToggleElement = styled.span<{ isActive?: boolean; fontSize?: string }>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 4px 0.5rem;\n  border-radius: 6px;\n  justify-content: center;\n  height: 100%;\n  background: ${({ theme, isActive }) => (isActive ? theme.surface1 : 'none')};\n  color: ${({ theme, isActive }) => (isActive ? theme.neutral1 : theme.neutral3)};\n  font-size: ${({ fontSize }) => fontSize ?? '1rem'};\n  font-weight: 535;\n  white-space: nowrap;\n  :hover {\n    user-select: initial;\n    color: ${({ theme, isActive }) => (isActive ? theme.neutral2 : theme.neutral3)};\n  }\n`\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { ToggleElement, ToggleWrapper } from 'components/Toggle/MultiToggle'\n\n// the order of displayed base currencies from left to right is always in sort order\n// currencyA is treated as the preferred base currency\nexport default function RateToggle({\n  currencyA,\n  currencyB,\n  handleRateToggle,\n}: {\n  currencyA: Currency\n  currencyB: Currency\n  handleRateToggle: () => void\n}) {\n  const tokenA = currencyA?.wrapped\n  const tokenB = currencyB?.wrapped\n\n  const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB)\n\n  return tokenA && tokenB ? (\n    <div style={{ width: 'fit-content', display: 'flex', alignItems: 'center' }} onClick={handleRateToggle}>\n      <ToggleWrapper width=\"fit-content\">\n        <ToggleElement isActive={isSorted} fontSize=\"12px\">\n          <Trans>{isSorted ? currencyA.symbol : currencyB.symbol}</Trans>\n        </ToggleElement>\n        <ToggleElement isActive={!isSorted} fontSize=\"12px\">\n          <Trans>{isSorted ? currencyB.symbol : currencyA.symbol}</Trans>\n        </ToggleElement>\n      </ToggleWrapper>\n    </div>\n  ) : null\n}\n","import { Trans } from '@lingui/macro'\nimport { AutoColumn } from 'components/Column'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst TextWrapper = styled.div`\n  border: 1px solid ${({ theme }) => theme.neutral3};\n  padding: 16px 12px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport function V2Unsupported() {\n  return (\n    <AutoColumn gap=\"lg\" justify=\"center\">\n      <AutoColumn gap=\"md\" style={{ width: '100%' }}>\n        <TextWrapper>\n          <ThemedText.BodySecondary color=\"neutral2\" textAlign=\"center\">\n            <Trans>Uniswap V2 is not available on this network.</Trans>\n          </ThemedText.BodySecondary>\n        </TextWrapper>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import { MaxUint256 } from '@ethersproject/constants'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTokenContract } from 'hooks/useContract'\nimport { useTokenAllowance } from 'hooks/useTokenAllowance'\nimport { useCallback, useMemo } from 'react'\nimport { calculateGasMargin } from 'utils/calculateGasMargin'\n\nexport enum ApprovalState {\n  UNKNOWN = 'UNKNOWN',\n  NOT_APPROVED = 'NOT_APPROVED',\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n}\n\nfunction useApprovalStateForSpender(\n  amountToApprove: CurrencyAmount<Currency> | undefined,\n  spender: string | undefined,\n  useIsPendingApproval: (token?: Token, spender?: string) => boolean\n): ApprovalState {\n  const { account } = useWeb3React()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n\n  const { tokenAllowance } = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useIsPendingApproval(token, spender)\n\n  return useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency.isNative) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!tokenAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if tokenAllowance is\n    return tokenAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, pendingApproval, spender, tokenAllowance])\n}\n\nexport function useApproval(\n  amountToApprove: CurrencyAmount<Currency> | undefined,\n  spender: string | undefined,\n  useIsPendingApproval: (token?: Token, spender?: string) => boolean\n): [\n  ApprovalState,\n  () => Promise<\n    | { response: TransactionResponse; tokenAddress: string; spenderAddress: string; amount: CurrencyAmount<Currency> }\n    | undefined\n  >\n] {\n  const { chainId } = useWeb3React()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n\n  // check the current approval status\n  const approvalState = useApprovalStateForSpender(amountToApprove, spender, useIsPendingApproval)\n\n  const tokenContract = useTokenContract(token?.address)\n\n  const approve = useCallback(async () => {\n    function logFailure(error: Error | string): undefined {\n      console.warn(`${token?.symbol || 'Token'} approval failed:`, error)\n      return\n    }\n\n    // Bail early if there is an issue.\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      return logFailure('approve was called unnecessarily')\n    } else if (!chainId) {\n      return logFailure('no chainId')\n    } else if (!token) {\n      return logFailure('no token')\n    } else if (!tokenContract) {\n      return logFailure('tokenContract is null')\n    } else if (!amountToApprove) {\n      return logFailure('missing amount to approve')\n    } else if (!spender) {\n      return logFailure('no spender')\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens which restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.quotient.toString())\n    })\n\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.quotient.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response) => {\n        return {\n          response,\n          tokenAddress: token.address,\n          spenderAddress: spender,\n          amount: amountToApprove,\n        }\n      })\n      .catch((error: Error) => {\n        logFailure(error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, chainId])\n\n  return [approvalState, approve]\n}\n","import { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { ApprovalState, useApproval } from 'lib/hooks/useApproval'\nimport { useCallback } from 'react'\n\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks'\nimport { TransactionType } from '../state/transactions/types'\nexport { ApprovalState } from 'lib/hooks/useApproval'\n\nfunction useGetAndTrackApproval(getApproval: ReturnType<typeof useApproval>[1]) {\n  const addTransaction = useTransactionAdder()\n  return useCallback(() => {\n    return getApproval().then((pending) => {\n      if (pending) {\n        const { response, tokenAddress, spenderAddress: spender, amount } = pending\n        addTransaction(response, {\n          type: TransactionType.APPROVAL,\n          tokenAddress,\n          spender,\n          amount: amount.quotient.toString(),\n        })\n      }\n    })\n  }, [addTransaction, getApproval])\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount<Currency>,\n  spender?: string\n): [ApprovalState, () => Promise<void>] {\n  const [approval, getApproval] = useApproval(amountToApprove, spender, useHasPendingApproval)\n  return [approval, useGetAndTrackApproval(getApproval)]\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { SUPPORTED_V2POOL_CHAIN_IDS } from 'constants/chains'\n\nexport function useNetworkSupportsV2() {\n  const { chainId } = useWeb3React()\n  return chainId && SUPPORTED_V2POOL_CHAIN_IDS.includes(chainId)\n}\n","import { Interface } from '@ethersproject/abi'\nimport { BigintIsh, Currency, Token, V3_CORE_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport IUniswapV3PoolStateJSON from '@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json'\nimport { computePoolAddress } from '@uniswap/v3-sdk'\nimport { FeeAmount, Pool } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { IUniswapV3PoolStateInterface } from '../types/v3/IUniswapV3PoolState'\n\nconst POOL_STATE_INTERFACE = new Interface(IUniswapV3PoolStateJSON.abi) as IUniswapV3PoolStateInterface\n\n// Classes are expensive to instantiate, so this caches the recently instantiated pools.\n// This avoids re-instantiating pools as the other pools in the same request are loaded.\nclass PoolCache {\n  // Evict after 128 entries. Empirically, a swap uses 64 entries.\n  private static MAX_ENTRIES = 128\n\n  // These are FIFOs, using unshift/pop. This makes recent entries faster to find.\n  private static pools: Pool[] = []\n  private static addresses: { key: string; address: string }[] = []\n\n  static getPoolAddress(factoryAddress: string, tokenA: Token, tokenB: Token, fee: FeeAmount): string {\n    if (this.addresses.length > this.MAX_ENTRIES) {\n      this.addresses = this.addresses.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const { address: addressA } = tokenA\n    const { address: addressB } = tokenB\n    const key = `${factoryAddress}:${addressA}:${addressB}:${fee.toString()}`\n    const found = this.addresses.find((address) => address.key === key)\n    if (found) return found.address\n\n    const address = {\n      key,\n      address: computePoolAddress({\n        factoryAddress,\n        tokenA,\n        tokenB,\n        fee,\n      }),\n    }\n    this.addresses.unshift(address)\n    return address.address\n  }\n\n  static getPool(\n    tokenA: Token,\n    tokenB: Token,\n    fee: FeeAmount,\n    sqrtPriceX96: BigintIsh,\n    liquidity: BigintIsh,\n    tick: number\n  ): Pool {\n    if (this.pools.length > this.MAX_ENTRIES) {\n      this.pools = this.pools.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const found = this.pools.find(\n      (pool) =>\n        pool.token0 === tokenA &&\n        pool.token1 === tokenB &&\n        pool.fee === fee &&\n        JSBI.EQ(pool.sqrtRatioX96, sqrtPriceX96) &&\n        JSBI.EQ(pool.liquidity, liquidity) &&\n        pool.tickCurrent === tick\n    )\n    if (found) return found\n\n    const pool = new Pool(tokenA, tokenB, fee, sqrtPriceX96, liquidity, tick)\n    this.pools.unshift(pool)\n    return pool\n  }\n}\n\nexport enum PoolState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nfunction usePools(\n  poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][]\n): [PoolState, Pool | null][] {\n  const { chainId } = useWeb3React()\n\n  const poolTokens: ([Token, Token, FeeAmount] | undefined)[] = useMemo(() => {\n    if (!chainId) return new Array(poolKeys.length)\n\n    return poolKeys.map(([currencyA, currencyB, feeAmount]) => {\n      if (currencyA && currencyB && feeAmount) {\n        const tokenA = currencyA.wrapped\n        const tokenB = currencyB.wrapped\n        if (tokenA.equals(tokenB)) return undefined\n\n        return tokenA.sortsBefore(tokenB) ? [tokenA, tokenB, feeAmount] : [tokenB, tokenA, feeAmount]\n      }\n      return undefined\n    })\n  }, [chainId, poolKeys])\n\n  const poolAddresses: (string | undefined)[] = useMemo(() => {\n    // const v3CoreFactoryAddress = chainId && V3_CORE_FACTORY_ADDRESSES[chainId]\n    // TODO: refactor this\n    const v3CoreFactoryAddress = chainId && \"0x137bcB1e99681cF823D2fDE9B90cf97C3b18fA3C\"\n    if (!v3CoreFactoryAddress) return new Array(poolTokens.length)\n\n    return poolTokens.map((value) => value && PoolCache.getPoolAddress(v3CoreFactoryAddress, ...value))\n  }, [chainId, poolTokens])\n\n  const slot0s = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'slot0')\n  const liquidities = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'liquidity')\n\n  return useMemo(() => {\n    return poolKeys.map((_key, index) => {\n      const tokens = poolTokens[index]\n      if (!tokens) return [PoolState.INVALID, null]\n      const [token0, token1, fee] = tokens\n\n      if (!slot0s[index]) return [PoolState.INVALID, null]\n      const { result: slot0, loading: slot0Loading, valid: slot0Valid } = slot0s[index]\n\n      if (!liquidities[index]) return [PoolState.INVALID, null]\n      const { result: liquidity, loading: liquidityLoading, valid: liquidityValid } = liquidities[index]\n\n      if (!tokens || !slot0Valid || !liquidityValid) return [PoolState.INVALID, null]\n      if (slot0Loading || liquidityLoading) return [PoolState.LOADING, null]\n      if (!slot0 || !liquidity) return [PoolState.NOT_EXISTS, null]\n      if (!slot0.sqrtPriceX96 || slot0.sqrtPriceX96.eq(0)) return [PoolState.NOT_EXISTS, null]\n\n      try {\n        const pool = PoolCache.getPool(token0, token1, fee, slot0.sqrtPriceX96, liquidity[0], slot0.tick)\n        return [PoolState.EXISTS, pool]\n      } catch (error) {\n        console.error('Error when constructing the pool', error)\n        return [PoolState.NOT_EXISTS, null]\n      }\n    })\n  }, [liquidities, poolKeys, slot0s, poolTokens])\n}\n\nexport function usePool(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined\n): [PoolState, Pool | null] {\n  const poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][] = useMemo(\n    () => [[currencyA, currencyB, feeAmount]],\n    [currencyA, currencyB, feeAmount]\n  )\n\n  return usePools(poolKeys)[0]\n}\n","import { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Currency): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.isToken ? token.address : undefined, false)\n\n  const totalSupplyStr: string | undefined = useSingleCallResult(contract, 'totalSupply')?.result?.[0]?.toString()\n\n  return useMemo(\n    () => (token?.isToken && totalSupplyStr ? CurrencyAmount.fromRawAmount(token, totalSupplyStr) : undefined),\n    [token, totalSupplyStr]\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { splitSignature } from '@ethersproject/bytes'\nimport { ChainId, Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo, useState } from 'react'\n\nimport { DAI, UNI, USDC_MAINNET } from '../constants/tokens'\nimport { useEIP2612Contract } from './useContract'\nimport useIsArgentWallet from './useIsArgentWallet'\n\nexport enum PermitType {\n  AMOUNT = 1,\n  ALLOWED = 2,\n}\n\n// 20 minutes to submit after signing\nconst PERMIT_VALIDITY_BUFFER = 20 * 60\n\nexport interface PermitInfo {\n  type: PermitType\n  name: string\n  // version is optional, and if omitted, will not be included in the domain\n  version?: string\n}\n\n// todo: read this information from extensions on token lists or elsewhere (permit registry?)\nconst PERMITTABLE_TOKENS: {\n  [chainId: number]: {\n    [checksummedTokenAddress: string]: PermitInfo\n  }\n} = {\n  [ChainId.MAINNET]: {\n    [USDC_MAINNET.address]: { type: PermitType.AMOUNT, name: 'USD Coin', version: '2' },\n    [DAI.address]: { type: PermitType.ALLOWED, name: 'Dai Stablecoin', version: '1' },\n    [UNI[ChainId.MAINNET].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n  [ChainId.GOERLI]: {\n    [UNI[ChainId.GOERLI].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n  [ChainId.SEPOLIA]: {\n    [UNI[ChainId.SEPOLIA].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n}\n\nenum UseERC20PermitState {\n  // returned for any reason, e.g. it is an argent wallet, or the currency does not support it\n  NOT_APPLICABLE,\n  LOADING,\n  NOT_SIGNED,\n  SIGNED,\n}\n\ntype StandardSignatureData = {\n  v: number\n  r: string\n  s: string\n  deadline: number\n  nonce: number\n  owner: string\n  spender: string\n  chainId: number\n  tokenAddress: string\n  permitType: PermitType\n  amount: string\n}\n\ntype AllowedSignatureData = {\n  v: number\n  r: string\n  s: string\n  deadline: number\n  nonce: number\n  owner: string\n  spender: string\n  chainId: number\n  tokenAddress: string\n  permitType: PermitType\n  allowed: true\n}\n\ntype SignatureData = StandardSignatureData | AllowedSignatureData\n\nconst EIP712_DOMAIN_TYPE = [\n  { name: 'name', type: 'string' },\n  { name: 'version', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n]\n\nconst EIP712_DOMAIN_TYPE_NO_VERSION = [\n  { name: 'name', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n]\n\nconst EIP2612_TYPE = [\n  { name: 'owner', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'value', type: 'uint256' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'deadline', type: 'uint256' },\n]\n\nconst PERMIT_ALLOWED_TYPE = [\n  { name: 'holder', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'expiry', type: 'uint256' },\n  { name: 'allowed', type: 'bool' },\n]\n\nexport function useERC20Permit(\n  currencyAmount: CurrencyAmount<Currency> | null | undefined,\n  spender: string | null | undefined,\n  transactionDeadline: BigNumber | undefined,\n  overridePermitInfo: PermitInfo | undefined | null\n): {\n  signatureData: SignatureData | null\n  state: UseERC20PermitState\n  gatherPermitSignature: null | (() => Promise<void>)\n} {\n  const { account, chainId, provider } = useWeb3React()\n  const tokenAddress = currencyAmount?.currency?.isToken ? currencyAmount.currency.address : undefined\n  const eip2612Contract = useEIP2612Contract(tokenAddress)\n  const isArgentWallet = useIsArgentWallet()\n  const nonceInputs = useMemo(() => [account ?? undefined], [account])\n  const tokenNonceState = useSingleCallResult(eip2612Contract, 'nonces', nonceInputs)\n  const permitInfo =\n    overridePermitInfo ?? (chainId && tokenAddress ? PERMITTABLE_TOKENS[chainId]?.[tokenAddress] : undefined)\n\n  const [signatureData, setSignatureData] = useState<SignatureData | null>(null)\n\n  return useMemo(() => {\n    if (\n      isArgentWallet ||\n      !currencyAmount ||\n      !eip2612Contract ||\n      !account ||\n      !chainId ||\n      !transactionDeadline ||\n      !provider ||\n      !tokenNonceState.valid ||\n      !tokenAddress ||\n      !spender ||\n      !permitInfo\n    ) {\n      return {\n        state: UseERC20PermitState.NOT_APPLICABLE,\n        signatureData: null,\n        gatherPermitSignature: null,\n      }\n    }\n\n    const nonceNumber = tokenNonceState.result?.[0]?.toNumber()\n    if (tokenNonceState.loading || typeof nonceNumber !== 'number') {\n      return {\n        state: UseERC20PermitState.LOADING,\n        signatureData: null,\n        gatherPermitSignature: null,\n      }\n    }\n\n    const isSignatureDataValid =\n      signatureData &&\n      signatureData.owner === account &&\n      signatureData.deadline >= transactionDeadline.toNumber() &&\n      signatureData.tokenAddress === tokenAddress &&\n      signatureData.nonce === nonceNumber &&\n      signatureData.spender === spender &&\n      ('allowed' in signatureData ||\n        JSBI.greaterThanOrEqual(JSBI.BigInt(signatureData.amount), currencyAmount.quotient))\n\n    return {\n      state: isSignatureDataValid ? UseERC20PermitState.SIGNED : UseERC20PermitState.NOT_SIGNED,\n      signatureData: isSignatureDataValid ? signatureData : null,\n      gatherPermitSignature: async function gatherPermitSignature() {\n        const allowed = permitInfo.type === PermitType.ALLOWED\n        const signatureDeadline = transactionDeadline.toNumber() + PERMIT_VALIDITY_BUFFER\n        const value = currencyAmount.quotient.toString()\n\n        const message = allowed\n          ? {\n              holder: account,\n              spender,\n              allowed,\n              nonce: nonceNumber,\n              expiry: signatureDeadline,\n            }\n          : {\n              owner: account,\n              spender,\n              value,\n              nonce: nonceNumber,\n              deadline: signatureDeadline,\n            }\n        const domain = permitInfo.version\n          ? {\n              name: permitInfo.name,\n              version: permitInfo.version,\n              verifyingContract: tokenAddress,\n              chainId,\n            }\n          : {\n              name: permitInfo.name,\n              verifyingContract: tokenAddress,\n              chainId,\n            }\n        const data = JSON.stringify({\n          types: {\n            EIP712Domain: permitInfo.version ? EIP712_DOMAIN_TYPE : EIP712_DOMAIN_TYPE_NO_VERSION,\n            Permit: allowed ? PERMIT_ALLOWED_TYPE : EIP2612_TYPE,\n          },\n          domain,\n          primaryType: 'Permit',\n          message,\n        })\n\n        return provider\n          .send('eth_signTypedData_v4', [account, data])\n          .then(splitSignature)\n          .then((signature) => {\n            setSignatureData({\n              v: signature.v,\n              r: signature.r,\n              s: signature.s,\n              deadline: signatureDeadline,\n              ...(allowed ? { allowed } : { amount: value }),\n              nonce: nonceNumber,\n              chainId,\n              owner: account,\n              spender,\n              tokenAddress,\n              permitType: permitInfo.type,\n            })\n          })\n      },\n    }\n  }, [\n    currencyAmount,\n    eip2612Contract,\n    account,\n    chainId,\n    isArgentWallet,\n    transactionDeadline,\n    provider,\n    tokenNonceState.loading,\n    tokenNonceState.valid,\n    tokenNonceState.result,\n    tokenAddress,\n    spender,\n    permitInfo,\n    signatureData,\n  ])\n}\n","import { CurrencyAmount, Token } from '@uniswap/sdk-core'\n\nimport { PermitInfo, PermitType, useERC20Permit } from './useERC20Permit'\nimport useTransactionDeadline from './useTransactionDeadline'\n\nconst REMOVE_V2_LIQUIDITY_PERMIT_INFO: PermitInfo = {\n  version: '1',\n  name: 'Uniswap V2',\n  type: PermitType.AMOUNT,\n}\n\nexport function useV2LiquidityTokenPermit(\n  liquidityAmount: CurrencyAmount<Token> | null | undefined,\n  spender: string | null | undefined\n) {\n  const transactionDeadline = useTransactionDeadline()\n  return useERC20Permit(liquidityAmount, spender, transactionDeadline, REMOVE_V2_LIQUIDITY_PERMIT_INFO)\n}\n","import { PropsWithChildren } from 'react'\nimport styled from 'styled-components'\nimport { Z_INDEX } from 'theme/zIndex'\n\ninterface BodyWrapperProps {\n  $margin?: string\n  $maxWidth?: string\n}\n\nexport const BodyWrapper = styled.main<BodyWrapperProps>`\n  position: relative;\n  margin-top: ${({ $margin }) => $margin ?? '0px'};\n  max-width: ${({ $maxWidth }) => $maxWidth ?? '420px'};\n  width: 100%;\n  background: ${({ theme }) => theme.surface1};\n  border-radius: 16px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  margin-top: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: ${Z_INDEX.default};\n  font-feature-settings: 'ss01' on, 'ss02' on, 'cv01' on, 'cv03' on;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody(props: PropsWithChildren<BodyWrapperProps>) {\n  return <BodyWrapper {...props} />\n}\n","import { Contract } from '@ethersproject/contracts'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { CurrencyAmount, Fraction, Percent, Price, Token, V2_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport { FeeAmount, Pool, Position, priceToClosestTick, TickMath } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport Badge, { BadgeVariant } from 'components/Badge'\nimport { ButtonConfirmed } from 'components/Button'\nimport { BlueCard, DarkGrayCard, LightCard, YellowCard } from 'components/Card'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport FeeSelector from 'components/FeeSelector'\nimport RangeSelector from 'components/RangeSelector'\nimport RateToggle from 'components/RateToggle'\nimport SettingsTab from 'components/Settings'\nimport { Dots } from 'components/swap/styled'\nimport { V2Unsupported } from 'components/V2Unsupported'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport useCurrentBlockTimestamp from 'hooks/useCurrentBlockTimestamp'\nimport { useNetworkSupportsV2 } from 'hooks/useNetworkSupportsV2'\nimport { PoolState, usePool } from 'hooks/usePools'\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\nimport { useV2LiquidityTokenPermit } from 'hooks/useV2LiquidityTokenPermit'\nimport JSBI from 'jsbi'\nimport { NEVER_RELOAD, useSingleCallResult } from 'lib/hooks/multicall'\nimport { ReactNode, useCallback, useEffect, useMemo, useState } from 'react'\nimport { AlertCircle, AlertTriangle, ArrowDown } from 'react-feather'\nimport { Navigate, useParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport { useAppDispatch } from 'state/hooks'\nimport { Bound, resetMintState } from 'state/mint/v3/actions'\nimport { useRangeHopCallbacks, useV3DerivedMintInfo, useV3MintActionHandlers } from 'state/mint/v3/hooks'\nimport { useIsTransactionPending, useTransactionAdder } from 'state/transactions/hooks'\nimport { useUserSlippageToleranceWithDefault } from 'state/user/hooks'\nimport { useTheme } from 'styled-components'\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nimport { AutoColumn } from '../../components/Column'\nimport FormattedCurrencyAmount from '../../components/FormattedCurrencyAmount'\nimport CurrencyLogo from '../../components/Logo/CurrencyLogo'\nimport { AutoRow, RowBetween, RowFixed } from '../../components/Row'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useToken } from '../../hooks/Tokens'\nimport { usePairContract, useV2MigratorContract } from '../../hooks/useContract'\nimport useIsArgentWallet from '../../hooks/useIsArgentWallet'\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { useTokenBalance } from '../../state/connection/hooks'\nimport { TransactionType } from '../../state/transactions/types'\nimport { BackArrowLink, ExternalLink, ThemedText } from '../../theme/components'\nimport { isAddress } from '../../utils'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { currencyId } from '../../utils/currencyId'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { BodyWrapper } from '../AppBody'\n\nconst ZERO = JSBI.BigInt(0)\n\nconst DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE = new Percent(75, 10_000)\n\nfunction EmptyState({ message }: { message: ReactNode }) {\n  return (\n    <AutoColumn style={{ minHeight: 200, justifyContent: 'center', alignItems: 'center' }}>\n      <ThemedText.DeprecatedBody>{message}</ThemedText.DeprecatedBody>\n    </AutoColumn>\n  )\n}\n\nfunction LiquidityInfo({\n  token0Amount,\n  token1Amount,\n}: {\n  token0Amount: CurrencyAmount<Token>\n  token1Amount: CurrencyAmount<Token>\n}) {\n  const currency0 = unwrappedToken(token0Amount.currency)\n  const currency1 = unwrappedToken(token1Amount.currency)\n\n  return (\n    <AutoColumn gap=\"sm\">\n      <RowBetween>\n        <RowFixed>\n          <CurrencyLogo size=\"20px\" style={{ marginRight: '8px' }} currency={currency0} />\n          <Text fontSize={16} fontWeight={535}>\n            {currency0.symbol}\n          </Text>\n        </RowFixed>\n        <Text fontSize={16} fontWeight={535}>\n          <FormattedCurrencyAmount currencyAmount={token0Amount} />\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <CurrencyLogo size=\"20px\" style={{ marginRight: '8px' }} currency={currency1} />\n          <Text fontSize={16} fontWeight={535}>\n            {currency1.symbol}\n          </Text>\n        </RowFixed>\n\n        <Text fontSize={16} fontWeight={535}>\n          <FormattedCurrencyAmount currencyAmount={token1Amount} />\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\n// hard-code this for now\nconst percentageToMigrate = 100\n\nfunction V2PairMigration({\n  pair,\n  pairBalance,\n  totalSupply,\n  reserve0,\n  reserve1,\n  token0,\n  token1,\n}: {\n  pair: Contract\n  pairBalance: CurrencyAmount<Token>\n  totalSupply: CurrencyAmount<Token>\n  reserve0: CurrencyAmount<Token>\n  reserve1: CurrencyAmount<Token>\n  token0: Token\n  token1: Token\n}) {\n  const { chainId, account } = useWeb3React()\n  const theme = useTheme()\n  const v2FactoryAddress = chainId ? V2_FACTORY_ADDRESSES[chainId] : undefined\n\n  const pairFactory = useSingleCallResult(pair, 'factory')\n  const isNotUniswap = pairFactory.result?.[0] && pairFactory.result[0] !== v2FactoryAddress\n\n  const deadline = useTransactionDeadline() // custom from users settings\n  const blockTimestamp = useCurrentBlockTimestamp()\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE) // custom from users\n\n  const currency0 = unwrappedToken(token0)\n  const currency1 = unwrappedToken(token1)\n\n  // this is just getLiquidityValue with the fee off, but for the passed pair\n  const token0Value = useMemo(\n    () =>\n      CurrencyAmount.fromRawAmount(\n        token0,\n        JSBI.divide(JSBI.multiply(pairBalance.quotient, reserve0.quotient), totalSupply.quotient)\n      ),\n    [token0, pairBalance, reserve0, totalSupply]\n  )\n  const token1Value = useMemo(\n    () =>\n      CurrencyAmount.fromRawAmount(\n        token1,\n        JSBI.divide(JSBI.multiply(pairBalance.quotient, reserve1.quotient), totalSupply.quotient)\n      ),\n    [token1, pairBalance, reserve1, totalSupply]\n  )\n\n  // set up v3 pool\n  const [feeAmount, setFeeAmount] = useState(FeeAmount.MEDIUM)\n  const [poolState, pool] = usePool(token0, token1, feeAmount)\n  const noLiquidity = poolState === PoolState.NOT_EXISTS\n\n  // get spot prices + price difference\n  const v2SpotPrice = useMemo(\n    () => new Price(token0, token1, reserve0.quotient, reserve1.quotient),\n    [token0, token1, reserve0, reserve1]\n  )\n  const v3SpotPrice = poolState === PoolState.EXISTS ? pool?.token0Price : undefined\n\n  let priceDifferenceFraction: Fraction | undefined =\n    v2SpotPrice && v3SpotPrice ? v3SpotPrice.divide(v2SpotPrice).subtract(1).multiply(100) : undefined\n  if (priceDifferenceFraction?.lessThan(ZERO)) {\n    priceDifferenceFraction = priceDifferenceFraction.multiply(-1)\n  }\n\n  const largePriceDifference = priceDifferenceFraction && !priceDifferenceFraction?.lessThan(JSBI.BigInt(2))\n\n  // the following is a small hack to get access to price range data/input handlers\n  const [baseToken, setBaseToken] = useState(token0)\n  const { ticks, pricesAtTicks, invertPrice, invalidRange, outOfRange, ticksAtLimit } = useV3DerivedMintInfo(\n    token0,\n    token1,\n    feeAmount,\n    baseToken\n  )\n\n  // get value and prices at ticks\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks\n  const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks\n\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper } = useRangeHopCallbacks(\n    baseToken,\n    baseToken.equals(token0) ? token1 : token0,\n    feeAmount,\n    tickLower,\n    tickUpper\n  )\n\n  const { onLeftRangeInput, onRightRangeInput } = useV3MintActionHandlers(noLiquidity)\n\n  // the v3 tick is either the pool's tickCurrent, or the tick closest to the v2 spot price\n  const tick = pool?.tickCurrent ?? priceToClosestTick(v2SpotPrice)\n  // the price is either the current v3 price, or the price at the tick\n  const sqrtPrice = pool?.sqrtRatioX96 ?? TickMath.getSqrtRatioAtTick(tick)\n  const position =\n    typeof tickLower === 'number' && typeof tickUpper === 'number' && !invalidRange\n      ? Position.fromAmounts({\n          pool: pool ?? new Pool(token0, token1, feeAmount, sqrtPrice, 0, tick, []),\n          tickLower,\n          tickUpper,\n          amount0: token0Value.quotient,\n          amount1: token1Value.quotient,\n          useFullPrecision: true, // we want full precision for the theoretical position\n        })\n      : undefined\n\n  const { amount0: v3Amount0Min, amount1: v3Amount1Min } = useMemo(\n    () => (position ? position.mintAmountsWithSlippage(allowedSlippage) : { amount0: undefined, amount1: undefined }),\n    [position, allowedSlippage]\n  )\n\n  const refund0 = useMemo(\n    () =>\n      position && CurrencyAmount.fromRawAmount(token0, JSBI.subtract(token0Value.quotient, position.amount0.quotient)),\n    [token0Value, position, token0]\n  )\n  const refund1 = useMemo(\n    () =>\n      position && CurrencyAmount.fromRawAmount(token1, JSBI.subtract(token1Value.quotient, position.amount1.quotient)),\n    [token1Value, position, token1]\n  )\n\n  const [confirmingMigration, setConfirmingMigration] = useState<boolean>(false)\n  const [pendingMigrationHash, setPendingMigrationHash] = useState<string | null>(null)\n\n  const migrator = useV2MigratorContract()\n\n  // approvals\n  const [approval, approveManually] = useApproveCallback(pairBalance, migrator?.address)\n  const { signatureData, gatherPermitSignature } = useV2LiquidityTokenPermit(pairBalance, migrator?.address)\n\n  const isArgentWallet = useIsArgentWallet()\n\n  const approve = useCallback(async () => {\n    if (isNotUniswap || isArgentWallet) {\n      // sushi has to be manually approved\n      await approveManually()\n    } else if (gatherPermitSignature) {\n      try {\n        await gatherPermitSignature()\n      } catch (error) {\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n        if (error?.code !== 4001) {\n          await approveManually()\n        }\n      }\n    } else {\n      await approveManually()\n    }\n  }, [isNotUniswap, isArgentWallet, gatherPermitSignature, approveManually])\n\n  const addTransaction = useTransactionAdder()\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash ?? undefined)\n\n  const networkSupportsV2 = useNetworkSupportsV2()\n\n  const migrate = useCallback(() => {\n    if (\n      !migrator ||\n      !account ||\n      !deadline ||\n      !blockTimestamp ||\n      typeof tickLower !== 'number' ||\n      typeof tickUpper !== 'number' ||\n      !v3Amount0Min ||\n      !v3Amount1Min ||\n      !chainId ||\n      !networkSupportsV2\n    )\n      return\n\n    const deadlineToUse = signatureData?.deadline ?? deadline\n\n    const data: string[] = []\n\n    // permit if necessary\n    if (signatureData) {\n      data.push(\n        migrator.interface.encodeFunctionData('selfPermit', [\n          pair.address,\n          `0x${pairBalance.quotient.toString(16)}`,\n          deadlineToUse,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ])\n      )\n    }\n\n    // create/initialize pool if necessary\n    if (noLiquidity) {\n      data.push(\n        migrator.interface.encodeFunctionData('createAndInitializePoolIfNecessary', [\n          token0.address,\n          token1.address,\n          feeAmount,\n          `0x${sqrtPrice.toString(16)}`,\n        ])\n      )\n    }\n\n    // TODO could save gas by not doing this in multicall\n    data.push(\n      migrator.interface.encodeFunctionData('migrate', [\n        {\n          pair: pair.address,\n          liquidityToMigrate: `0x${pairBalance.quotient.toString(16)}`,\n          percentageToMigrate,\n          token0: token0.address,\n          token1: token1.address,\n          fee: feeAmount,\n          tickLower,\n          tickUpper,\n          amount0Min: `0x${v3Amount0Min.toString(16)}`,\n          amount1Min: `0x${v3Amount1Min.toString(16)}`,\n          recipient: account,\n          deadline: deadlineToUse,\n          refundAsETH: true, // hard-code this for now\n        },\n      ])\n    )\n\n    setConfirmingMigration(true)\n\n    migrator.estimateGas\n      .multicall(data)\n      .then((gasEstimate) => {\n        return migrator\n          .multicall(data, { gasLimit: calculateGasMargin(gasEstimate) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              type: TransactionType.MIGRATE_LIQUIDITY_V3,\n              baseCurrencyId: currencyId(currency0),\n              quoteCurrencyId: currencyId(currency1),\n              isFork: isNotUniswap,\n            })\n            setPendingMigrationHash(response.hash)\n          })\n      })\n      .catch(() => {\n        setConfirmingMigration(false)\n      })\n  }, [\n    migrator,\n    account,\n    deadline,\n    blockTimestamp,\n    tickLower,\n    tickUpper,\n    v3Amount0Min,\n    v3Amount1Min,\n    chainId,\n    networkSupportsV2,\n    signatureData,\n    noLiquidity,\n    pair.address,\n    pairBalance.quotient,\n    token0.address,\n    token1.address,\n    feeAmount,\n    sqrtPrice,\n    isNotUniswap,\n    currency0,\n    currency1,\n    addTransaction,\n  ])\n\n  const isSuccessfullyMigrated = !!pendingMigrationHash && JSBI.equal(pairBalance.quotient, ZERO)\n\n  if (!networkSupportsV2) return <V2Unsupported />\n\n  return (\n    <AutoColumn gap=\"20px\">\n      <ThemedText.DeprecatedBody my={9} style={{ fontWeight: 485 }}>\n        <Trans>\n          This tool will safely migrate your {isNotUniswap ? 'SushiSwap' : 'V2'} liquidity to V3. The process is\n          completely trustless thanks to the{' '}\n        </Trans>\n        {chainId && migrator && (\n          <ExternalLink href={getExplorerLink(chainId, migrator.address, ExplorerDataType.ADDRESS)}>\n            <ThemedText.DeprecatedBlue display=\"inline\">\n              <Trans>Uniswap migration contract↗</Trans>\n            </ThemedText.DeprecatedBlue>\n          </ExternalLink>\n        )}\n        .\n      </ThemedText.DeprecatedBody>\n\n      <LightCard>\n        <AutoColumn gap=\"lg\">\n          <RowBetween>\n            <RowFixed style={{ marginLeft: '8px' }}>\n              <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin={false} size={20} />\n              <ThemedText.DeprecatedMediumHeader style={{ marginLeft: '8px' }}>\n                <Trans>\n                  {currency0.symbol}/{currency1.symbol} LP Tokens\n                </Trans>\n              </ThemedText.DeprecatedMediumHeader>\n            </RowFixed>\n            <Badge variant={BadgeVariant.WARNING}>{isNotUniswap ? 'Sushi' : 'V2'}</Badge>\n          </RowBetween>\n          <LiquidityInfo token0Amount={token0Value} token1Amount={token1Value} />\n        </AutoColumn>\n      </LightCard>\n\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <ArrowDown size={24} />\n      </div>\n\n      <LightCard>\n        <AutoColumn gap=\"lg\">\n          <RowBetween>\n            <RowFixed style={{ marginLeft: '8px' }}>\n              <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin={false} size={20} />\n              <ThemedText.DeprecatedMediumHeader style={{ marginLeft: '8px' }}>\n                <Trans>\n                  {currency0.symbol}/{currency1.symbol} LP NFT\n                </Trans>\n              </ThemedText.DeprecatedMediumHeader>\n            </RowFixed>\n            <Badge variant={BadgeVariant.PRIMARY}>V3</Badge>\n          </RowBetween>\n\n          <FeeSelector feeAmount={feeAmount} handleFeePoolSelect={setFeeAmount} />\n          {noLiquidity && (\n            <BlueCard style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <AlertCircle color={theme.neutral1} style={{ marginBottom: '12px', opacity: 0.8 }} />\n              <ThemedText.DeprecatedBody\n                fontSize={14}\n                style={{ marginBottom: 8, fontWeight: 535, opacity: 0.8 }}\n                textAlign=\"center\"\n              >\n                <Trans>\n                  You are the first liquidity provider for this Uniswap V3 pool. Your liquidity will migrate at the\n                  current {isNotUniswap ? 'SushiSwap' : 'V2'} price.\n                </Trans>\n              </ThemedText.DeprecatedBody>\n\n              <ThemedText.DeprecatedBody\n                fontWeight={535}\n                textAlign=\"center\"\n                fontSize={14}\n                style={{ marginTop: '8px', opacity: 0.8 }}\n              >\n                <Trans>Your transaction cost will be much higher as it includes the gas to create the pool.</Trans>\n              </ThemedText.DeprecatedBody>\n\n              {v2SpotPrice && (\n                <AutoColumn gap=\"sm\" style={{ marginTop: '12px' }}>\n                  <RowBetween>\n                    <ThemedText.DeprecatedBody fontWeight={535} fontSize={14}>\n                      <Trans>\n                        {isNotUniswap ? 'SushiSwap' : 'V2'} {invertPrice ? currency1.symbol : currency0.symbol} Price:\n                      </Trans>{' '}\n                      {invertPrice\n                        ? `${v2SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                        : `${v2SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n                    </ThemedText.DeprecatedBody>\n                  </RowBetween>\n                </AutoColumn>\n              )}\n            </BlueCard>\n          )}\n\n          {largePriceDifference ? (\n            <YellowCard>\n              <AutoColumn gap=\"sm\">\n                <RowBetween>\n                  <ThemedText.DeprecatedBody fontSize={14}>\n                    <Trans>\n                      {isNotUniswap ? 'SushiSwap' : 'V2'} {invertPrice ? currency1.symbol : currency0.symbol} Price:\n                    </Trans>\n                  </ThemedText.DeprecatedBody>\n                  <ThemedText.DeprecatedBlack fontSize={14}>\n                    {invertPrice\n                      ? `${v2SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                      : `${v2SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n                  </ThemedText.DeprecatedBlack>\n                </RowBetween>\n\n                <RowBetween>\n                  <ThemedText.DeprecatedBody fontSize={14}>\n                    <Trans>V3 {invertPrice ? currency1.symbol : currency0.symbol} Price:</Trans>\n                  </ThemedText.DeprecatedBody>\n                  <ThemedText.DeprecatedBlack fontSize={14}>\n                    {invertPrice\n                      ? `${v3SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                      : `${v3SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n                  </ThemedText.DeprecatedBlack>\n                </RowBetween>\n\n                <RowBetween>\n                  <ThemedText.DeprecatedBody fontSize={14} color=\"inherit\">\n                    <Trans>Price difference:</Trans>\n                  </ThemedText.DeprecatedBody>\n                  <ThemedText.DeprecatedBlack fontSize={14} color=\"inherit\">\n                    <Trans>{priceDifferenceFraction?.toSignificant(4)}%</Trans>\n                  </ThemedText.DeprecatedBlack>\n                </RowBetween>\n              </AutoColumn>\n              <ThemedText.DeprecatedBody fontSize={14} style={{ marginTop: 8, fontWeight: 485 }}>\n                <Trans>\n                  You should only deposit liquidity into Uniswap V3 at a price you believe is correct. <br />\n                  If the price seems incorrect, you can either make a swap to move the price or wait for someone else to\n                  do so.\n                </Trans>\n              </ThemedText.DeprecatedBody>\n            </YellowCard>\n          ) : !noLiquidity && v3SpotPrice ? (\n            <RowBetween>\n              <ThemedText.DeprecatedBody fontSize={14}>\n                <Trans>V3 {invertPrice ? currency1.symbol : currency0.symbol} Price:</Trans>\n              </ThemedText.DeprecatedBody>\n              <ThemedText.DeprecatedBlack fontSize={14}>\n                {invertPrice\n                  ? `${v3SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                  : `${v3SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n              </ThemedText.DeprecatedBlack>\n            </RowBetween>\n          ) : null}\n\n          <RowBetween>\n            <ThemedText.DeprecatedLabel>\n              <Trans>Set price range</Trans>\n            </ThemedText.DeprecatedLabel>\n            <RateToggle\n              currencyA={invertPrice ? currency1 : currency0}\n              currencyB={invertPrice ? currency0 : currency1}\n              handleRateToggle={() => {\n                onLeftRangeInput('')\n                onRightRangeInput('')\n                setBaseToken((base) => (base.equals(token0) ? token1 : token0))\n              }}\n            />\n          </RowBetween>\n\n          <RangeSelector\n            priceLower={priceLower}\n            priceUpper={priceUpper}\n            getDecrementLower={getDecrementLower}\n            getIncrementLower={getIncrementLower}\n            getDecrementUpper={getDecrementUpper}\n            getIncrementUpper={getIncrementUpper}\n            onLeftRangeInput={onLeftRangeInput}\n            onRightRangeInput={onRightRangeInput}\n            currencyA={invertPrice ? currency1 : currency0}\n            currencyB={invertPrice ? currency0 : currency1}\n            feeAmount={feeAmount}\n            ticksAtLimit={ticksAtLimit}\n          />\n\n          {outOfRange ? (\n            <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n              <RowBetween>\n                <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\n                  <Trans>\n                    Your position will not earn fees or be used in trades until the market price moves into your range.\n                  </Trans>\n                </ThemedText.DeprecatedYellow>\n              </RowBetween>\n            </YellowCard>\n          ) : null}\n\n          {invalidRange ? (\n            <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n              <RowBetween>\n                <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\n                  <Trans>Invalid range selected. The min price must be lower than the max price.</Trans>\n                </ThemedText.DeprecatedYellow>\n              </RowBetween>\n            </YellowCard>\n          ) : null}\n\n          {position ? (\n            <DarkGrayCard>\n              <AutoColumn gap=\"md\">\n                <LiquidityInfo token0Amount={position.amount0} token1Amount={position.amount1} />\n                {chainId && refund0 && refund1 ? (\n                  <ThemedText.DeprecatedBlack fontSize={12}>\n                    <Trans>\n                      At least {formatCurrencyAmount(refund0, 4)}{' '}\n                      {chainId && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(token0) ? 'ETH' : token0.symbol} and{' '}\n                      {formatCurrencyAmount(refund1, 4)}{' '}\n                      {chainId && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(token1) ? 'ETH' : token1.symbol} will be\n                      refunded to your wallet due to selected price range.\n                    </Trans>\n                  </ThemedText.DeprecatedBlack>\n                ) : null}\n              </AutoColumn>\n            </DarkGrayCard>\n          ) : null}\n\n          <AutoColumn gap=\"md\">\n            {!isSuccessfullyMigrated && !isMigrationPending ? (\n              <AutoColumn gap=\"md\" style={{ flex: '1' }}>\n                <ButtonConfirmed\n                  confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\n                  disabled={\n                    approval !== ApprovalState.NOT_APPROVED ||\n                    signatureData !== null ||\n                    !v3Amount0Min ||\n                    !v3Amount1Min ||\n                    invalidRange ||\n                    confirmingMigration\n                  }\n                  onClick={approve}\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving</Trans>\n                    </Dots>\n                  ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                    <Trans>Allowed</Trans>\n                  ) : (\n                    <Trans>Allow LP token migration</Trans>\n                  )}\n                </ButtonConfirmed>\n              </AutoColumn>\n            ) : null}\n            <AutoColumn gap=\"md\" style={{ flex: '1' }}>\n              <ButtonConfirmed\n                confirmed={isSuccessfullyMigrated}\n                disabled={\n                  !v3Amount0Min ||\n                  !v3Amount1Min ||\n                  invalidRange ||\n                  (approval !== ApprovalState.APPROVED && signatureData === null) ||\n                  confirmingMigration ||\n                  isMigrationPending ||\n                  isSuccessfullyMigrated\n                }\n                onClick={migrate}\n              >\n                {isSuccessfullyMigrated ? (\n                  'Success!'\n                ) : isMigrationPending ? (\n                  <Dots>\n                    <Trans>Migrating</Trans>\n                  </Dots>\n                ) : (\n                  <Trans>Migrate</Trans>\n                )}\n              </ButtonConfirmed>\n            </AutoColumn>\n          </AutoColumn>\n        </AutoColumn>\n      </LightCard>\n    </AutoColumn>\n  )\n}\n\nexport default function MigrateV2Pair() {\n  const { address } = useParams<{ address: string }>()\n  // reset mint state on component mount, and as a cleanup (on unmount)\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(resetMintState())\n    return () => {\n      dispatch(resetMintState())\n    }\n  }, [dispatch])\n\n  const { chainId, account } = useWeb3React()\n\n  // get pair contract\n  const validatedAddress = isAddress(address)\n  const pair = usePairContract(validatedAddress ? validatedAddress : undefined)\n\n  // get token addresses from pair contract\n  const token0AddressCallState = useSingleCallResult(pair, 'token0', undefined, NEVER_RELOAD)\n  const token0Address = token0AddressCallState?.result?.[0]\n  const token1Address = useSingleCallResult(pair, 'token1', undefined, NEVER_RELOAD)?.result?.[0]\n\n  // get tokens\n  const token0 = useToken(token0Address)\n  const token1 = useToken(token1Address)\n\n  // get liquidity token balance\n  const liquidityToken: Token | undefined = useMemo(\n    () => (chainId && validatedAddress ? new Token(chainId, validatedAddress, 18) : undefined),\n    [chainId, validatedAddress]\n  )\n\n  // get data required for V2 pair migration\n  const pairBalance = useTokenBalance(account ?? undefined, liquidityToken)\n  const totalSupply = useTotalSupply(liquidityToken)\n  const [reserve0Raw, reserve1Raw] = useSingleCallResult(pair, 'getReserves')?.result ?? []\n  const reserve0 = useMemo(\n    () => (token0 && reserve0Raw ? CurrencyAmount.fromRawAmount(token0, reserve0Raw) : undefined),\n    [token0, reserve0Raw]\n  )\n  const reserve1 = useMemo(\n    () => (token1 && reserve1Raw ? CurrencyAmount.fromRawAmount(token1, reserve1Raw) : undefined),\n    [token1, reserve1Raw]\n  )\n\n  // redirect for invalid url params\n  if (\n    !validatedAddress ||\n    !pair ||\n    (pair &&\n      token0AddressCallState?.valid &&\n      !token0AddressCallState?.loading &&\n      !token0AddressCallState?.error &&\n      !token0Address)\n  ) {\n    console.error('Invalid pair address')\n    return <Navigate to=\"/migrate/v2\" replace />\n  }\n\n  return (\n    <BodyWrapper style={{ padding: 24 }}>\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrowLink to=\"/migrate/v2\" />\n          <ThemedText.DeprecatedMediumHeader>\n            <Trans>Migrate V2 liquidity</Trans>\n          </ThemedText.DeprecatedMediumHeader>\n          <SettingsTab autoSlippage={DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE} chainId={chainId} />\n        </AutoRow>\n\n        {!account ? (\n          <ThemedText.DeprecatedLargeHeader>\n            <Trans>You must connect an account.</Trans>\n          </ThemedText.DeprecatedLargeHeader>\n        ) : pairBalance && totalSupply && reserve0 && reserve1 && token0 && token1 ? (\n          <V2PairMigration\n            pair={pair}\n            pairBalance={pairBalance}\n            totalSupply={totalSupply}\n            reserve0={reserve0}\n            reserve1={reserve1}\n            token0={token0}\n            token1={token1}\n          />\n        ) : (\n          <EmptyState message={<Trans>Loading</Trans>} />\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n","import { Currency, CurrencyAmount, Price } from '@uniswap/sdk-core'\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES } from 'constants/locales'\n\ninterface FormatLocaleNumberArgs {\n  number: CurrencyAmount<Currency> | Price<Currency, Currency> | number\n  locale?: string | null\n  options?: Intl.NumberFormatOptions\n  sigFigs?: number\n  fixedDecimals?: number\n}\n\nexport default function formatLocaleNumber({\n  number,\n  locale,\n  sigFigs,\n  fixedDecimals,\n  options = {},\n}: FormatLocaleNumberArgs): string {\n  let localeArg: string | string[]\n  if (!locale || (locale && !SUPPORTED_LOCALES.includes(locale))) {\n    localeArg = DEFAULT_LOCALE\n  } else {\n    localeArg = [locale, DEFAULT_LOCALE]\n  }\n  options.minimumFractionDigits = options.minimumFractionDigits || fixedDecimals\n  options.maximumFractionDigits = options.maximumFractionDigits || fixedDecimals\n\n  // Fixed decimals should override significant figures.\n  options.maximumSignificantDigits = options.maximumSignificantDigits || fixedDecimals ? undefined : sigFigs\n\n  let numberString: number\n  if (typeof number === 'number') {\n    numberString = fixedDecimals ? parseFloat(number.toFixed(fixedDecimals)) : number\n  } else {\n    const baseString = parseFloat(number.toSignificant(sigFigs))\n    numberString = fixedDecimals ? parseFloat(baseString.toFixed(fixedDecimals)) : baseString\n  }\n\n  return numberString.toLocaleString(localeArg, options)\n}\n","import { Currency, CurrencyAmount, Fraction } from '@uniswap/sdk-core'\nimport { DEFAULT_LOCALE, SupportedLocale } from 'constants/locales'\nimport JSBI from 'jsbi'\nimport formatLocaleNumber from 'lib/utils/formatLocaleNumber'\n\nexport function formatCurrencyAmount(\n  amount: CurrencyAmount<Currency> | undefined,\n  sigFigs: number,\n  locale: SupportedLocale = DEFAULT_LOCALE,\n  fixedDecimals?: number\n): string {\n  if (!amount) {\n    return '-'\n  }\n\n  if (JSBI.equal(amount.quotient, JSBI.BigInt(0))) {\n    return '0'\n  }\n\n  if (amount.divide(amount.decimalScale).lessThan(new Fraction(1, 100000))) {\n    return `<${formatLocaleNumber({ number: 0.00001, locale })}`\n  }\n\n  return formatLocaleNumber({ number: amount, locale, sigFigs, fixedDecimals })\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { asSupportedChain } from 'constants/chains'\n\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n  const formattedChainId = asSupportedChain(currency.chainId)\n  if (formattedChainId && WRAPPED_NATIVE_CURRENCY[formattedChainId]?.equals(currency))\n    return nativeOnChain(currency.chainId)\n  return currency\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Plus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nPlus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlus.displayName = 'Plus';\nexport default Plus;"],"names":["CURRENCY_AMOUNT_MIN","Fraction","JSBI","FormattedCurrencyAmount","currencyAmount","significantDigits","equalTo","greaterThan","toSignificant","ToggleWrapper","styled","button","width","theme","surface2","surface3","ToggleElement","span","isActive","surface1","neutral1","neutral3","fontSize","neutral2","RateToggle","currencyA","currencyB","handleRateToggle","tokenA","wrapped","tokenB","isSorted","sortsBefore","div","style","display","alignItems","onClick","symbol","TextWrapper","V2Unsupported","AutoColumn","gap","justify","ThemedText","BodySecondary","color","textAlign","useApproval","amountToApprove","spender","useIsPendingApproval","chainId","useWeb3React","token","currency","isToken","undefined","approvalState","account","tokenAllowance","useTokenAllowance","pendingApproval","useMemo","isNative","ApprovalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useApprovalStateForSpender","tokenContract","useTokenContract","address","approve","useCallback","async","logFailure","error","console","warn","useExact","estimatedGas","estimateGas","MaxUint256","catch","quotient","toString","gasLimit","calculateGasMargin","then","response","tokenAddress","spenderAddress","amount","useGetAndTrackApproval","getApproval","addTransaction","useTransactionAdder","pending","type","TransactionType","APPROVAL","useApproveCallback","approval","useHasPendingApproval","useNetworkSupportsV2","SUPPORTED_V2POOL_CHAIN_IDS","includes","POOL_STATE_INTERFACE","Interface","IUniswapV3PoolStateJSON","getPoolAddress","factoryAddress","fee","this","addresses","length","MAX_ENTRIES","slice","addressA","addressB","key","found","find","computePoolAddress","unshift","getPool","sqrtPriceX96","liquidity","tick","pools","pool","token0","token1","sqrtRatioX96","tickCurrent","Pool","usePool","feeAmount","poolKeys","poolTokens","map","equals","Array","poolAddresses","v3CoreFactoryAddress","value","PoolCache","slot0s","useMultipleContractSingleData","liquidities","_key","index","tokens","PoolState","INVALID","result","slot0","loading","slot0Loading","valid","slot0Valid","liquidityLoading","liquidityValid","LOADING","NOT_EXISTS","eq","EXISTS","usePools","useTotalSupply","contract","totalSupplyStr","useSingleCallResult","CurrencyAmount","fromRawAmount","PermitType","AMOUNT","ALLOWED","PERMIT_VALIDITY_BUFFER","PERMITTABLE_TOKENS","ChainId","MAINNET","USDC_MAINNET","name","version","DAI","UNI","GOERLI","SEPOLIA","UseERC20PermitState","NOT_APPLICABLE","NOT_SIGNED","SIGNED","EIP712_DOMAIN_TYPE","EIP712_DOMAIN_TYPE_NO_VERSION","EIP2612_TYPE","PERMIT_ALLOWED_TYPE","REMOVE_V2_LIQUIDITY_PERMIT_INFO","useV2LiquidityTokenPermit","liquidityAmount","transactionDeadline","overridePermitInfo","provider","eip2612Contract","useEIP2612Contract","isArgentWallet","useIsArgentWallet","nonceInputs","tokenNonceState","permitInfo","signatureData","setSignatureData","useState","state","gatherPermitSignature","nonceNumber","toNumber","isSignatureDataValid","owner","deadline","nonce","allowed","signatureDeadline","message","holder","expiry","domain","verifyingContract","data","JSON","stringify","types","EIP712Domain","Permit","primaryType","send","splitSignature","signature","v","r","s","permitType","useERC20Permit","useTransactionDeadline","BodyWrapper","main","$margin","$maxWidth","Z_INDEX","default","AppBody","props","ZERO","DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE","Percent","EmptyState","minHeight","justifyContent","DeprecatedBody","LiquidityInfo","token0Amount","token1Amount","currency0","unwrappedToken","currency1","RowBetween","RowFixed","CurrencyLogo","size","marginRight","Text","fontWeight","percentageToMigrate","V2PairMigration","pair","pairBalance","totalSupply","reserve0","reserve1","useTheme","v2FactoryAddress","V2_FACTORY_ADDRESSES","pairFactory","isNotUniswap","blockTimestamp","useCurrentBlockTimestamp","allowedSlippage","useUserSlippageToleranceWithDefault","token0Value","token1Value","setFeeAmount","FeeAmount","MEDIUM","poolState","noLiquidity","v2SpotPrice","Price","v3SpotPrice","token0Price","priceDifferenceFraction","divide","subtract","multiply","largePriceDifference","baseToken","setBaseToken","ticks","pricesAtTicks","invertPrice","invalidRange","outOfRange","ticksAtLimit","useV3DerivedMintInfo","Bound","LOWER","tickLower","UPPER","tickUpper","priceLower","priceUpper","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","useRangeHopCallbacks","onLeftRangeInput","onRightRangeInput","useV3MintActionHandlers","priceToClosestTick","sqrtPrice","TickMath","getSqrtRatioAtTick","position","Position","fromAmounts","amount0","amount1","useFullPrecision","v3Amount0Min","v3Amount1Min","mintAmountsWithSlippage","refund0","refund1","confirmingMigration","setConfirmingMigration","pendingMigrationHash","setPendingMigrationHash","migrator","useV2MigratorContract","approveManually","code","isMigrationPending","useIsTransactionPending","networkSupportsV2","migrate","deadlineToUse","push","interface","encodeFunctionData","liquidityToMigrate","amount0Min","amount1Min","recipient","refundAsETH","multicall","gasEstimate","MIGRATE_LIQUIDITY_V3","baseCurrencyId","currencyId","quoteCurrencyId","isFork","hash","isSuccessfullyMigrated","my","ExternalLink","href","getExplorerLink","ExplorerDataType","ADDRESS","DeprecatedBlue","LightCard","marginLeft","DoubleCurrencyLogo","margin","DeprecatedMediumHeader","Badge","variant","BadgeVariant","WARNING","ArrowDown","PRIMARY","FeeSelector","handleFeePoolSelect","BlueCard","flexDirection","AlertCircle","marginBottom","opacity","marginTop","invert","YellowCard","DeprecatedBlack","br","DeprecatedLabel","base","RangeSelector","padding","$borderRadius","AlertTriangle","stroke","deprecated_yellow3","DeprecatedYellow","ml","DarkGrayCard","formatCurrencyAmount","WRAPPED_NATIVE_CURRENCY","flex","ButtonConfirmed","confirmed","disabled","Dots","MigrateV2Pair","useParams","dispatch","useAppDispatch","useEffect","resetMintState","validatedAddress","isAddress","usePairContract","token0AddressCallState","NEVER_RELOAD","token0Address","token1Address","useToken","liquidityToken","Token","useTokenBalance","reserve0Raw","reserve1Raw","AutoRow","BackArrowLink","to","SettingsTab","autoSlippage","DeprecatedLargeHeader","Navigate","replace","formatLocaleNumber","number","locale","sigFigs","fixedDecimals","options","localeArg","numberString","SUPPORTED_LOCALES","DEFAULT_LOCALE","minimumFractionDigits","maximumFractionDigits","maximumSignificantDigits","parseFloat","toFixed","baseString","toLocaleString","decimalScale","formattedChainId","asSupportedChain","nativeOnChain","_extends"],"sourceRoot":""}